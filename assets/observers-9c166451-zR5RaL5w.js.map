{"version":3,"file":"observers-9c166451-zR5RaL5w.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/observers-9c166451.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { i as isBrowser } from './browser-618ac057.js';\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n    if (!isBrowser()) {\n        return undefined;\n    }\n    const Observer = getObserver(type);\n    return new Observer(callback, options);\n}\nfunction getObserver(type) {\n    // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n    class ExtendedMutationObserver extends window.MutationObserver {\n        constructor(callback) {\n            super(callback);\n            this.observedEntry = [];\n            this.callback = callback;\n        }\n        observe(target, options) {\n            this.observedEntry.push({ target, options });\n            return super.observe(target, options);\n        }\n        unobserve(target) {\n            const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n            this.observedEntry = [];\n            this.callback(super.takeRecords(), this);\n            this.disconnect();\n            newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n        }\n    }\n    return (function () {\n        return (type === \"intersection\"\n            ? window.IntersectionObserver\n            : type === \"mutation\"\n                ? ExtendedMutationObserver\n                : window.ResizeObserver);\n    })();\n}\n\nexport { createObserver as c };\n\n//# sourceMappingURL=observers-9c166451.js.map"],"names":["createObserver","type","callback","options","isBrowser","Observer","getObserver","ExtendedMutationObserver","target","newObservedEntries","observed"],"mappings":"wCAAA;AAAA;AAAA;AAAA;AAAA,GAcA,SAASA,EAAeC,EAAMC,EAAUC,EAAS,CAC7C,GAAI,CAACC,EAAS,EACV,OAEJ,MAAMC,EAAWC,EAAYL,CAAI,EACjC,OAAO,IAAII,EAASH,EAAUC,CAAO,CACzC,CACA,SAASG,EAAYL,EAAM,CAEvB,MAAMM,UAAiC,OAAO,gBAAiB,CAC3D,YAAYL,EAAU,CAClB,MAAMA,CAAQ,EACd,KAAK,cAAgB,CAAE,EACvB,KAAK,SAAWA,CAC5B,CACQ,QAAQM,EAAQL,EAAS,CACrB,YAAK,cAAc,KAAK,CAAE,OAAAK,EAAQ,QAAAL,CAAO,CAAE,EACpC,MAAM,QAAQK,EAAQL,CAAO,CAChD,CACQ,UAAUK,EAAQ,CACd,MAAMC,EAAqB,KAAK,cAAc,OAAQC,GAAaA,EAAS,SAAWF,CAAM,EAC7F,KAAK,cAAgB,CAAE,EACvB,KAAK,SAAS,MAAM,YAAW,EAAI,IAAI,EACvC,KAAK,WAAY,EACjBC,EAAmB,QAASC,GAAa,KAAK,QAAQA,EAAS,OAAQA,EAAS,OAAO,CAAC,CACpG,CACA,CACI,OAAQ,UAAY,CAChB,OAAQT,IAAS,eACX,OAAO,qBACPA,IAAS,WACLM,EACA,OAAO,cACzB,EAAQ,CACR","x_google_ignoreList":[0]}
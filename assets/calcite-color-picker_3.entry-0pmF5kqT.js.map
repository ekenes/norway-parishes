{"version":3,"file":"calcite-color-picker_3.entry-0pmF5kqT.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/calcite-color-picker_3.entry.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement, F as Fragment } from './index-abe3b66e.js';\nimport { C as CSSColorMode, n as normalizeHex, a as hexify, b as Color, o as opacityToAlpha, c as CSS$2, d as alphaToOpacity, D as DEFAULT_COLOR$1, e as DIMENSIONS, f as alphaCompatible, g as getSliderWidth, p as parseMode, j as normalizeColor, k as colorEqual, R as RGB_LIMITS, H as HSV_LIMITS, O as OPACITY_LIMITS, t as toNonAlphaMode, l as normalizeAlpha, m as HUE_LIMIT_CONSTRAINED, S as SCOPE_SIZE, q as DEFAULT_STORAGE_KEY_PREFIX, r as toAlphaMode, s as isLonghandHex, u as isShorthandHex, i as isValidHex, v as rgbToHex, w as hexChar } from './utils-3daeffe5.js';\nimport { u as isPrimaryPointerButton, g as getElementDir, f as focusFirstTabbable, d as focusElement, i as getModeName } from './dom-b6dedd88.js';\nimport { u as updateHostInteraction, I as InteractiveContainer } from './interactive-1a42577a.js';\nimport { i as isActivationKey } from './key-3ee05994.js';\nimport { c as componentFocusable, s as setUpLoadableComponent, a as setComponentLoaded } from './loadable-13e9ffb2.js';\nimport { c as connectLocalized, d as disconnectLocalized } from './locale-60f8ca58.js';\nimport { r as remap, c as clamp, a as closeToRangeEdge } from './math-682795d0.js';\nimport { u as updateMessages, s as setUpMessages, c as connectMessages, d as disconnectMessages } from './t9n-75defee3.js';\nimport { t as throttle } from './throttle-1a76fbfb.js';\nimport './guid-9c230b6a.js';\nimport './resources-a23d2491.js';\nimport './browser-618ac057.js';\nimport './observers-9c166451.js';\nimport './debounce-6e4946fd.js';\n\nconst colorPickerCss = \":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:inline-block;font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-normal)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([scale=s]){--calcite-color-picker-spacing:8px}:host([scale=s]) .container{inline-size:160px}:host([scale=s]) .saved-colors{gap:0.25rem;grid-template-columns:repeat(auto-fill, 20px)}:host([scale=m]){--calcite-color-picker-spacing:12px}:host([scale=m]) .container{inline-size:272px}:host([scale=l]){--calcite-color-picker-spacing:16px;font-size:var(--calcite-font-size--1);line-height:1rem}:host([scale=l]) .container{inline-size:464px}:host([scale=l]) .section:first-of-type{padding-block-start:var(--calcite-color-picker-spacing)}:host([scale=l]) .saved-colors{grid-template-columns:repeat(auto-fill, 32px)}:host([scale=l]) .control-section{flex-wrap:nowrap;align-items:baseline;flex-wrap:wrap}:host([scale=l]) .color-hex-options{display:flex;flex-shrink:1;flex-direction:column;justify-content:space-around}:host([scale=l]) .color-mode-container{flex-shrink:3}.container{background-color:var(--calcite-color-foreground-1);display:inline-block;border:1px solid var(--calcite-color-border-1)}.control-and-scope{position:relative;display:flex;cursor:pointer;touch-action:none}.color-field,.control-and-scope{-webkit-user-select:none;user-select:none}.scope{pointer-events:none;position:absolute;z-index:var(--calcite-z-index);block-size:1px;inline-size:1px;border-radius:9999px;background-color:transparent;font-size:var(--calcite-font-size--1);outline-color:transparent}.scope:focus{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));outline-offset:calc(\\n            2px *\\n            calc(\\n              1 -\\n              2 * clamp(\\n                0,\\n                var(--calcite-offset-invert-focus),\\n                1\\n              )\\n            )\\n          );outline-offset:6px}.hex-and-channels-group{inline-size:100%}.hex-and-channels-group,.control-section{display:flex;flex-direction:row;flex-wrap:wrap}.section{padding-block:0 var(--calcite-color-picker-spacing);padding-inline:var(--calcite-color-picker-spacing)}.section:first-of-type{padding-block-start:var(--calcite-color-picker-spacing)}.sliders{display:flex;flex-direction:column;justify-content:space-between;margin-inline-start:var(--calcite-color-picker-spacing);gap:var(--calcite-spacing-xxs)}.preview-and-sliders{display:flex;align-items:center;padding:var(--calcite-color-picker-spacing)}.color-hex-options,.section--split{flex-grow:1}.header{display:flex;align-items:center;justify-content:space-between;color:var(--calcite-color-text-1)}.color-mode-container{padding-block-start:var(--calcite-color-picker-spacing)}.channels{display:flex;row-gap:0.125rem}.channel[data-channel-index=\\\"3\\\"]{inline-size:159px}:host([scale=s]) .channels{flex-wrap:wrap}:host([scale=s]) .channel{flex-basis:30%;flex-grow:1}:host([scale=s]) .channel[data-channel-index=\\\"3\\\"]{inline-size:unset;margin-inline-start:unset}:host([scale=l]) .channel[data-channel-index=\\\"3\\\"]{inline-size:131px}.saved-colors{display:grid;gap:0.5rem;padding-block-start:var(--calcite-color-picker-spacing);grid-template-columns:repeat(auto-fill, 24px)}.saved-colors-buttons{display:flex}.saved-color{outline-offset:0;outline-color:transparent;cursor:pointer}.saved-color:focus{outline:2px solid var(--calcite-color-brand);outline-offset:2px}.saved-color:hover{transition:outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;outline:2px solid var(--calcite-color-border-2);outline-offset:2px}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteColorPickerStyle0 = colorPickerCss;\n\nconst throttleFor60FpsInMs = 16;\nconst ColorPicker = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.calciteColorPickerChange = createEvent(this, \"calciteColorPickerChange\", 6);\n        this.calciteColorPickerInput = createEvent(this, \"calciteColorPickerInput\", 6);\n        this.internalColorUpdateContext = null;\n        this.isActiveChannelInputEmpty = false;\n        this.mode = CSSColorMode.HEX;\n        this.shiftKeyChannelAdjustment = 0;\n        this.upOrDownArrowKeyTracker = null;\n        this.handleTabActivate = (event) => {\n            this.channelMode = event.currentTarget.getAttribute(\"data-color-mode\");\n            this.updateChannelsFromColor(this.color);\n        };\n        this.handleColorFieldScopeKeyDown = (event) => {\n            const { key } = event;\n            const arrowKeyToXYOffset = {\n                ArrowUp: { x: 0, y: -10 },\n                ArrowRight: { x: 10, y: 0 },\n                ArrowDown: { x: 0, y: 10 },\n                ArrowLeft: { x: -10, y: 0 },\n            };\n            if (arrowKeyToXYOffset[key]) {\n                event.preventDefault();\n                this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n                this.captureColorFieldColor(this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0, this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0, false);\n            }\n        };\n        this.handleHueScopeKeyDown = (event) => {\n            const modifier = event.shiftKey ? 10 : 1;\n            const { key } = event;\n            const arrowKeyToXOffset = {\n                ArrowUp: 1,\n                ArrowRight: 1,\n                ArrowDown: -1,\n                ArrowLeft: -1,\n            };\n            if (arrowKeyToXOffset[key]) {\n                event.preventDefault();\n                const delta = arrowKeyToXOffset[key] * modifier;\n                const hue = this.baseColorFieldColor.hue();\n                const color = this.baseColorFieldColor.hue(hue + delta);\n                this.internalColorSet(color, false);\n            }\n        };\n        this.handleHexInputChange = (event) => {\n            event.stopPropagation();\n            const { isClearable, color } = this;\n            const input = event.target;\n            const hex = input.value;\n            if (isClearable && !hex) {\n                this.internalColorSet(null);\n                return;\n            }\n            const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n            if (hex !== normalizedHex) {\n                this.internalColorSet(Color(hex));\n            }\n        };\n        this.handleSavedColorSelect = (event) => {\n            const swatch = event.currentTarget;\n            this.internalColorSet(Color(swatch.color));\n        };\n        this.handleChannelInput = (event) => {\n            const input = event.currentTarget;\n            const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n            const isAlphaChannel = channelIndex === 3;\n            const limit = isAlphaChannel\n                ? OPACITY_LIMITS.max\n                : this.channelMode === \"rgb\"\n                    ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n                    : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n            let inputValue;\n            if (!input.value) {\n                inputValue = \"\";\n                this.isActiveChannelInputEmpty = true;\n                // reset this to allow typing in new value, when channel input is cleared after ArrowUp or ArrowDown have been pressed\n                this.upOrDownArrowKeyTracker = null;\n            }\n            else {\n                const value = Number(input.value);\n                const adjustedValue = value + this.shiftKeyChannelAdjustment;\n                const clamped = clamp(adjustedValue, 0, limit);\n                inputValue = clamped.toString();\n            }\n            input.value = inputValue;\n            if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n                // we treat nudging as a change event since the input won't emit when modifying the value directly\n                this.handleChannelChange(event);\n            }\n            else if (inputValue !== \"\") {\n                this.handleChannelChange(event);\n            }\n        };\n        this.handleChannelBlur = (event) => {\n            const input = event.currentTarget;\n            const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n            const channels = [...this.channels];\n            const restoreValueDueToEmptyInput = !input.value && !this.isClearable;\n            if (restoreValueDueToEmptyInput) {\n                input.value = channels[channelIndex]?.toString();\n            }\n        };\n        this.handleChannelFocus = (event) => {\n            const input = event.currentTarget;\n            input.selectText();\n        };\n        this.handleChannelChange = (event) => {\n            const input = event.currentTarget;\n            const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n            const channels = [...this.channels];\n            const shouldClearChannels = this.isClearable && !input.value;\n            if (shouldClearChannels) {\n                this.channels = [null, null, null, null];\n                this.internalColorSet(null);\n                return;\n            }\n            const isAlphaChannel = channelIndex === 3;\n            if (this.isActiveChannelInputEmpty && this.upOrDownArrowKeyTracker) {\n                input.value =\n                    this.upOrDownArrowKeyTracker === \"up\"\n                        ? (channels[channelIndex] + 1 <= this.getChannelInputLimit(channelIndex)\n                            ? channels[channelIndex] + 1\n                            : this.getChannelInputLimit(channelIndex)).toString()\n                        : (channels[channelIndex] - 1 >= 0 ? channels[channelIndex] - 1 : 0).toString();\n                this.isActiveChannelInputEmpty = false;\n                this.upOrDownArrowKeyTracker = null;\n            }\n            const value = input.value ? Number(input.value) : channels[channelIndex];\n            channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n            this.updateColorFromChannels(channels);\n        };\n        this.handleSavedColorKeyDown = (event) => {\n            if (isActivationKey(event.key)) {\n                event.preventDefault();\n                this.handleSavedColorSelect(event);\n            }\n        };\n        this.handleColorFieldPointerDown = (event) => {\n            this.handleCanvasControlPointerDown(event, this.colorFieldRenderingContext, this.captureColorFieldColor, this.colorFieldScopeNode);\n        };\n        this.handleHueSliderPointerDown = (event) => {\n            this.handleCanvasControlPointerDown(event, this.hueSliderRenderingContext, this.captureHueSliderColor, this.hueScopeNode);\n        };\n        this.handleOpacitySliderPointerDown = (event) => {\n            this.handleCanvasControlPointerDown(event, this.opacitySliderRenderingContext, this.captureOpacitySliderValue, this.opacityScopeNode);\n        };\n        this.globalPointerUpHandler = (event) => {\n            if (!isPrimaryPointerButton(event)) {\n                return;\n            }\n            const previouslyDragging = this.activeCanvasInfo;\n            this.activeCanvasInfo = null;\n            this.drawColorControls();\n            if (previouslyDragging) {\n                this.calciteColorPickerChange.emit();\n            }\n        };\n        this.globalPointerMoveHandler = (event) => {\n            const { activeCanvasInfo, el } = this;\n            if (!el.isConnected || !activeCanvasInfo) {\n                return;\n            }\n            const { context, bounds } = activeCanvasInfo;\n            let samplingX;\n            let samplingY;\n            const { clientX, clientY } = event;\n            if (context.canvas.matches(\":hover\")) {\n                samplingX = clientX - bounds.x;\n                samplingY = clientY - bounds.y;\n            }\n            else {\n                // snap x and y to the closest edge\n                if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n                    samplingX = clientX - bounds.x;\n                }\n                else if (clientX < bounds.x) {\n                    samplingX = 0;\n                }\n                else {\n                    samplingX = bounds.width;\n                }\n                if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n                    samplingY = clientY - bounds.y;\n                }\n                else if (clientY < bounds.y) {\n                    samplingY = 0;\n                }\n                else {\n                    samplingY = bounds.height;\n                }\n            }\n            if (context === this.colorFieldRenderingContext) {\n                this.captureColorFieldColor(samplingX, samplingY, false);\n            }\n            else if (context === this.hueSliderRenderingContext) {\n                this.captureHueSliderColor(samplingX);\n            }\n            else if (context === this.opacitySliderRenderingContext) {\n                this.captureOpacitySliderValue(samplingX);\n            }\n        };\n        this.storeColorFieldScope = (node) => {\n            this.colorFieldScopeNode = node;\n        };\n        this.storeHueScope = (node) => {\n            this.hueScopeNode = node;\n        };\n        this.renderChannelsTabTitle = (channelMode) => {\n            const { channelMode: activeChannelMode, messages } = this;\n            const selected = channelMode === activeChannelMode;\n            const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n            return (h(\"calcite-tab-title\", { class: CSS$2.colorMode, \"data-color-mode\": channelMode, key: channelMode, onCalciteTabsActivate: this.handleTabActivate, selected: selected }, label));\n        };\n        this.renderChannelsTab = (channelMode) => {\n            const { isClearable, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n            const selected = channelMode === activeChannelMode;\n            const isRgb = channelMode === \"rgb\";\n            const channelAriaLabels = isRgb\n                ? [messages.red, messages.green, messages.blue]\n                : [messages.hue, messages.saturation, messages.value];\n            const direction = getElementDir(this.el);\n            const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n            return (h(\"calcite-tab\", { class: CSS$2.control, key: channelMode, selected: selected }, h(\"div\", { class: CSS$2.channels, dir: \"ltr\" }, channelsToRender.map((channelValue, index) => {\n                const isAlphaChannel = index === 3;\n                if (isAlphaChannel) {\n                    channelValue =\n                        isClearable && !channelValue ? channelValue : alphaToOpacity(channelValue);\n                }\n                /* the channel container is ltr, so we apply the host's direction */\n                return this.renderChannel(channelValue, index, channelAriaLabels[index], direction, isAlphaChannel ? \"%\" : \"\");\n            }))));\n        };\n        this.renderChannel = (value, index, ariaLabel, direction, suffix) => {\n            return (h(\"calcite-input-number\", { class: CSS$2.channel, \"data-channel-index\": index, dir: direction, key: index, label: ariaLabel, lang: this.effectiveLocale, numberButtonType: \"none\", numberingSystem: this.numberingSystem, onCalciteInputNumberChange: this.handleChannelChange, onCalciteInputNumberInput: this.handleChannelInput, onCalciteInternalInputNumberBlur: this.handleChannelBlur, onCalciteInternalInputNumberFocus: this.handleChannelFocus, onKeyDown: this.handleKeyDown, scale: this.scale === \"l\" ? \"m\" : \"s\",\n                // workaround to ensure input borders overlap as desired\n                // this is because the build transforms margin-left to its\n                // logical-prop, which is undesired as channels are always ltr\n                style: {\n                    marginLeft: index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\",\n                }, suffixText: suffix, value: value?.toString() }));\n        };\n        this.deleteColor = () => {\n            const colorToDelete = hexify(this.color, this.alphaChannel);\n            const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n            if (!inStorage) {\n                return;\n            }\n            const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n            this.savedColors = savedColors;\n            const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n            if (this.storageId) {\n                localStorage.setItem(storageKey, JSON.stringify(savedColors));\n            }\n        };\n        this.saveColor = () => {\n            const colorToSave = hexify(this.color, this.alphaChannel);\n            const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n            if (alreadySaved) {\n                return;\n            }\n            const savedColors = [...this.savedColors, colorToSave];\n            this.savedColors = savedColors;\n            const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n            if (this.storageId) {\n                localStorage.setItem(storageKey, JSON.stringify(savedColors));\n            }\n        };\n        this.drawColorControls = throttle((type = \"all\") => {\n            if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n                this.drawColorField();\n            }\n            if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n                this.drawHueSlider();\n            }\n            if (this.alphaChannel &&\n                (type === \"all\" || type === \"opacity-slider\") &&\n                this.opacitySliderRenderingContext) {\n                this.drawOpacitySlider();\n            }\n        }, throttleFor60FpsInMs);\n        this.captureColorFieldColor = (x, y, skipEqual = true) => {\n            const { dimensions: { colorField: { height, width }, }, } = this;\n            const saturation = Math.round((HSV_LIMITS.s / width) * x);\n            const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n            this.internalColorSet(this.baseColorFieldColor.hsv().saturationv(saturation).value(value), skipEqual);\n        };\n        this.initColorField = (canvas) => {\n            this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n            this.updateCanvasSize(\"color-field\");\n            this.drawColorControls();\n        };\n        this.initHueSlider = (canvas) => {\n            this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n            this.updateCanvasSize(\"hue-slider\");\n            this.drawHueSlider();\n        };\n        this.initOpacitySlider = (canvas) => {\n            if (!canvas) {\n                return;\n            }\n            this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n            this.updateCanvasSize(\"opacity-slider\");\n            this.drawOpacitySlider();\n        };\n        this.storeOpacityScope = (node) => {\n            this.opacityScopeNode = node;\n        };\n        this.handleOpacityScopeKeyDown = (event) => {\n            const modifier = event.shiftKey ? 10 : 1;\n            const { key } = event;\n            const arrowKeyToXOffset = {\n                ArrowUp: 0.01,\n                ArrowRight: 0.01,\n                ArrowDown: -0.01,\n                ArrowLeft: -0.01,\n            };\n            if (arrowKeyToXOffset[key]) {\n                event.preventDefault();\n                const delta = arrowKeyToXOffset[key] * modifier;\n                const alpha = this.baseColorFieldColor.alpha();\n                const color = this.baseColorFieldColor.alpha(alpha + delta);\n                this.internalColorSet(color, false);\n            }\n        };\n        this.allowEmpty = false;\n        this.alphaChannel = false;\n        this.channelsDisabled = false;\n        this.clearable = false;\n        this.color = DEFAULT_COLOR$1;\n        this.disabled = false;\n        this.format = \"auto\";\n        this.hideChannels = false;\n        this.hexDisabled = false;\n        this.hideHex = false;\n        this.hideSaved = false;\n        this.savedDisabled = false;\n        this.scale = \"m\";\n        this.storageId = undefined;\n        this.messageOverrides = undefined;\n        this.numberingSystem = undefined;\n        this.value = normalizeHex(hexify(DEFAULT_COLOR$1, this.alphaChannel));\n        this.channelMode = \"rgb\";\n        this.channels = this.toChannels(DEFAULT_COLOR$1);\n        this.defaultMessages = undefined;\n        this.dimensions = DIMENSIONS.m;\n        this.effectiveLocale = \"\";\n        this.messages = undefined;\n        this.savedColors = [];\n        this.colorFieldScopeTop = undefined;\n        this.colorFieldScopeLeft = undefined;\n        this.hueScopeLeft = undefined;\n        this.opacityScopeLeft = undefined;\n        this.scopeOrientation = undefined;\n    }\n    handleAllowEmptyOrClearableChange() {\n        this.isClearable = this.clearable || this.allowEmpty;\n    }\n    handleAlphaChannelChange(alphaChannel) {\n        const { format } = this;\n        if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n            console.warn(`ignoring alphaChannel as the current format (${format}) does not support alpha`);\n            this.alphaChannel = false;\n        }\n    }\n    handleAlphaChannelDimensionsChange() {\n        this.effectiveSliderWidth = getSliderWidth(this.dimensions, this.alphaChannel);\n        this.drawColorControls();\n    }\n    handleColorChange(color, oldColor) {\n        this.drawColorControls();\n        this.updateChannelsFromColor(color);\n        this.previousColor = oldColor;\n    }\n    handleFormatOrAlphaChannelChange() {\n        this.setMode(this.format);\n        this.internalColorSet(this.color, false, \"internal\");\n    }\n    handleScaleChange(scale = \"m\") {\n        this.updateDimensions(scale);\n        this.updateCanvasSize(\"all\");\n        this.drawColorControls();\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    handleValueChange(value, oldValue) {\n        const { isClearable, format } = this;\n        const checkMode = !isClearable || value;\n        let modeChanged = false;\n        if (checkMode) {\n            const nextMode = parseMode(value);\n            if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n                this.showIncompatibleColorWarning(value, format);\n                this.value = oldValue;\n                return;\n            }\n            modeChanged = this.mode !== nextMode;\n            this.setMode(nextMode, this.internalColorUpdateContext === null);\n        }\n        const dragging = this.activeCanvasInfo;\n        if (this.internalColorUpdateContext === \"initial\") {\n            return;\n        }\n        if (this.internalColorUpdateContext === \"user-interaction\") {\n            this.calciteColorPickerInput.emit();\n            if (!dragging) {\n                this.calciteColorPickerChange.emit();\n            }\n            return;\n        }\n        const color = isClearable && !value\n            ? null\n            : Color(value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n                ? normalizeColor(value)\n                : value);\n        const colorChanged = !colorEqual(color, this.color);\n        if (modeChanged || colorChanged) {\n            this.internalColorSet(color, this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")), \"internal\");\n        }\n    }\n    get baseColorFieldColor() {\n        return this.color || this.previousColor || DEFAULT_COLOR$1;\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    // using @Listen as a workaround for VDOM listener not firing\n    handleChannelKeyUpOrDown(event) {\n        this.shiftKeyChannelAdjustment = 0;\n        const { key } = event;\n        if ((key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n            !event.composedPath().some((node) => node.classList?.contains(CSS$2.channel))) {\n            return;\n        }\n        const { shiftKey } = event;\n        event.preventDefault();\n        if (!this.color) {\n            this.internalColorSet(this.previousColor);\n            event.stopPropagation();\n            return;\n        }\n        // this gets applied to the input's up/down arrow increment/decrement\n        const complementaryBump = 9;\n        this.shiftKeyChannelAdjustment =\n            key === \"ArrowUp\" && shiftKey\n                ? complementaryBump\n                : key === \"ArrowDown\" && shiftKey\n                    ? -complementaryBump\n                    : 0;\n        if (key === \"ArrowUp\") {\n            this.upOrDownArrowKeyTracker = \"up\";\n        }\n        if (key === \"ArrowDown\") {\n            this.upOrDownArrowKeyTracker = \"down\";\n        }\n    }\n    getChannelInputLimit(channelIndex) {\n        return this.channelMode === \"rgb\"\n            ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n            : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n    }\n    focusScope(focusEl) {\n        requestAnimationFrame(() => {\n            focusEl.focus();\n        });\n    }\n    handleCanvasControlPointerDown(event, renderingContext, captureValue, scopeNode) {\n        if (!isPrimaryPointerButton(event)) {\n            return;\n        }\n        window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n        window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n        this.activeCanvasInfo = {\n            context: renderingContext,\n            bounds: renderingContext.canvas.getBoundingClientRect(),\n        };\n        captureValue.call(this, event.offsetX, event.offsetY);\n        this.focusScope(scopeNode);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component's first focusable element. */\n    async setFocus() {\n        await componentFocusable(this);\n        focusFirstTabbable(this.el);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        this.handleAllowEmptyOrClearableChange();\n        this.handleAlphaChannelDimensionsChange();\n        const { isClearable, color, format, value } = this;\n        const willSetNoColor = isClearable && !value;\n        const parsedMode = parseMode(value);\n        const valueIsCompatible = willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n        const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n        if (!valueIsCompatible) {\n            this.showIncompatibleColorWarning(value, format);\n        }\n        this.setMode(format, false);\n        this.internalColorSet(initialColor, false, \"initial\");\n        this.updateDimensions(this.scale);\n        const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n        if (this.storageId && localStorage.getItem(storageKey)) {\n            this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n        }\n        await setUpMessages(this);\n    }\n    connectedCallback() {\n        connectLocalized(this);\n        connectMessages(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n        window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    //--------------------------------------------------------------------------\n    render() {\n        const { channelsDisabled, color, colorFieldScopeLeft, colorFieldScopeTop, dimensions: { thumb: { radius: thumbRadius }, }, hexDisabled, hideChannels, hideHex, hideSaved, hueScopeLeft, messages, alphaChannel, opacityScopeLeft, savedColors, savedDisabled, scale, scopeOrientation, } = this;\n        const sliderWidth = this.effectiveSliderWidth;\n        const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n        const hueTop = thumbRadius;\n        const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR$1.hue()) / HSV_LIMITS.h;\n        const opacityTop = thumbRadius;\n        const opacityLeft = opacityScopeLeft ??\n            (sliderWidth * alphaToOpacity(DEFAULT_COLOR$1.alpha())) / OPACITY_LIMITS.max;\n        const noColor = color === null;\n        const vertical = scopeOrientation === \"vertical\";\n        const noHex = hexDisabled || hideHex;\n        const noChannels = channelsDisabled || hideChannels;\n        const noSaved = savedDisabled || hideSaved;\n        const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(colorFieldScopeLeft, colorFieldScopeTop);\n        const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(hueLeft, hueTop);\n        const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(opacityLeft, opacityTop);\n        return (h(InteractiveContainer, { key: 'c4837ef7cbe25b5fc3f0c72fe82d0090c6e0cdb5', disabled: this.disabled }, h(\"div\", { key: '28230570482ee9d33df9518e3cca534e3fac44ac', class: CSS$2.container }, h(\"div\", { key: '83172bc55f13955f5b69b59300e68642d59999af', class: CSS$2.controlAndScope }, h(\"canvas\", { key: 'c20db7054ab5ebdb1e13ba295ac463609c44de47', class: CSS$2.colorField, onPointerDown: this.handleColorFieldPointerDown, ref: this.initColorField }), h(\"div\", { key: '1e44beb121ed5a2247a6d69bf42c49a7f1ce5829', \"aria-label\": vertical ? messages.value : messages.saturation, \"aria-valuemax\": vertical ? HSV_LIMITS.v : HSV_LIMITS.s, \"aria-valuemin\": \"0\", \"aria-valuenow\": (vertical ? color?.saturationv() : color?.value()) || \"0\", class: { [CSS$2.scope]: true, [CSS$2.colorFieldScope]: true }, onKeyDown: this.handleColorFieldScopeKeyDown, ref: this.storeColorFieldScope, role: \"slider\", style: {\n                top: `${adjustedColorFieldScopeTop || 0}px`,\n                left: `${adjustedColorFieldScopeLeft || 0}px`,\n            }, tabindex: \"0\" })), h(\"div\", { key: '5b873f4e7266cc654086f59c8483d3b4a65c8e8f', class: CSS$2.previewAndSliders }, h(\"calcite-color-picker-swatch\", { key: 'db7c903a933ed061cc2edcd766fde70a8b670f00', class: CSS$2.preview, color: selectedColorInHex, scale: this.alphaChannel ? \"l\" : this.scale }), h(\"div\", { key: '33ea2354cbcfaa6677e82713bd8f02d1b83a9c26', class: CSS$2.sliders }, h(\"div\", { key: '28493b4bd177b8c97583cabeb5716a7cb7202e76', class: CSS$2.controlAndScope }, h(\"canvas\", { key: 'd0a9ce7fb098b7434cd62f68b6b6092efcef3dc4', class: { [CSS$2.slider]: true, [CSS$2.hueSlider]: true }, onPointerDown: this.handleHueSliderPointerDown, ref: this.initHueSlider }), h(\"div\", { key: '2356120385aabf09384f0077dffb7881c55c5ea9', \"aria-label\": messages.hue, \"aria-valuemax\": HSV_LIMITS.h, \"aria-valuemin\": \"0\", \"aria-valuenow\": color?.round().hue() || DEFAULT_COLOR$1.round().hue(), class: { [CSS$2.scope]: true, [CSS$2.hueScope]: true }, onKeyDown: this.handleHueScopeKeyDown, ref: this.storeHueScope, role: \"slider\", style: {\n                top: `${adjustedHueScopeTop}px`,\n                left: `${adjustedHueScopeLeft}px`,\n            }, tabindex: \"0\" })), alphaChannel ? (h(\"div\", { class: CSS$2.controlAndScope }, h(\"canvas\", { class: { [CSS$2.slider]: true, [CSS$2.opacitySlider]: true }, onPointerDown: this.handleOpacitySliderPointerDown, ref: this.initOpacitySlider }), h(\"div\", { \"aria-label\": messages.opacity, \"aria-valuemax\": OPACITY_LIMITS.max, \"aria-valuemin\": OPACITY_LIMITS.min, \"aria-valuenow\": (color || DEFAULT_COLOR$1).round().alpha(), class: { [CSS$2.scope]: true, [CSS$2.opacityScope]: true }, onKeyDown: this.handleOpacityScopeKeyDown, ref: this.storeOpacityScope, role: \"slider\", style: {\n                top: `${adjustedOpacityScopeTop}px`,\n                left: `${adjustedOpacityScopeLeft}px`,\n            }, tabindex: \"0\" }))) : null)), noHex && noChannels ? null : (h(\"div\", { class: {\n                [CSS$2.controlSection]: true,\n                [CSS$2.section]: true,\n            } }, h(\"div\", { class: CSS$2.hexAndChannelsGroup }, noHex ? null : (h(\"div\", { class: CSS$2.hexOptions }, h(\"calcite-color-picker-hex-input\", { allowEmpty: this.isClearable, alphaChannel: alphaChannel, class: CSS$2.control, messages: messages, numberingSystem: this.numberingSystem, onCalciteColorPickerHexInputChange: this.handleHexInputChange, scale: scale, value: selectedColorInHex }))), noChannels ? null : (h(\"calcite-tabs\", { class: {\n                [CSS$2.colorModeContainer]: true,\n                [CSS$2.splitSection]: true,\n            }, scale: scale === \"l\" ? \"m\" : \"s\" }, h(\"calcite-tab-nav\", { slot: \"title-group\" }, this.renderChannelsTabTitle(\"rgb\"), this.renderChannelsTabTitle(\"hsv\")), this.renderChannelsTab(\"rgb\"), this.renderChannelsTab(\"hsv\")))))), noSaved ? null : (h(\"div\", { class: { [CSS$2.savedColorsSection]: true, [CSS$2.section]: true } }, h(\"div\", { class: CSS$2.header }, h(\"label\", null, messages.saved), h(\"div\", { class: CSS$2.savedColorsButtons }, h(\"calcite-button\", { appearance: \"transparent\", class: CSS$2.deleteColor, disabled: noColor, iconStart: \"minus\", kind: \"neutral\", label: messages.deleteColor, onClick: this.deleteColor, scale: scale, type: \"button\" }), h(\"calcite-button\", { appearance: \"transparent\", class: CSS$2.saveColor, disabled: noColor, iconStart: \"plus\", kind: \"neutral\", label: messages.saveColor, onClick: this.saveColor, scale: scale, type: \"button\" }))), savedColors.length > 0 ? (h(\"div\", { class: CSS$2.savedColors }, [\n            ...savedColors.map((color) => (h(\"calcite-color-picker-swatch\", { class: CSS$2.savedColor, color: color, key: color, onClick: this.handleSavedColorSelect, onKeyDown: this.handleSavedColorKeyDown, scale: scale, tabIndex: 0 }))),\n        ])) : null)))));\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    handleKeyDown(event) {\n        if (event.key === \"Enter\") {\n            event.preventDefault();\n        }\n    }\n    showIncompatibleColorWarning(value, format) {\n        console.warn(`ignoring color value (${value}) as it is not compatible with the current format (${format})`);\n    }\n    setMode(format, warn = true) {\n        const mode = format === \"auto\" ? this.mode : format;\n        this.mode = this.ensureCompatibleMode(mode, warn);\n    }\n    ensureCompatibleMode(mode, warn) {\n        const { alphaChannel } = this;\n        const isAlphaCompatible = alphaCompatible(mode);\n        if (alphaChannel && !isAlphaCompatible) {\n            const alphaMode = toAlphaMode(mode);\n            if (warn) {\n                console.warn(`setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`);\n            }\n            return alphaMode;\n        }\n        if (!alphaChannel && isAlphaCompatible) {\n            const nonAlphaMode = toNonAlphaMode(mode);\n            if (warn) {\n                console.warn(`setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`);\n            }\n            return nonAlphaMode;\n        }\n        return mode;\n    }\n    captureHueSliderColor(x) {\n        const hue = (HUE_LIMIT_CONSTRAINED / this.effectiveSliderWidth) * x;\n        this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n    }\n    captureOpacitySliderValue(x) {\n        const alpha = opacityToAlpha((OPACITY_LIMITS.max / this.effectiveSliderWidth) * x);\n        this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n    }\n    internalColorSet(color, skipEqual = true, context = \"user-interaction\") {\n        if (skipEqual && colorEqual(color, this.color)) {\n            return;\n        }\n        this.internalColorUpdateContext = context;\n        this.color = color;\n        this.value = this.toValue(color);\n        this.internalColorUpdateContext = null;\n    }\n    toValue(color, format = this.mode) {\n        if (!color) {\n            return null;\n        }\n        const hexMode = \"hex\";\n        if (format.includes(hexMode)) {\n            const hasAlpha = format === CSSColorMode.HEXA;\n            return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n        }\n        if (format.includes(\"-css\")) {\n            const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n            // Color omits alpha values when alpha is 1\n            const needToInjectAlpha = (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n            if (needToInjectAlpha) {\n                const model = value.slice(0, 3);\n                const values = value.slice(4, -1);\n                return `${model}a(${values}, ${color.alpha()})`;\n            }\n            return value;\n        }\n        const colorObject = \n        /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n        color[toNonAlphaMode(format)]().round().object();\n        if (format.endsWith(\"a\")) {\n            return normalizeAlpha(colorObject);\n        }\n        return colorObject;\n    }\n    getSliderCapSpacing() {\n        const { dimensions: { slider: { height }, thumb: { radius }, }, } = this;\n        return radius * 2 - height;\n    }\n    updateDimensions(scale = \"m\") {\n        this.dimensions = DIMENSIONS[scale];\n    }\n    drawColorField() {\n        const context = this.colorFieldRenderingContext;\n        const { dimensions: { colorField: { height, width }, }, } = this;\n        context.fillStyle = this.baseColorFieldColor\n            .hsv()\n            .saturationv(100)\n            .value(100)\n            .alpha(1)\n            .string();\n        context.fillRect(0, 0, width, height);\n        const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n        whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n        whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n        context.fillStyle = whiteGradient;\n        context.fillRect(0, 0, width, height);\n        const blackGradient = context.createLinearGradient(0, 0, 0, height);\n        blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n        blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n        context.fillStyle = blackGradient;\n        context.fillRect(0, 0, width, height);\n        this.drawActiveColorFieldColor();\n    }\n    setCanvasContextSize(canvas, { height, width }) {\n        if (!canvas) {\n            return;\n        }\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        canvas.style.height = `${height}px`;\n        canvas.style.width = `${width}px`;\n        const context = canvas.getContext(\"2d\");\n        context.scale(devicePixelRatio, devicePixelRatio);\n    }\n    updateCanvasSize(context = \"all\") {\n        const { dimensions } = this;\n        if (context === \"all\" || context === \"color-field\") {\n            this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n        }\n        const adjustedSliderDimensions = {\n            width: this.effectiveSliderWidth,\n            height: dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2,\n        };\n        if (context === \"all\" || context === \"hue-slider\") {\n            this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n        }\n        if (context === \"all\" || context === \"opacity-slider\") {\n            this.setCanvasContextSize(this.opacitySliderRenderingContext?.canvas, adjustedSliderDimensions);\n        }\n    }\n    drawActiveColorFieldColor() {\n        const { color } = this;\n        if (!color) {\n            return;\n        }\n        const hsvColor = color.hsv();\n        const { dimensions: { colorField: { height, width }, thumb: { radius }, }, } = this;\n        const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n        const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n        requestAnimationFrame(() => {\n            this.colorFieldScopeLeft = x;\n            this.colorFieldScopeTop = y;\n        });\n        this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n    }\n    drawThumb(context, radius, x, y, color, applyAlpha) {\n        const startAngle = 0;\n        const endAngle = 2 * Math.PI;\n        const outlineWidth = 1;\n        context.beginPath();\n        context.arc(x, y, radius, startAngle, endAngle);\n        context.fillStyle = \"#fff\";\n        context.fill();\n        context.strokeStyle = \"rgba(0,0,0,0.3)\";\n        context.lineWidth = outlineWidth;\n        context.stroke();\n        if (applyAlpha && color.alpha() < 1) {\n            const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n            context.beginPath();\n            context.arc(x, y, radius - 3, startAngle, endAngle);\n            context.fillStyle = pattern;\n            context.fill();\n        }\n        context.globalCompositeOperation = \"source-atop\";\n        context.beginPath();\n        context.arc(x, y, radius - 3, startAngle, endAngle);\n        const alpha = applyAlpha ? color.alpha() : 1;\n        context.fillStyle = color.rgb().alpha(alpha).string();\n        context.fill();\n        context.globalCompositeOperation = \"source-over\";\n    }\n    drawActiveHueSliderColor() {\n        const { color } = this;\n        if (!color) {\n            return;\n        }\n        const hsvColor = color.hsv().saturationv(100).value(100);\n        const { dimensions: { thumb: { radius }, }, } = this;\n        const width = this.effectiveSliderWidth;\n        const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n        const y = radius;\n        const sliderBoundX = this.getSliderBoundX(x, width, radius);\n        requestAnimationFrame(() => {\n            this.hueScopeLeft = sliderBoundX;\n        });\n        this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n    }\n    drawHueSlider() {\n        const context = this.hueSliderRenderingContext;\n        const { dimensions: { slider: { height }, thumb: { radius: thumbRadius }, }, } = this;\n        const x = 0;\n        const y = thumbRadius - height / 2;\n        const width = this.effectiveSliderWidth;\n        const gradient = context.createLinearGradient(0, 0, width, 0);\n        const hueSliderColorStopKeywords = [\n            \"red\",\n            \"yellow\",\n            \"lime\",\n            \"cyan\",\n            \"blue\",\n            \"magenta\",\n            \"#ff0004\" /* 1 unit less than #ff0 to avoid duplicate values within range */,\n        ];\n        const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n        let currentOffset = 0;\n        hueSliderColorStopKeywords.forEach((keyword) => {\n            gradient.addColorStop(currentOffset, Color(keyword).string());\n            currentOffset += offset;\n        });\n        context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n        this.drawSliderPath(context, height, width, x, y);\n        context.fillStyle = gradient;\n        context.fill();\n        context.strokeStyle = \"rgba(0,0,0,0.3)\";\n        context.lineWidth = 1;\n        context.stroke();\n        this.drawActiveHueSliderColor();\n    }\n    drawOpacitySlider() {\n        const context = this.opacitySliderRenderingContext;\n        const { baseColorFieldColor: previousColor, dimensions: { slider: { height }, thumb: { radius: thumbRadius }, }, } = this;\n        const x = 0;\n        const y = thumbRadius - height / 2;\n        const width = this.effectiveSliderWidth;\n        context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n        const gradient = context.createLinearGradient(0, y, width, 0);\n        const startColor = previousColor.rgb().alpha(0);\n        const midColor = previousColor.rgb().alpha(0.5);\n        const endColor = previousColor.rgb().alpha(1);\n        gradient.addColorStop(0, startColor.string());\n        gradient.addColorStop(0.5, midColor.string());\n        gradient.addColorStop(1, endColor.string());\n        this.drawSliderPath(context, height, width, x, y);\n        const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n        context.fillStyle = pattern;\n        context.fill();\n        context.fillStyle = gradient;\n        context.fill();\n        context.strokeStyle = \"rgba(0,0,0,0.3)\";\n        context.lineWidth = 1;\n        context.stroke();\n        this.drawActiveOpacitySliderColor();\n    }\n    drawSliderPath(context, height, width, x, y) {\n        const radius = height / 2 + 1;\n        context.beginPath();\n        context.moveTo(x + radius, y);\n        context.lineTo(x + width - radius, y);\n        context.quadraticCurveTo(x + width, y, x + width, y + radius);\n        context.lineTo(x + width, y + height - radius);\n        context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        context.lineTo(x + radius, y + height);\n        context.quadraticCurveTo(x, y + height, x, y + height - radius);\n        context.lineTo(x, y + radius);\n        context.quadraticCurveTo(x, y, x + radius, y);\n        context.closePath();\n    }\n    getCheckeredBackgroundPattern() {\n        if (this.checkerPattern) {\n            return this.checkerPattern;\n        }\n        const pattern = document.createElement(\"canvas\");\n        pattern.width = 10;\n        pattern.height = 10;\n        const patternContext = pattern.getContext(\"2d\");\n        patternContext.fillStyle = \"#ccc\";\n        patternContext.fillRect(0, 0, 10, 10);\n        patternContext.fillStyle = \"#fff\";\n        patternContext.fillRect(0, 0, 5, 5);\n        patternContext.fillRect(5, 5, 5, 5);\n        this.checkerPattern = pattern;\n        return pattern;\n    }\n    drawActiveOpacitySliderColor() {\n        const { color } = this;\n        if (!color) {\n            return;\n        }\n        const hsvColor = color;\n        const { dimensions: { thumb: { radius }, }, } = this;\n        const width = this.effectiveSliderWidth;\n        const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n        const y = radius;\n        const sliderBoundX = this.getSliderBoundX(x, width, radius);\n        requestAnimationFrame(() => {\n            this.opacityScopeLeft = sliderBoundX;\n        });\n        this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n    }\n    getSliderBoundX(x, width, radius) {\n        const closeToEdge = closeToRangeEdge(x, width, radius);\n        return closeToEdge === 0\n            ? x\n            : closeToEdge === -1\n                ? remap(x, 0, width, radius, radius * 2)\n                : remap(x, 0, width, width - radius * 2, width - radius);\n    }\n    updateColorFromChannels(channels) {\n        this.internalColorSet(Color(channels, this.channelMode));\n    }\n    updateChannelsFromColor(color) {\n        this.channels = color ? this.toChannels(color) : [null, null, null, null];\n    }\n    toChannels(color) {\n        const { channelMode } = this;\n        const channels = color[channelMode]()\n            .array()\n            .map((value, index) => {\n            const isAlpha = index === 3;\n            return isAlpha ? value : Math.floor(value);\n        });\n        if (channels.length === 3) {\n            channels.push(1); // Color omits alpha when 1\n        }\n        return channels;\n    }\n    getAdjustedScopePosition(left, top) {\n        return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"allowEmpty\": [\"handleAllowEmptyOrClearableChange\"],\n        \"clearable\": [\"handleAllowEmptyOrClearableChange\"],\n        \"alphaChannel\": [\"handleAlphaChannelChange\", \"handleAlphaChannelDimensionsChange\", \"handleFormatOrAlphaChannelChange\"],\n        \"dimensions\": [\"handleAlphaChannelDimensionsChange\"],\n        \"color\": [\"handleColorChange\"],\n        \"format\": [\"handleFormatOrAlphaChannelChange\"],\n        \"scale\": [\"handleScaleChange\"],\n        \"messageOverrides\": [\"onMessagesChange\"],\n        \"value\": [\"handleValueChange\"],\n        \"effectiveLocale\": [\"effectiveLocaleChange\"]\n    }; }\n};\nColorPicker.style = CalciteColorPickerStyle0;\n\nconst CSS$1 = {\n    container: \"container\",\n    hexInput: \"hex-input\",\n    opacityInput: \"opacity-input\",\n};\n\nconst colorPickerHexInputCss = \":host{display:block}.container{display:flex;inline-size:100%;flex-wrap:nowrap;align-items:center}.hex-input{flex-grow:1;text-transform:uppercase}.opacity-input{inline-size:68px;margin-inline-start:-1px}:host([scale=s]) .container{flex-wrap:wrap;row-gap:0.125rem}:host([scale=s]) .opacity-input{inline-size:unset;margin-inline-start:unset}:host([scale=l]) .opacity-input{inline-size:88px}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteColorPickerHexInputStyle0 = colorPickerHexInputCss;\n\nconst DEFAULT_COLOR = Color();\nconst ColorPickerHexInput = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.calciteColorPickerHexInputChange = createEvent(this, \"calciteColorPickerHexInputChange\", 6);\n        this.onHexInputBlur = () => {\n            const node = this.hexInputNode;\n            const inputValue = node.value;\n            const hex = `#${inputValue}`;\n            const { allowEmpty, internalColor } = this;\n            const willClearValue = allowEmpty && !inputValue;\n            const isLonghand = isLonghandHex(hex);\n            if (isShorthandHex(hex, this.alphaChannel)) {\n                // ensure modified pasted hex values are committed since we prevent default to remove the # char.\n                this.onHexInputChange();\n            }\n            if (willClearValue || (isValidHex(hex) && isLonghand)) {\n                return;\n            }\n            // manipulating DOM directly since rerender doesn't update input value\n            node.value =\n                allowEmpty && !internalColor\n                    ? \"\"\n                    : this.formatHexForInternalInput(rgbToHex(\n                    // always display hex input in RRGGBB format\n                    internalColor.object()));\n        };\n        this.onOpacityInputBlur = () => {\n            const node = this.opacityInputNode;\n            const inputValue = node.value;\n            const { allowEmpty, internalColor } = this;\n            const willClearValue = allowEmpty && !inputValue;\n            if (willClearValue) {\n                return;\n            }\n            // manipulating DOM directly since rerender doesn't update input value\n            node.value =\n                allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n        };\n        this.onOpacityInputInput = () => {\n            this.onOpacityInputChange();\n        };\n        this.onHexInputChange = () => {\n            const nodeValue = this.hexInputNode.value;\n            let value = nodeValue;\n            if (value) {\n                const normalized = normalizeHex(value, false);\n                const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n                if (preserveExistingAlpha && this.internalColor) {\n                    const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n                    value = `${normalized + alphaHex}`;\n                }\n            }\n            this.internalSetValue(value, this.value);\n        };\n        this.onOpacityInputChange = () => {\n            const node = this.opacityInputNode;\n            let value;\n            if (!node.value) {\n                value = node.value;\n            }\n            else {\n                const alpha = opacityToAlpha(Number(node.value));\n                value = this.internalColor?.alpha(alpha).hexa();\n            }\n            this.internalSetValue(value, this.value);\n        };\n        this.onInputFocus = (event) => {\n            event.type === \"calciteInternalInputTextFocus\"\n                ? this.hexInputNode.selectText()\n                : this.opacityInputNode.selectText();\n        };\n        this.onHexInputInput = () => {\n            const hexInputValue = `#${this.hexInputNode.value}`;\n            const oldValue = this.value;\n            if (isValidHex(hexInputValue, this.alphaChannel) &&\n                isLonghandHex(hexInputValue, this.alphaChannel)) {\n                this.internalSetValue(hexInputValue, oldValue);\n            }\n        };\n        this.onInputKeyDown = (event) => {\n            const { altKey, ctrlKey, metaKey, shiftKey } = event;\n            const { alphaChannel, hexInputNode, internalColor, value } = this;\n            const { key } = event;\n            const composedPath = event.composedPath();\n            if ((key === \"Tab\" && isShorthandHex(value, this.alphaChannel)) || key === \"Enter\") {\n                if (composedPath.includes(hexInputNode)) {\n                    this.onHexInputChange();\n                }\n                else {\n                    this.onOpacityInputChange();\n                }\n                if (key === \"Enter\") {\n                    event.preventDefault();\n                }\n                return;\n            }\n            const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n            const oldValue = this.value;\n            if (isNudgeKey) {\n                if (!value) {\n                    this.internalSetValue(this.previousNonNullValue, oldValue);\n                    event.preventDefault();\n                    return;\n                }\n                const direction = key === \"ArrowUp\" ? 1 : -1;\n                const bump = shiftKey ? 10 : 1;\n                this.internalSetValue(hexify(this.nudgeRGBChannels(internalColor, bump * direction, composedPath.includes(hexInputNode) ? \"rgb\" : \"a\"), alphaChannel), oldValue);\n                event.preventDefault();\n                return;\n            }\n            const withModifiers = altKey || ctrlKey || metaKey;\n            const singleChar = key.length === 1;\n            const validHexChar = hexChar.test(key);\n            if (singleChar && !withModifiers && !validHexChar) {\n                event.preventDefault();\n            }\n        };\n        this.onHexInputPaste = (event) => {\n            const hex = event.clipboardData.getData(\"text\");\n            if (isValidHex(hex, this.alphaChannel) && isLonghandHex(hex, this.alphaChannel)) {\n                event.preventDefault();\n                this.hexInputNode.value = hex.slice(1);\n                this.internalSetValue(hex, this.value);\n            }\n        };\n        this.previousNonNullValue = this.value;\n        this.storeHexInputRef = (node) => {\n            this.hexInputNode = node;\n        };\n        this.storeOpacityInputRef = (node) => {\n            this.opacityInputNode = node;\n        };\n        this.allowEmpty = false;\n        this.alphaChannel = false;\n        this.hexLabel = \"Hex\";\n        this.messages = undefined;\n        this.numberingSystem = undefined;\n        this.scale = \"m\";\n        this.value = normalizeHex(hexify(DEFAULT_COLOR, this.alphaChannel), this.alphaChannel, true);\n        this.internalColor = DEFAULT_COLOR;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        const { allowEmpty, alphaChannel, value } = this;\n        if (value) {\n            const normalized = normalizeHex(value, alphaChannel);\n            if (isValidHex(normalized, alphaChannel)) {\n                this.internalSetValue(normalized, normalized, false);\n            }\n            return;\n        }\n        if (allowEmpty) {\n            this.internalSetValue(null, null, false);\n        }\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    handleValueChange(value, oldValue) {\n        this.internalSetValue(value, oldValue, false);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    render() {\n        const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n        const hexInputValue = this.formatHexForInternalInput(value);\n        const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n        const inputScale = scale === \"l\" ? \"m\" : \"s\";\n        return (h(\"div\", { key: '70f804fdbc3c29fdf49616f56c39593fdc3717da', class: CSS$1.container }, h(\"calcite-input-text\", { key: '777d1f8ffa673a0d74f049d4a6bdacbf3510006a', class: CSS$1.hexInput, label: messages?.hex || hexLabel, maxLength: this.alphaChannel ? 8 : 6, onCalciteInputTextChange: this.onHexInputChange, onCalciteInputTextInput: this.onHexInputInput, onCalciteInternalInputTextBlur: this.onHexInputBlur, onCalciteInternalInputTextFocus: this.onInputFocus, onKeyDown: this.onInputKeyDown, onPaste: this.onHexInputPaste, prefixText: \"#\", ref: this.storeHexInputRef, scale: inputScale, value: hexInputValue }), alphaChannel ? (h(\"calcite-input-number\", { class: CSS$1.opacityInput, key: \"opacity-input\", label: messages?.opacity, max: OPACITY_LIMITS.max, maxLength: 3, min: OPACITY_LIMITS.min, numberButtonType: \"none\", numberingSystem: this.numberingSystem, onCalciteInputNumberInput: this.onOpacityInputInput, onCalciteInternalInputNumberBlur: this.onOpacityInputBlur, onCalciteInternalInputNumberFocus: this.onInputFocus, onKeyDown: this.onInputKeyDown, ref: this.storeOpacityInputRef, scale: inputScale, suffixText: \"%\", value: opacityInputValue })) : null));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        return focusElement(this.hexInputNode);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    internalSetValue(value, oldValue, emit = true) {\n        if (value) {\n            const { alphaChannel } = this;\n            const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n            if (isValidHex(normalized, alphaChannel)) {\n                const { internalColor: currentColor } = this;\n                const nextColor = Color(normalized);\n                const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n                const changed = !currentColor ||\n                    normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n                this.internalColor = nextColor;\n                this.previousNonNullValue = normalizedLonghand;\n                this.value = normalizedLonghand;\n                if (changed && emit) {\n                    this.calciteColorPickerHexInputChange.emit();\n                }\n                return;\n            }\n        }\n        else if (this.allowEmpty) {\n            this.internalColor = null;\n            this.value = null;\n            if (emit) {\n                this.calciteColorPickerHexInputChange.emit();\n            }\n            return;\n        }\n        this.value = oldValue;\n    }\n    formatHexForInternalInput(hex) {\n        return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n    }\n    formatOpacityForInternalInput(color) {\n        return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n    }\n    nudgeRGBChannels(color, amount, context) {\n        let nudgedChannels;\n        const channels = color.array();\n        const rgbChannels = channels.slice(0, 3);\n        if (context === \"rgb\") {\n            const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n            nudgedChannels = [\n                ...nudgedRGBChannels,\n                this.alphaChannel ? channels[3] : undefined,\n            ];\n        }\n        else {\n            const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n            nudgedChannels = [...rgbChannels, nudgedAlpha];\n        }\n        return Color(nudgedChannels);\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"handleValueChange\"]\n    }; }\n};\nColorPickerHexInput.style = CalciteColorPickerHexInputStyle0;\n\nconst CSS = {\n    swatch: \"swatch\",\n    noColorSwatch: \"swatch--no-color\",\n    checker: \"checker\",\n};\nconst COLORS = {\n    borderLight: \"rgba(0, 0, 0, 0.3)\",\n    borderDark: \"rgba(255, 255, 255, 0.15)\",\n};\nconst checkerSquareSize = 4;\nconst CHECKER_DIMENSIONS = {\n    squareSize: checkerSquareSize,\n    size: checkerSquareSize * 2,\n};\n\nconst colorPickerSwatchCss = \":host{position:relative;display:inline-flex}:host([scale=s]){block-size:1.25rem;inline-size:1.25rem}:host([scale=m]){block-size:1.5rem;inline-size:1.5rem}:host([scale=l]){block-size:2rem;inline-size:2rem}.swatch{overflow:hidden;block-size:inherit;inline-size:inherit}.swatch rect{transition-property:all;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.swatch--no-color rect{fill:var(--calcite-color-foreground-1)}.swatch--no-color line{stroke:var(--calcite-color-status-danger)}.checker{fill:#cacaca}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteColorPickerSwatchStyle0 = colorPickerSwatchCss;\n\nconst ColorPickerSwatch = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.active = false;\n        this.color = undefined;\n        this.scale = \"m\";\n    }\n    handleColorChange(color) {\n        this.internalColor = color ? Color(color) : null;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    componentWillLoad() {\n        this.handleColorChange(this.color);\n    }\n    render() {\n        const isEmpty = !this.internalColor;\n        const classes = {\n            [CSS.swatch]: true,\n            [CSS.noColorSwatch]: isEmpty,\n        };\n        return (h(\"svg\", { key: 'd808ca40b9f81aad24291cabcfaf95d74d89f7cd', class: classes, xmlns: \"http://www.w3.org/2000/svg\" }, this.renderSwatch()));\n    }\n    renderSwatch() {\n        const { active, el, internalColor } = this;\n        const borderRadius = active ? \"100%\" : \"0\";\n        const theme = getModeName(el);\n        const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n        const isEmpty = !internalColor;\n        const commonSwatchProps = {\n            height: \"100%\",\n            rx: borderRadius,\n            stroke: borderColor,\n            strokeWidth: \"2\",\n            width: \"100%\",\n        };\n        if (isEmpty) {\n            return (h(Fragment, null, h(\"clipPath\", { id: \"shape\" }, h(\"rect\", { height: \"100%\", rx: borderRadius, width: \"100%\" })), this.renderSwatchRect({\n                clipPath: `inset(0 round ${borderRadius})`,\n                ...commonSwatchProps,\n            }), h(\"line\", { \"clip-path\": \"url(#shape)\", \"stroke-width\": \"3\", x1: \"100%\", x2: \"0\", y1: \"0\", y2: \"100%\" })));\n        }\n        const alpha = internalColor.alpha();\n        const hex = hexify(internalColor);\n        const hexa = hexify(internalColor, alpha < 1);\n        return (h(Fragment, null, h(\"title\", null, hexa), h(\"defs\", null, h(\"pattern\", { height: CHECKER_DIMENSIONS.size, id: \"checker\", patternUnits: \"userSpaceOnUse\", width: CHECKER_DIMENSIONS.size, x: \"0\", y: \"0\" }, h(\"rect\", { class: CSS.checker, height: CHECKER_DIMENSIONS.squareSize, width: CHECKER_DIMENSIONS.squareSize, x: \"0\", y: \"0\" }), h(\"rect\", { class: CSS.checker, height: CHECKER_DIMENSIONS.squareSize, width: CHECKER_DIMENSIONS.squareSize, x: CHECKER_DIMENSIONS.squareSize, y: CHECKER_DIMENSIONS.squareSize }))), this.renderSwatchRect({\n            fill: \"url(#checker)\",\n            rx: commonSwatchProps.rx,\n            height: commonSwatchProps.height,\n            width: commonSwatchProps.width,\n        }), this.renderSwatchRect({\n            clipPath: alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n            fill: hex,\n            ...commonSwatchProps,\n        }), alpha < 1\n            ? this.renderSwatchRect({\n                clipPath: \"polygon(100% 0, 100% 100%, 0 100%)\",\n                fill: hexa,\n                key: \"opacity-fill\",\n                ...commonSwatchProps,\n            })\n            : null));\n    }\n    renderSwatchRect({ clipPath, fill, height, key, rx, stroke, strokeWidth, width, }) {\n        return (h(\"rect\", { \"clip-path\": clipPath, fill: fill, height: height, key: key, rx: rx, stroke: stroke, \"stroke-width\": strokeWidth, width: width }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"handleColorChange\"]\n    }; }\n};\nColorPickerSwatch.style = CalciteColorPickerSwatchStyle0;\n\nexport { ColorPicker as calcite_color_picker, ColorPickerHexInput as calcite_color_picker_hex_input, ColorPickerSwatch as calcite_color_picker_swatch };\n\n//# sourceMappingURL=calcite-color-picker_3.entry.js.map"],"names":["colorPickerCss","CalciteColorPickerStyle0","throttleFor60FpsInMs","ColorPicker","hostRef","registerInstance","createEvent","CSSColorMode","event","key","arrowKeyToXYOffset","modifier","arrowKeyToXOffset","delta","hue","color","isClearable","hex","normalizedHex","normalizeHex","hexify","alphaCompatible","Color","swatch","input","channelIndex","limit","OPACITY_LIMITS","RGB_LIMITS","HSV_LIMITS","inputValue","adjustedValue","clamp","channels","_a","isAlphaChannel","value","opacityToAlpha","isActivationKey","isPrimaryPointerButton","previouslyDragging","activeCanvasInfo","el","context","bounds","samplingX","samplingY","clientX","clientY","node","channelMode","activeChannelMode","messages","selected","label","h","CSS$2","alphaChannel","channelAriaLabels","direction","getElementDir","channelsToRender","channelValue","index","alphaToOpacity","ariaLabel","suffix","colorToDelete","savedColors","storageKey","DEFAULT_STORAGE_KEY_PREFIX","colorToSave","throttle","type","x","y","skipEqual","height","width","saturation","canvas","alpha","DEFAULT_COLOR$1","DIMENSIONS","format","getSliderWidth","oldColor","scale","oldValue","checkMode","modeChanged","nextMode","parseMode","dragging","normalizeColor","colorChanged","colorEqual","updateMessages","shiftKey","complementaryBump","focusEl","renderingContext","captureValue","scopeNode","componentFocusable","focusFirstTabbable","setUpLoadableComponent","willSetNoColor","parsedMode","valueIsCompatible","initialColor","setUpMessages","connectLocalized","connectMessages","setComponentLoaded","disconnectLocalized","disconnectMessages","updateHostInteraction","channelsDisabled","colorFieldScopeLeft","colorFieldScopeTop","thumbRadius","hexDisabled","hideChannels","hideHex","hideSaved","hueScopeLeft","opacityScopeLeft","savedDisabled","scopeOrientation","sliderWidth","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","noColor","vertical","noHex","noChannels","noSaved","adjustedColorFieldScopeLeft","adjustedColorFieldScopeTop","adjustedHueScopeLeft","adjustedHueScopeTop","adjustedOpacityScopeLeft","adjustedOpacityScopeTop","InteractiveContainer","warn","mode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","HUE_LIMIT_CONSTRAINED","hasAlpha","model","values","colorObject","normalizeAlpha","radius","whiteGradient","blackGradient","devicePixelRatio","dimensions","adjustedSliderDimensions","_b","_c","hsvColor","applyAlpha","endAngle","outlineWidth","pattern","sliderBoundX","gradient","hueSliderColorStopKeywords","offset","currentOffset","keyword","previousColor","startColor","midColor","endColor","patternContext","closeToEdge","closeToRangeEdge","remap","left","top","SCOPE_SIZE","getElement","CSS$1","colorPickerHexInputCss","CalciteColorPickerHexInputStyle0","DEFAULT_COLOR","ColorPickerHexInput","allowEmpty","internalColor","willClearValue","isLonghand","isLonghandHex","isShorthandHex","isValidHex","rgbToHex","normalized","alphaHex","hexInputValue","altKey","ctrlKey","metaKey","hexInputNode","composedPath","isNudgeKey","bump","withModifiers","singleChar","validHexChar","hexChar","hexLabel","opacityInputValue","inputScale","focusElement","emit","currentColor","nextColor","normalizedLonghand","changed","amount","nudgedChannels","rgbChannels","channel","nudgedAlpha","CSS","COLORS","checkerSquareSize","CHECKER_DIMENSIONS","colorPickerSwatchCss","CalciteColorPickerSwatchStyle0","ColorPickerSwatch","isEmpty","classes","active","borderRadius","borderColor","getModeName","commonSwatchProps","Fragment","hexa","clipPath","fill","rx","stroke","strokeWidth"],"mappings":"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","x_google_ignoreList":[0]}
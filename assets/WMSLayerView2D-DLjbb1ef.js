import{j as o,m as h,k as E,v as F,I as f,w as M,x as S,s as C,ao as R,aX as q}from"./index-BVCTOtrL.js";import{a as b}from"./BitmapContainer-C8doH-Cs.js";import{j as U,y as V}from"./LayerView-DwVy99XI.js";import{_ as L}from"./ExportStrategy-D8awgQdz.js";import{i as W}from"./RefreshableLayerView-qvu6fuPL.js";import{a as j}from"./ExportWMSImageParameters-Xgy5Ohf_.js";import{i as A}from"./timeSupport-CzPXq3Z7.js";import"./WGLContainer--d1g9pVV.js";import"./definitions-DyYHcW4a.js";import"./LabelMetric-B_9kHV1e.js";import"./Texture-WJ7eddUU.js";import"./enums-Dk3osxpS.js";import"./Program-XkaWlfFs.js";import"./BufferObject-BcmUs8pN.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./vec2f32-BbH2jxlN.js";import"./VertexArrayObject-CvoAskpv.js";import"./ProgramTemplate-LB48od5-.js";import"./mat2df32-orApM5a3.js";import"./mat3-CdZywI2d.js";import"./MapView-BSoNEIU9.js";import"./CollectionFlattener-CMWhaSVr.js";import"./TileInfo-Cv6PHq6L.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BUOpwDAI.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-xgz2Axe9.js";import"./signal-CAnySwQR.js";import"./ColorBackground-DGu4OhzG.js";import"./basemapUtils-DKGcOL8l.js";import"./TablesMixin-_MuJYK82.js";import"./HeightModelInfo-D75wB90s.js";import"./ReactiveMap-CFXgsxKM.js";import"./a11yUtils-CXEJ1PK3.js";import"./ViewingMode-dBUh39ak.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DX5jDion.js";import"./Tile-Cmz-Q_tg.js";import"./TileKey-DrOdoN6l.js";import"./QueueProcessor-Do3n5GUA.js";import"./quickselect-QQC62dOK.js";import"./vec32-CbpHz7s3.js";import"./imageUtils-B9XPqFLB.js";import"./capabilities-DWNhET5Y.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-IeUjKp3y.js";import"./accessibleHandler-QHtiJFft.js";import"./GoTo-MI9Nn4fA.js";import"./ZoomViewModel-BLNfLgLO.js";import"./vec3f32-nZdmKIgz.js";import"./Container-BkIZoSgF.js";import"./EffectView-Bo5aSjzK.js";import"./StyleDefinition-DfNpIZBE.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-uJQzlF7M.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-Cs3WZi33.js";import"./Bitmap-C_GrGYBa.js";const H=r=>{let t=class extends r{initialize(){this.exportImageParameters=new j({layer:this.layer})}destroy(){this.exportImageParameters=F(this.exportImageParameters)}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return A(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(e,a){const{layer:p}=this;if(!e)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:p});const{popupEnabled:d}=p;if(!d)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:d});const i=this.createFetchPopupFeaturesQuery(e);if(!i)return[];const{extent:s,width:m,height:n,x:c,y:l}=i;if(!(s&&m&&n))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:m,height:n});const y=await p.fetchFeatureInfo(s,m,n,c,l);return M(a),y}};return o([h()],t.prototype,"exportImageParameters",void 0),o([h({readOnly:!0})],t.prototype,"exportImageVersion",null),o([h()],t.prototype,"layer",void 0),o([h({readOnly:!0})],t.prototype,"timeExtent",null),t=o([E("esri.views.layers.WMSLayerView")],t),t};let u=class extends H(W(U(V))){constructor(){super(...arguments),this.bitmapContainer=new b}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(t=>{S(t)||C.getLogger(this).error(t)})}attach(){const{layer:r}=this,{imageMaxHeight:t,imageMaxWidth:e}=r;this.bitmapContainer=new b,this.container.addChild(this.bitmapContainer),this.strategy=new L({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=F(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:t,bitmapContainer:e}=this,{x:a,y:p}=r,{spatialReference:d}=t;let i,s=0,m=0;if(e.children.some(y=>{const{width:w,height:v,resolution:I,x:g,y:x}=y,P=g+I*w,$=x-I*v;return a>=g&&a<=P&&p<=x&&p>=$&&(i=new q({xmin:g,ymin:$,xmax:P,ymax:x,spatialReference:d}),s=w,m=v,!0)}),!i)return null;const n=i.width/s,c=Math.round((a-i.xmin)/n),l=Math.round((i.ymax-p)/n);return{extent:i,width:s,height:m,x:c,y:l}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,t,e,a){return this.layer.fetchImageBitmap(r,t,e,{timeExtent:this.timeExtent,...a})}};o([h()],u.prototype,"strategy",void 0),o([h()],u.prototype,"updating",void 0),u=o([E("esri.views.2d.layers.WMSLayerView2D")],u);const Bt=u;export{Bt as default};
//# sourceMappingURL=WMSLayerView2D-DLjbb1ef.js.map

{"version":3,"file":"utils-3daeffe5-woILbvgM.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/utils-3daeffe5.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nvar colorString$1 = {exports: {}};\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\nvar simpleSwizzle = {exports: {}};\n\nvar isArrayish$1 = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n\nvar isArrayish = isArrayish$1;\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle$1 = simpleSwizzle.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle$1.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle$1(arguments));\n\t};\n};\n\n/* MIT license */\n\nvar colorNames = colorName;\nvar swizzle = simpleSwizzle.exports;\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = colorString$1.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n\n/* MIT license */\n\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = colorName;\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert$2 = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nvar conversions$2 = convert$2;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert$2)) {\n\tif (!('channels' in convert$2[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert$2[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert$2[model].labels.length !== convert$2[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert$2[model];\n\tdelete convert$2[model].channels;\n\tdelete convert$2[model].labels;\n\tObject.defineProperty(convert$2[model], 'channels', {value: channels});\n\tObject.defineProperty(convert$2[model], 'labels', {value: labels});\n}\n\nconvert$2.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert$2.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert$2.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert$2.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert$2.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert$2.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert$2.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert$2.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert$2.rgb.lab = function (rgb) {\n\tconst xyz = convert$2.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert$2.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert$2.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert$2.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert$2.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert$2.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$2.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$2.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert$2.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert$2.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert$2.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert$2.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert$2.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert$2.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert$2.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert$2.rgb.ansi16(convert$2.hsv.rgb(args), args[2]);\n};\n\nconvert$2.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert$2.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert$2.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert$2.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert$2.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert$2.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert$2.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert$2.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert$2.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert$2.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert$2.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert$2.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert$2.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert$2.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert$2.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert$2.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert$2.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert$2.gray.hsv = convert$2.gray.hsl;\n\nconvert$2.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert$2.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert$2.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert$2.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert$2.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\nconst conversions$1 = conversions$2;\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions$1);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions$1[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions$1[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions$1[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nvar route$1 = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\nconst conversions = conversions$2;\nconst route = route$1;\n\nconst convert$1 = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert$1[fromModel] = {};\n\n\tObject.defineProperty(convert$1[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert$1[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert$1[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert$1[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nvar colorConvert = convert$1;\n\nconst colorString = colorString$1.exports;\nconst convert = colorConvert;\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nvar color = Color;\n\nconst Color$1 = color;\n\nconst CSS = {\n    channel: \"channel\",\n    channels: \"channels\",\n    colorField: \"color-field\",\n    colorFieldScope: \"scope--color-field\",\n    colorMode: \"color-mode\",\n    colorModeContainer: \"color-mode-container\",\n    container: \"container\",\n    control: \"control\",\n    controlAndScope: \"control-and-scope\",\n    controlSection: \"control-section\",\n    deleteColor: \"delete-color\",\n    header: \"header\",\n    hexAndChannelsGroup: \"hex-and-channels-group\",\n    hexOptions: \"color-hex-options\",\n    hueScope: \"scope--hue\",\n    hueSlider: \"hue-slider\",\n    opacityScope: \"scope--opacity\",\n    opacitySlider: \"opacity-slider\",\n    preview: \"preview\",\n    previewAndSliders: \"preview-and-sliders\",\n    saveColor: \"save-color\",\n    savedColor: \"saved-color\",\n    savedColors: \"saved-colors\",\n    savedColorsButtons: \"saved-colors-buttons\",\n    savedColorsSection: \"saved-colors-section\",\n    scope: \"scope\",\n    section: \"section\",\n    slider: \"slider\",\n    sliders: \"sliders\",\n    splitSection: \"section--split\",\n};\nconst DEFAULT_COLOR = Color$1(\"#007AC2\");\nconst DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\nconst RGB_LIMITS = {\n    r: 255,\n    g: 255,\n    b: 255,\n};\nconst HSV_LIMITS = {\n    h: 360,\n    s: 100,\n    v: 100,\n};\n// 0 and 360 represent the same value, so we limit the hue to 359\nconst HUE_LIMIT_CONSTRAINED = HSV_LIMITS.h - 1;\nconst OPACITY_LIMITS = {\n    min: 0,\n    max: 100,\n};\nconst DIMENSIONS = {\n    s: {\n        slider: {\n            height: 12,\n            width: 104,\n        },\n        colorField: {\n            height: 80,\n            width: 160,\n        },\n        thumb: {\n            radius: 7,\n        },\n        preview: {\n            size: 20,\n        },\n    },\n    m: {\n        slider: {\n            height: 12,\n            width: 204,\n        },\n        colorField: {\n            height: 150,\n            width: 272,\n        },\n        thumb: {\n            radius: 7,\n        },\n        preview: {\n            size: 24,\n        },\n    },\n    l: {\n        slider: {\n            height: 12,\n            width: 384,\n        },\n        colorField: {\n            height: 200,\n            width: 464,\n        },\n        thumb: {\n            radius: 7,\n        },\n        preview: {\n            size: 32,\n        },\n    },\n};\nconst SCOPE_SIZE = 1;\n\nconst hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\nconst alphaToOpacity = (alpha) => Number((alpha * 100).toFixed());\nconst opacityToAlpha = (opacity) => Number((opacity / 100).toFixed(2));\nfunction isValidHex(hex, hasAlpha = false) {\n    return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\nfunction evaluateHex(hex, length, pattern) {\n    if (!hex) {\n        return false;\n    }\n    return hex.length === length && pattern.test(hex);\n}\nfunction isShorthandHex(hex, hasAlpha = false) {\n    const hexLength = hasAlpha ? 5 : 4;\n    const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n    return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction isLonghandHex(hex, hasAlpha = false) {\n    const hexLength = hasAlpha ? 9 : 7;\n    const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n    return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction normalizeHex(hex, hasAlpha = false, convertFromHexToHexa = false) {\n    hex = hex.toLowerCase();\n    if (!hex.startsWith(\"#\")) {\n        hex = `#${hex}`;\n    }\n    if (isShorthandHex(hex, hasAlpha)) {\n        return rgbToHex(hexToRGB(hex, hasAlpha));\n    }\n    if (hasAlpha && convertFromHexToHexa && isValidHex(hex, false /* we only care about RGB hex for conversion */)) {\n        const isShorthand = isShorthandHex(hex, false);\n        return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n    }\n    return hex;\n}\nfunction hexify(color, hasAlpha = false) {\n    return hasAlpha ? color.hexa() : color.hex();\n}\nfunction rgbToHex(color) {\n    const { r, g, b } = color;\n    const rChars = numToHex(r);\n    const gChars = numToHex(g);\n    const bChars = numToHex(b);\n    const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n    return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\nfunction numToHex(num) {\n    return num.toString(16).padStart(2, \"0\");\n}\nfunction normalizeAlpha(colorObject) {\n    const normalized = { ...colorObject, a: colorObject.alpha ?? 1 /* Color() will omit alpha if 1 */ };\n    delete normalized.alpha;\n    return normalized;\n}\nfunction normalizeColor(alphaColorObject) {\n    const normalized = { ...alphaColorObject, alpha: alphaColorObject.a ?? 1 };\n    delete normalized.a;\n    return normalized;\n}\nfunction hexToRGB(hex, hasAlpha = false) {\n    if (!isValidHex(hex, hasAlpha)) {\n        return null;\n    }\n    hex = hex.replace(\"#\", \"\");\n    let r;\n    let g;\n    let b;\n    let a;\n    const isShorthand = hex.length === 3 || hex.length === 4;\n    if (isShorthand) {\n        const [first, second, third, fourth] = hex.split(\"\");\n        r = parseInt(`${first}${first}`, 16);\n        g = parseInt(`${second}${second}`, 16);\n        b = parseInt(`${third}${third}`, 16);\n        a = parseInt(`${fourth}${fourth}`, 16) / 255;\n    }\n    else {\n        r = parseInt(hex.slice(0, 2), 16);\n        g = parseInt(hex.slice(2, 4), 16);\n        b = parseInt(hex.slice(4, 6), 16);\n        a = parseInt(hex.slice(6, 8), 16) / 255;\n    }\n    return isNaN(a) ? { r, g, b } : { r, g, b, a };\n}\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = (x) => x;\nconst CSSColorMode = enumify({\n    HEX: \"hex\",\n    HEXA: \"hexa\",\n    RGB_CSS: \"rgb-css\",\n    RGBA_CSS: \"rgba-css\",\n    HSL_CSS: \"hsl-css\",\n    HSLA_CSS: \"hsla-css\",\n});\nconst ObjectColorMode = enumify({\n    RGB: \"rgb\",\n    RGBA: \"rgba\",\n    HSL: \"hsl\",\n    HSLA: \"hsla\",\n    HSV: \"hsv\",\n    HSVA: \"hsva\",\n});\nfunction parseMode(colorValue) {\n    if (typeof colorValue === \"string\") {\n        if (colorValue.startsWith(\"#\")) {\n            const { length } = colorValue;\n            if (length === 4 || length === 7) {\n                return CSSColorMode.HEX;\n            }\n            if (length === 5 || length === 9) {\n                return CSSColorMode.HEXA;\n            }\n        }\n        if (colorValue.startsWith(\"rgba(\")) {\n            return CSSColorMode.RGBA_CSS;\n        }\n        if (colorValue.startsWith(\"rgb(\")) {\n            return CSSColorMode.RGB_CSS;\n        }\n        if (colorValue.startsWith(\"hsl(\")) {\n            return CSSColorMode.HSL_CSS;\n        }\n        if (colorValue.startsWith(\"hsla(\")) {\n            return CSSColorMode.HSLA_CSS;\n        }\n    }\n    if (typeof colorValue === \"object\") {\n        if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n            return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n        }\n        if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n            return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n        }\n        if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n            return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n        }\n    }\n    return null;\n}\nfunction hasChannels(colorObject, ...channels) {\n    return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\nfunction colorEqual(value1, value2) {\n    return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\nfunction alphaCompatible(mode) {\n    return (mode === CSSColorMode.HEXA ||\n        mode === CSSColorMode.RGBA_CSS ||\n        mode === CSSColorMode.HSLA_CSS ||\n        mode === ObjectColorMode.RGBA ||\n        mode === ObjectColorMode.HSLA ||\n        mode === ObjectColorMode.HSVA);\n}\nfunction toAlphaMode(mode) {\n    const alphaMode = mode === CSSColorMode.HEX\n        ? CSSColorMode.HEXA\n        : mode === CSSColorMode.RGB_CSS\n            ? CSSColorMode.RGBA_CSS\n            : mode === CSSColorMode.HSL_CSS\n                ? CSSColorMode.HSLA_CSS\n                : mode === ObjectColorMode.RGB\n                    ? ObjectColorMode.RGBA\n                    : mode === ObjectColorMode.HSL\n                        ? ObjectColorMode.HSLA\n                        : mode === ObjectColorMode.HSV\n                            ? ObjectColorMode.HSVA\n                            : mode;\n    return alphaMode;\n}\nfunction toNonAlphaMode(mode) {\n    const nonAlphaMode = mode === CSSColorMode.HEXA\n        ? CSSColorMode.HEX\n        : mode === CSSColorMode.RGBA_CSS\n            ? CSSColorMode.RGB_CSS\n            : mode === CSSColorMode.HSLA_CSS\n                ? CSSColorMode.HSL_CSS\n                : mode === ObjectColorMode.RGBA\n                    ? ObjectColorMode.RGB\n                    : mode === ObjectColorMode.HSLA\n                        ? ObjectColorMode.HSL\n                        : mode === ObjectColorMode.HSVA\n                            ? ObjectColorMode.HSV\n                            : mode;\n    return nonAlphaMode;\n}\nfunction getSliderWidth(activeDimensions, hasAlpha) {\n    const { slider: { width }, preview, } = activeDimensions;\n    if (hasAlpha) {\n        return width;\n    }\n    const previewWidthOffset = DIMENSIONS[\"l\"].preview.size - preview.size;\n    return width + previewWidthOffset;\n}\n\nexport { CSSColorMode as C, DEFAULT_COLOR as D, HSV_LIMITS as H, OPACITY_LIMITS as O, RGB_LIMITS as R, SCOPE_SIZE as S, hexify as a, Color$1 as b, CSS as c, alphaToOpacity as d, DIMENSIONS as e, alphaCompatible as f, getSliderWidth as g, hexToRGB as h, isValidHex as i, normalizeColor as j, colorEqual as k, normalizeAlpha as l, HUE_LIMIT_CONSTRAINED as m, normalizeHex as n, opacityToAlpha as o, parseMode as p, DEFAULT_STORAGE_KEY_PREFIX as q, toAlphaMode as r, isLonghandHex as s, toNonAlphaMode as t, isShorthandHex as u, rgbToHex as v, hexChar as w };\n\n//# sourceMappingURL=utils-3daeffe5.js.map"],"names":["colorString$1","colorName","simpleSwizzle","isArrayish$1","obj","isArrayish","concat","slice","swizzle$1","args","results","i","len","arg","fn","colorNames","swizzle","hasOwnProperty","reverseNames","name","cs","string","prefix","val","model","abbr","hex","rgba","per","keyword","rgb","match","hexAlpha","i2","clamp","hsl","alpha","h","s","l","a","hwb","w","b","hexDouble","r","g","hsla","hwba","num","min","max","str","cssKeywords","reverseKeywords","key","convert$2","conversions$2","channels","labels","delta","rdif","gdif","bdif","v","diff","diffc","c","k","m","y","comparativeDistance","x","reversed","currentClosestDistance","currentClosestKeyword","value","distance","z","xyz","t2","t3","t1","smin","lmin","sv","hsv","hi","f","p","q","t","vmin","sl","wh","bl","ratio","n","cmyk","lab","y2","x2","z2","lch","hr","saturation","ansi","color","mult","rem","colorString","char","integer","chroma","grayscale","hue","hcg","pure","mg","apple","gray","conversions$1","buildGraph","graph","models","deriveBFS","fromModel","queue","current","adjacents","adjacent","node","link","from","to","wrapConversion","toModel","path","cur","route$1","conversion","conversions","route","convert$1","wrapRaw","wrappedFn","arg0","wrapRounded","result","routes","colorConvert","convert","skippedModels","hashedModelKeys","limiters","Color","object","newArray","zeroArray","keys","hashedKeys","limit","places","self","roundToPlace","getset","maxfn","rgbArray","alphaHex","lum","element","chan","color2","lum1","lum2","contrastRatio","degrees","mixinColor","weight","color1","w1","w2","assertArray","roundTo","number","channel","modifier","array","length","Color$1","CSS","DEFAULT_COLOR","DEFAULT_STORAGE_KEY_PREFIX","RGB_LIMITS","HSV_LIMITS","HUE_LIMIT_CONSTRAINED","OPACITY_LIMITS","DIMENSIONS","SCOPE_SIZE","hexChar","shorthandHex","longhandHex","shorthandHexWithAlpha","longhandHexWithAlpha","alphaToOpacity","opacityToAlpha","opacity","isValidHex","hasAlpha","isShorthandHex","isLonghandHex","evaluateHex","pattern","normalizeHex","convertFromHexToHexa","rgbToHex","hexToRGB","isShorthand","hexify","rChars","numToHex","gChars","bChars","alphaChars","normalizeAlpha","colorObject","normalized","normalizeColor","alphaColorObject","first","second","third","fourth","enumify","CSSColorMode","ObjectColorMode","parseMode","colorValue","hasChannels","colorEqual","value1","value2","alphaCompatible","mode","toAlphaMode","toNonAlphaMode","getSliderWidth","activeDimensions","width","preview","previewWidthOffset"],"mappings":"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","x_google_ignoreList":[0]}
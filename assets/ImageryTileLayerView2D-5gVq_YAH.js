import{d2 as $,dB as Y,c6 as le,hz as ye,an as xe,fd as be,aX as we,aP as ve,by as Te,x as F,s as C,j as m,m as p,k as V,ao as L,I as Pe,d6 as Se,al as Ue,dx as Re}from"./index-Club40b3.js";import{o as X}from"./multidimensionalUtils-DOiUYQzX.js";import{f as Ie,d as $e,a as Fe}from"./RasterVFDisplayObject-D--2zzJD.js";import{a as Ce,j as ze,y as Me}from"./LayerView-BXZgu5ma.js";import{o as Ve,M as A,h as Be,b as Oe,i as ue,r as ke}from"./mat3-DrMmd9ov.js";import{e as M,E as D,o as ce}from"./MapView-BeVuNCRF.js";import{t as O}from"./vec2f32-BbH2jxlN.js";import{e as Le}from"./Container-BiFGiH8X.js";import{L as j,P as Ge,U as De,D as Ee,R as k,O as K}from"./enums-Dk3osxpS.js";import{c as Ae,f as je,m as q,O as I,h as v,_ as W,A as qe,p as We,l as Ne,g as Qe,T as He}from"./rasterUtils-Dv74R2QU.js";import{m as Ze,p as Je}from"./Texture-BcrxBDUu.js";import{a as z}from"./definitions-DyYHcW4a.js";import{e as Ye,a as ee,r as he}from"./WGLContainer-BBlKH_vq.js";import{x as Xe}from"./Program-BjGWc2kL.js";import{i as de}from"./TileContainer-Bm6XItze.js";import{h as Ke}from"./UpdatingHandles-Dsl38oBb.js";import{g as et,S as tt}from"./dataUtils-DNx71KPf.js";import{z as te}from"./TileInfo-CH8_vkEc.js";import{g as se,a as re,i as st,u as rt}from"./RawBlockCache-BDVMVz9F.js";import{V as it,f as at,j as nt,c as ie}from"./rasterProjectionHelper-CXd8duz_.js";import{r as ae,h as ot,p as lt}from"./Tile-DRBHg1ov.js";import"./TileKey-Ba8uBVQH.js";import{g as ut}from"./Scheduler-C3tfNFXN.js";import{t as ct}from"./capabilities-DWNhET5Y.js";import{i as ht}from"./timeSupport-Bp-J4j40.js";import{p as dt}from"./popupUtils-BfHjBcJF.js";import{i as mt}from"./RefreshableLayerView-DCiYewx1.js";import"./BufferObject-Ca7mh5az.js";import"./VertexArrayObject-DrBWj3TA.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./LabelMetric-BY4xyzGw.js";import"./BoundingBox-CnpCxTZE.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-B5mfX9zq.js";import"./CollectionFlattener-CDWmfFqW.js";import"./jsxFactory-D5SMxxYk.js";import"./uuid-Cl5lrJ4c.js";import"./signal-BaP9cQZH.js";import"./ColorBackground-C9MmleQD.js";import"./basemapUtils-DcCkyfUy.js";import"./TablesMixin-EU-_VM0Q.js";import"./HeightModelInfo-CyeP0S36.js";import"./ReactiveMap-DqPTRyUa.js";import"./a11yUtils-B2v4ITWo.js";import"./ViewingMode-dBUh39ak.js";import"./mat2df32-orApM5a3.js";import"./unitBezier-BX6NeAEr.js";import"./vec32-Aogwsubb.js";import"./imageUtils-BYD0O-xd.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-IeUjKp3y.js";import"./accessibleHandler-CU8kWlKG.js";import"./GoTo-DB7hDTs4.js";import"./ZoomViewModel-BnrDWQcO.js";import"./EffectView-edIBKSme.js";import"./ProgramTemplate-DCFRBwYq.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-CQNr1s2Q.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BBYylpiA.js";import"./pixelRangeUtils-Ba7Ehdiw.js";import"./TileKey-DZd6gJy7.js";import"./QueueProcessor-D2gBLI6i.js";import"./quickselect-QQC62dOK.js";const pt={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class ft extends Le{constructor(e=null,t=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){var t;this._rasterTexture!==e&&((t=this._rasterTexture)==null||t.dispose(),this._rasterTexture=e),e==null&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||($(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||pt}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?j.LINEAR:j.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=$(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){var s,i;const t=e||this.projected;return[t?this.width:((s=this.source)==null?void 0:s.width)||this.width,t?this.height:((i=this.source)==null?void 0:i.height)||this.height]}getRasterCellSize(){var i;const e=(i=this.rawPixelData)==null?void 0:i.srcPixelSize,{projected:t,resolution:s}=this;return e&&!t?[e.x,e.y]:[s,s]}_createTransforms(){return{displayViewScreenMat3:M()}}setTransform(e){const t=Ve(this.transforms.displayViewScreenMat3),[s,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,n=a*this.width,o=a*this.height,l=Math.PI*this.rotation/180;A(t,t,O(s,i)),A(t,t,O(n/2,o/2)),Be(t,t,-l),A(t,t,O(-n/2,-o/2)),Oe(t,t,O(n,o)),ue(this.transforms.displayViewScreenMat3,e.displayViewMat3,t)}getTextures({forProcessing:e=!1,useProcessedTexture:t=!1}={}){const s=t?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],a=[];return s?(this._transformGridTexture&&!this.projected&&(a.push(this._transformGridTexture),i.push("u_transformGrid")),t?(a.push(s),i.push("u_image"),this._colormapTexture&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a}):(a.push(s),i.push("u_image"),this._colormapTexture&&!e&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a})):{names:i,textures:a}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const t=this._isValidSource(this.source);t&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(t?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Ae(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach(t=>t==null?void 0:t.dispose()),e.length=0)}_createOrDestroyRasterTexture(e){var n;const t=(n=this.source)==null?void 0:n.extractBands(this.bandIds);if(!this._isValidSource(t))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!e.capabilities.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource;this._rasterTexture=je(e,t,i,a),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const t=this._rasterTextureBandIds;return!(t==null&&e==null||t&&e&&t.join("")===e.join(""))}_isValidSource(e){var t;return e!=null&&((t=e.pixels)==null?void 0:t.length)>0}_getTextureSamplingMethod(e){const{type:t}=this.symbolizerParameters,s=t==="lut"&&!this.symbolizerParameters.isClassBreaks||t==="hillshade"||t==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||s||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,s=this.symbolizerParameters.colormap;return s?t?s.length!==t.length||s.some((i,a)=>i!==t[a])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=q(e,s),void(this._colormap=s)):void 0:(this._colormapTexture=q(e,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){!this._transformGridTexture||e&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function gt(r){return r.source!=null}function N(r){const e=[];return r&&(e.push("applyProjection"),r.spacing[0]===1&&e.push("lookupProjection")),e}function me(r,e,t){const s=!t.capabilities.textureFloatLinear,i=[];return r==="cubic"?i.push("bicubic"):r==="bilinear"&&(e?(i.push("bilinear"),i.push("nnedge")):s&&i.push("bilinear")),i}const _t={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])};function yt(r,e,t){const s=t?[]:N(e.transformGrid);return{defines:s,program:r.painter.materialManager.getProgram(_t,s)}}function xt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});I(r.context,e,a,n),v(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const{colormap:o,colormapOffset:l}=t.symbolizerParameters,u=W(o,l);v(e,s,u)}const bt={createProgram:yt,bindTextureAndUniforms:xt},wt={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function vt(r,e,t){const{colormap:s}=e.symbolizerParameters,i=[...t?[]:N(e.transformGrid),...me(e.interpolation,!0,r.context)];return s!=null&&i.push("applyColormap"),{defines:i,program:r.painter.materialManager.getProgram(wt,i)}}function Tt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});I(r.context,e,a,n),v(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const o=t.symbolizerParameters,{colormap:l,colormapOffset:u}=o;if(l!=null){const h=W(l,u);v(e,s,h)}const d=qe(o);v(e,s,{...d,u_scaling:1})}const Pt={createProgram:vt,bindTextureAndUniforms:Tt},St={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ut(r,e,t){const{colormap:s,bandCount:i}=e.symbolizerParameters,a=[...t?[]:N(e.transformGrid),...me(e.interpolation,i===1,r.context)];return e.isRendereredSource&&!t?a.push("noop"):s!=null&&a.push("applyColormap"),{defines:a,program:r.painter.materialManager.getProgram(St,a)}}function Rt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});I(r.context,e,a,n),v(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const o=t.symbolizerParameters,{colormap:l,colormapOffset:u}=o;if(l!=null){const h=W(l,u);v(e,s,h)}const d=We(o);v(e,s,d)}const It={createProgram:Ut,bindTextureAndUniforms:Rt},G=new Map;function $t(r){return G.get(r)}G.set("lut",bt),G.set("hillshade",Pt),G.set("stretch",It);const Ft=[1,1],Ct=[2,0,0,0,2,0,-1,-1,0];function b(r,e,t,s){const{context:i,rasterFunction:a,hasBranches:n}=r,{raster:o}=a.parameters,l=n?(o==null?void 0:o.id)??-1:0,u=[t.functionTextures[l]??t.rasterTexture],d=["u_image"];if(s){const h=q(i,s);t.functionTextures[100]=h,u.push(h),d.push("u_colormap")}I(i,e,d,u)}function Q(r,e,t){const{rasters:s}=r.rasterFunction.parameters;if(!s)return;if(s.length<2)return b(r,e,t);const i=s.filter(a=>a.name!=="Constant").map(a=>a.id!=null&&a.name!=="Identity"?t.functionTextures[a.id]:t.rasterTexture);if(I(r.context,e,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==s.length){if(s.length===2){const a=s.findIndex(l=>l.name==="Constant"),n=a===0?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:o}=s[a].parameters;e.setUniform1f("u_image1Const",o),e.setUniformMatrix3fv("u_imageSwap",n)}else if(s.length===3){const a=[];if(s.forEach((n,o)=>n.name==="Constant"&&a.push(o)),a.length===1){const{value:n}=s[a[0]].parameters;e.setUniform1f("u_image1Const",n);const o=a[0]===0?[0,1,0,0,0,1,1,0,0]:a[0]===1?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];e.setUniformMatrix3fv("u_imageSwap",o)}else if(a.length===2){const{value:n}=s[a[0]].parameters;e.setUniform1f("u_image1Const",n);const{value:o}=s[a[1]].parameters;e.setUniform1f("u_image2Const",o);const l=s.findIndex(d=>d.name!=="Constant"),u=l===0?[1,0,0,0,1,0,0,0,1]:l===1?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];e.setUniformMatrix3fv("u_imageSwap",u)}}}}function x(r){r.setUniform2fv("u_coordScale",Ft),r.setUniformMatrix3fv("u_dvsMat3",Ct)}const zt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Mt(r,e){return r.painter.materialManager.getProgram(zt,[])}function Vt(r,e,t){b(r,e,t),x(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const i=t.getRasterCellSize();e.setUniform2fv("u_cellSize",i)}const Bt={createProgram:Mt,bindTextureAndUniforms:Vt},Ot={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])};function kt(r,e){const{painter:t,rasterFunction:s}=r,{indexType:i,isOutputRounded:a}=s.parameters,n=[i];return a&&n.push("roundOutput"),t.materialManager.getProgram(Ot,n)}function Lt(r,e,t){b(r,e,t),x(e);const{bandIndexMat3:s,adjustments:i}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s),e.setUniform1fv("u_adjustments",i)}const Gt={createProgram:kt,bindTextureAndUniforms:Lt},Dt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/colormap2rgb",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Et(r){const{painter:e}=r;return e.materialManager.getProgram(Dt,[])}function At(r,e,t){const{indexedColormap:s,offset:i}=r.rasterFunction.parameters;b(r,e,t,s),x(e),e.setUniform1f("u_colormapOffset",i),e.setUniform1f("u_colormapMaxIndex",s.length/4-1)}const jt={createProgram:Et,bindTextureAndUniforms:At},qt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Wt(r,e){const t=r.rasterFunction.parameters.rasters.filter(i=>i.name==="Constant"),s=[];return t.length&&(s.push("oneConstant"),t.length===2&&s.push("twoConstant")),r.painter.materialManager.getProgram(qt,s)}function Nt(r,e,t){Q(r,e,t),x(e)}const Qt={createProgram:Wt,bindTextureAndUniforms:Nt},Ht={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/computechange",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Zt(r){const{painter:e,rasterFunction:t}=r,{method:s,rasters:i,isOutputRounded:a}=t.parameters,n=[s.includes("-")?s.slice(0,s.indexOf("-")):s];return i.filter(o=>o.name==="Constant").length&&n.push("oneConstant"),a&&n.push("roundOutput"),e.materialManager.getProgram(Ht,n)}function Jt(r,e,t){Q(r,e,t),x(e);const{domainRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_domainRange",s)}const Yt={createProgram:Zt,bindTextureAndUniforms:Jt},Xt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/contrast",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Kt(r,e){return r.painter.materialManager.getProgram(Xt,[])}function es(r,e,t){b(r,e,t),x(e);const{contrastOffset:s,brightnessOffset:i}=r.rasterFunction.parameters;e.setUniform1f("u_contrastOffset",s),e.setUniform1f("u_brightnessOffset",i)}const ts={createProgram:Kt,bindTextureAndUniforms:es},ss={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])};function rs(r,e){const{painter:t,rasterFunction:s}=r,{kernelRows:i,kernelCols:a}=s.parameters,n=[{name:"rows",value:i},{name:"cols",value:a}];return t.materialManager.getProgram(ss,n)}function is(r,e,t){b(r,e,t),x(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{kernel:s,clampRange:i}=r.rasterFunction.parameters;e.setUniform1fv("u_kernel",s),e.setUniform2fv("u_clampRange",i)}const as={createProgram:rs,bindTextureAndUniforms:is},ns={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])};function os(r,e){const{painter:t,rasterFunction:s}=r,{curvatureType:i}=s.parameters,a=[i];return t.materialManager.getProgram(ns,a)}function ls(r,e,t){b(r,e,t),x(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const{zFactor:i}=r.rasterFunction.parameters,a=t.getRasterCellSize();e.setUniform1f("u_zlFactor",200*i/a[0]/a[1])}const us={createProgram:os,bindTextureAndUniforms:ls},cs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function hs(r,e){return r.painter.materialManager.getProgram(cs,[])}function ds(r,e,t){b(r,e,t),x(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const ms={createProgram:hs,bindTextureAndUniforms:ds},ps={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/focalstatistics",attributes:new Map([["a_position",0],["a_texcoord",1]])};function fs(r,e){const{painter:t,rasterFunction:s}=r,{kernelRows:i,kernelCols:a,fillNoDataOnly:n,statisticsType:o}=s.parameters,l=[{name:"rows",value:i},{name:"cols",value:a},o];return n&&l.push("fill"),t.materialManager.getProgram(ps,l)}function gs(r,e,t){b(r,e,t),x(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{clampRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_clampRange",s)}const _s={createProgram:fs,bindTextureAndUniforms:gs},ys={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/grayscale",attributes:new Map([["a_position",0],["a_texcoord",1]])};function xs(r,e){return r.painter.materialManager.getProgram(ys,[])}function bs(r,e,t){b(r,e,t),x(e);const{weights:s}=r.rasterFunction.parameters;e.setUniform3fv("u_weights",s)}const ws={createProgram:xs,bindTextureAndUniforms:bs},vs={vsPath:"raster/rfx/vs",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ts(r,e){const{indexedColormap:t}=r.rasterFunction.parameters,s=[];return t!=null&&t.length&&s.push("applyColormap"),r.painter.materialManager.getProgram(vs,s)}function Ps(r,e,t){const s=r.rasterFunction.parameters,{indexedColormap:i}=s;b(r,e,t,i),x(e);const a=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",a);const n=t.getRasterCellSize();e.setUniform2fv("u_cellSize",n);const{pixelSizeFactor:o}=s;if(o===0)e.setUniform2fv("u_factor",[s.factor[0]/n[0],s.factor[1]/n[1]]);else{const{zFactor:l,pixelSizePower:u,gcsFactor:d}=s,h=n[0]*d,c=n[1]*d,g=(l+h**u*o)/(8*h),_=(l+c**u*o)/(8*c);e.setUniform2fv("u_factor",[g,_])}e.setUniform1i("u_hillshadeType",s.hillshadeType),e.setUniform1fv("u_sinZcosAs",s.sinZcosAs),e.setUniform1fv("u_sinZsinAs",s.sinZsinAs),e.setUniform1fv("u_cosZs",s.cosZs),e.setUniform1fv("u_weights",s.weights),e.setUniform1f("u_opacity",1),e.setUniform1i("u_flipY",0),e.setUniform1f("u_scaling",255),e.setUniform1f("u_minValue",s.minValue),e.setUniform1f("u_maxValue",s.maxValue),i&&(e.setUniform1f("u_colormapOffset",s.offset),e.setUniform1f("u_colormapMaxIndex",i.length/4-1))}const ne={createProgram:Ts,bindTextureAndUniforms:Ps},Ss={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Us(r){const{painter:e,rasterFunction:t}=r,{imageCount:s,operationName:i,rasters:a,isOutputRounded:n}=t.parameters,o=[i.toLowerCase()];s===2&&o.push("twoImages");const l=a.filter(u=>u.name==="Constant");return l.length&&(o.push("oneConstant"),l.length===2&&o.push("twoConstant")),n&&o.push("roundOutput"),e.materialManager.getProgram(Ss,o)}function Rs(r,e,t){Q(r,e,t),x(e);const{domainRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_domainRange",s)}const oe={createProgram:Us,bindTextureAndUniforms:Rs},Is={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])};function $s(r,e){const{painter:t,rasterFunction:s}=r,i=s.parameters.bandCount>1?["multiBand"]:[];return t.materialManager.getProgram(Is,i)}function Fs(r,e,t){b(r,e,t),x(e);const{includedRanges:s,noDataValues:i}=r.rasterFunction.parameters;e.setUniform1fv("u_includedRanges",s),e.setUniform1fv("u_noDataValues",i)}const Cs={createProgram:$s,bindTextureAndUniforms:Fs},zs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ms(r,e){const{painter:t,rasterFunction:s}=r,i=s.parameters.scaled?["scaled"]:[];return t.materialManager.getProgram(zs,i)}function Vs(r,e,t){b(r,e,t),x(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const Bs={createProgram:Ms,bindTextureAndUniforms:Vs},Os={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ks(r,e){return r.painter.materialManager.getProgram(Os,[])}function Ls(r,e,t){b(r,e,t),x(e);const{noDataRanges:s,rangeMaps:i,allowUnmatched:a,clampRange:n}=r.rasterFunction.parameters;e.setUniform1fv("u_noDataRanges",s),e.setUniform1fv("u_rangeMaps",i),e.setUniform1f("u_unmatchMask",a?1:0),e.setUniform2fv("u_clampRange",n)}const Gs={createProgram:ks,bindTextureAndUniforms:Ls},Ds={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Es(r,e){var o;const{painter:t}=r,s=[],{interpolation:i,transformGrid:a}=e,n=(o=r.rasterFunction)==null?void 0:o.parameters;return i==="cubic"?s.push("bicubic"):i==="bilinear"&&(s.push("bilinear"),n!=null&&n.requireNNEdge&&s.push("nnedge")),a&&(s.push("applyProjection"),a.spacing[0]===1&&s.push("lookupProjection")),t.materialManager.getProgram(Ds,s)}function As(r,e,t){const{names:s,textures:i}=t.getTextures({forProcessing:!0});I(r.context,e,s,i),e.setUniform1f("u_scale",1),e.setUniform2fv("u_offset",[0,0]),e.setUniform2fv("u_coordScale",[1,1]),e.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),e.setUniform1i("u_flipY",0),e.setUniform1f("u_opacity",1);const{width:a,height:n,source:o,transformGrid:l}=t;e.setUniform2fv("u_srcImageSize",[o.width,o.height]),e.setUniform2fv("u_targetImageSize",[a,n]),e.setUniform2fv("u_transformSpacing",l?l.spacing:Y),e.setUniform2fv("u_transformGridSize",l?l.size:Y)}const js={createProgram:Es,bindTextureAndUniforms:As},qs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ws(r,e){const{painter:t,rasterFunction:s}=r,{slopeType:i,isOutputRounded:a}=s.parameters,n=[];return i==="percent-rise"&&n.push("percentRise"),a&&n.push("roundOutput"),t.materialManager.getProgram(qs,n)}function Ns(r,e,t){b(r,e,t),x(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const i=t.getRasterCellSize();e.setUniform2fv("u_cellSize",i);const{zFactor:a,slopeType:n,pixelSizePower:o,pixelSizeFactor:l}=r.rasterFunction.parameters;e.setUniform1f("u_zFactor",a),e.setUniform1f("u_pixelSizePower",n==="adjusted"?o:0),e.setUniform1f("u_pixelSizeFactor",n==="adjusted"?l:0)}const Qs={createProgram:Ws,bindTextureAndUniforms:Ns},Hs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Zs(r,e){const{useGamma:t,bandCount:s,isOutputRounded:i}=r.rasterFunction.parameters,a=[];return t&&a.push("useGamma"),s>1&&a.push("multiBand"),i&&a.push("roundOutput"),r.painter.materialManager.getProgram(Hs,a)}function Js(r,e,t){b(r,e,t),x(e);const{width:s,height:i}=t,a=r.rasterFunction.parameters;e.setUniform2fv("u_srcImageSize",[s,i]),e.setUniform1f("u_minOutput",a.outMin),e.setUniform1f("u_maxOutput",a.outMax),e.setUniform1fv("u_factor",a.factor),e.setUniform1fv("u_minCutOff",a.minCutOff),e.setUniform1fv("u_maxCutOff",a.maxCutOff),e.setUniform1fv("u_gamma",a.gamma),e.setUniform1fv("u_gammaCorrection",a.gammaCorrection)}const Ys={createProgram:Zs,bindTextureAndUniforms:Js},f=new Map;function pe(r,e){const t=new Je;return t.width=r,t.height=e,t.internalFormat=Ge.RGBA32F,t.samplingMode=j.NEAREST,t.dataType=De.FLOAT,t.isImmutable=!0,t.wrapMode=Ee.CLAMP_TO_EDGE,t}function Xs(r,e,t,s){const{context:i,requestRender:a,allowDelayedRender:n}=r,o=s.createProgram(r,t);return n&&a!=null&&!o.compiled?(a(),null):(i.bindFramebuffer(e),i.setViewport(0,0,e.width,e.height),i.useProgram(o),o)}function Ks(r){return f.get(r.toLowerCase())}function er(r,e,t,s){const i=r.rasterFunction.name.toLowerCase(),a=i==="reproject"?js:Ks(i);if(a==null)return;const n=Xs(r,t,s,a);if(!n)return;a.bindTextureAndUniforms(r,n,s);const{interpolation:o}=s;i==="reproject"&&(s.interpolation="nearest"),e.draw();const[l,u]=s.getRasterTextureSize(i==="reproject"),d=pe(l,u),h=new Ze(r.context,d);if(t.copyToTexture(0,0,l,u,0,0,h),i==="reproject")s.rasterTexture=h,s.projected=!0,s.interpolation=o;else{const c=r.hasBranches?r.rasterFunction.id:0;s.functionTextures[c]=h}}f.set("arithmetic",oe),f.set("aspect",Bt),f.set("bandarithmetic",Gt),f.set("colormaptorgb",jt),f.set("computechange",Yt),f.set("compositeband",Qt),f.set("convolution",as),f.set("contrastbrightness",ts),f.set("curvature",us),f.set("extractband",ms),f.set("statistics",_s),f.set("grayscale",ws),f.set("hillshade",ne),f.set("shadedrelief",ne),f.set("local",oe),f.set("mask",Cs),f.set("ndvi",Bs),f.set("remap",Gs),f.set("slope",Qs),f.set("stretch",Ys);class tr extends Ye{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){$(this._quad),$(this._fbo)}prepareState(e){const{context:t,renderPass:s}=e,i=s==="raster";t.setBlendingEnabled(!i),t.setBlendFunctionSeparate(k.ONE,k.ONE_MINUS_SRC_ALPHA,k.ONE,k.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!i)}draw(e,t){if(!gt(t)||t.suspended)return;const{renderPass:s}=e;if(s!=="raster-bitmap")return s==="raster"?this._process(e,t):void this._drawBitmap(e,t,!0);this._drawBitmap(e,t)}_process(e,t){const{rasterFunction:s}=e,i=s.name==="Reproject";if(!(i?!(t.rasterTexture&&t.projected):!t.processed))return;const{timeline:a,context:n}=e;a.begin(this.name);const o=n.getBoundFramebufferObject(),l=n.getViewport();i||(t.processedTexture=$(t.processedTexture)),n.setStencilFunction(K.EQUAL,t.stencilRef,255),t.updateTexture(e),this._initQuad(n);const[u,d]=t.getRasterTextureSize(i),{isStandardRasterTileSize:h,fbo:c}=this._getRasterFBO(n,u,d);er(e,this._quad,c,t),h||c.dispose(),n.bindFramebuffer(o),n.setViewport(l.x,l.y,l.width,l.height),a.end(this.name)}_drawBitmap(e,t,s=!1){const{timeline:i,context:a}=e;if(i.begin(this.name),a.setStencilFunction(K.EQUAL,t.stencilRef,255),t.updateTexture(e),s&&!t.processedTexture){if(t.updateProcessedTexture(),!t.processedTexture)return void i.end(this.name);t.processed=!0}this._initBitmapCommonUniforms(t);const n=t.symbolizerParameters.type,o=$t(n),{requestRender:l,allowDelayedRender:u}=e,{defines:d,program:h}=o.createProgram(e,t,t.projected&&s);if(u&&l!=null&&!h.compiled)return void l();a.useProgram(h);const c=this._getUniformInfos(n,a,h,d);this._quad||(this._quad=new ee(a,[0,0,1,0,0,1,1,1])),o.bindTextureAndUniforms(e,h,t,c,s),this._quad.draw(),i.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const t=Qe(1,[0,0]),{transformGrid:s,width:i,height:a}=e,n=Ne(s,[i,a],[e.source.width,e.source.height],1,!1);e.commonUniforms={...t,...n,u_coordScale:e.coordScale}}}_getRasterFBO(e,t,s){const i=t===z&&s===z;return i?(this._fbo||(this._fbo=this._createNewFBO(e,t,s)),{isStandardRasterTileSize:i,fbo:this._fbo}):{isStandardRasterTileSize:i,fbo:this._createNewFBO(e,t,s)}}_createNewFBO(e,t,s){const i=pe(t,s);return new Xe(e,i)}_initQuad(e){this._quad||(this._quad=new ee(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,t,s,i){const a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const n=He(t,s);return this._rendererUniformInfos.set(a,n),n}}class sr extends he{constructor(e,t,s,i,a,n,o=null){super(e,t,s,i,a,n),this.bitmap=null,this.bitmap=new ft(o,null,null),this.bitmap.coordScale=[a,n],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:M(),tileMat3:M()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let rr=class extends de{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[s,i]=this.tileInfoView.tileInfo.size,a=this.tileInfoView.getTileResolution(e.level);return new sr(e,a,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[tr],target:()=>this.children.map(s=>s.bitmap),drawPhase:D.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){if(!this.visible||e.drawPhase!==D.MAP)return;const{rasterFunctionChain:t}=this;if(!t)return e.renderPass="raster-bitmap",void super.doRender(e);if(!t.hasFocalFunction){const[s,i]=this.tileInfoView.tileInfo.size;e.renderPass="raster",e.rasterFunction={name:"Reproject",parameters:{targetImageSize:[s,i],requireNNEdge:t.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(e)}if(t!=null&&t.functions.length){const{functions:s,hasBranches:i}=t;for(let a=0;a<s.length;a++){const n=s[a];n.name!=="Constant"&&n.name!=="Identity"&&(e.renderPass="raster",e.rasterFunction=n,e.hasBranches=i,super.doRender(e))}}e.rasterFunction=null,e.renderPass="bitmap",super.doRender(e)}_getTileBounds(e){const t=this.tileInfoView.getTileBounds(le(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:s}=this.tileInfoView,i=ye(s.spatialReference);if(i){const a=s.lodAt(e.level);if(!a)return t;const{resolution:n}=a,o=n*s.size[0];t[0]=i*e.world+s.origin.x+e.col*o,t[2]=t[0]+o}}return t}};const ir=[0,0];let w=class extends xe{constructor(){super(...arguments),this._updatingHandles=new Ke,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=be(async(r={})=>{const e=this._rasterFunctionState;if(r.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const t=this._rasterFunctionState,{type:s}=this;return r.refetch||s!=="raster"&&r.reprocess||t==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(r.signal))})}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(r){this._set("useWebGLForProcessing",r)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(r){if(this._tileStrategy&&this.useProgressiveUpdate!==r){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(r);this._tileStrategy=new ae({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",r),this.layerView.requestUpdate()}}update(r){var a;this._fetchQueue.pause(),this._fetchQueue.state=r.state,this._tileStrategy.update(r),this._fetchQueue.resume();const{extent:e,resolution:t,scale:s}=r.state,i=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const n=this._srcResolutions[i.level],o=e.toJSON?e:we.fromJSON(e);se(this._blockCacheRegistryUrl,this._blockCacheRegistryId,o,t,n,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,((a=this.previousLOD)==null?void 0:a.level)!==i.level&&(this.previousLOD=i,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const r=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(r),this.layerView.requestUpdate()}get updating(){var r;return this._globalUpdateRequested||((r=this._updatingHandles)==null?void 0:r.updating)}attach(){const r=ct();this._maxIndexedColormapSize=4*(r.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new ot(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new lt({tileInfoView:this._tileInfoView,concurrency:e,process:(s,i)=>this._fetchTile(s,i),priority:ut.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new ae({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,re(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(r){const e=this.container.createTile(r);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(r){this._fetchQueue.abort(r.key.id),this.container.removeChild(r),r.once("detach",()=>{r.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(r=null){const e=r==null||r.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;r=r||this._tileInfoView.tileInfo.size;const[t,s]=r,i=new et({width:t,height:s,pixels:[new Uint8Array(t*s)],mask:new Uint8Array(t*s),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:r,raster:e}=this.layer,t="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return r!=null&&r.length&&(t!=null&&t.length)&&e.rasterInfo.bandCount!==1?r.map(s=>t[Math.min(s,t.length-1)]):r||t}updateRasterFunctionParameters(){}_fetchTile(r,e){const t=this._getFetchOptions(r.level,e.signal);return this.fetchTile(r,t)}_getFetchOptions(r,e){const t=this.canUseWebGLForProcessing(),{layerView:s}=this,{tileInfo:i}=s,a=!i.isWrappable&&it(s.view.spatialReference)!=null,n=t&&this.layer.raster.hasUniqueSourceStorageInfo;return{allowPartialFill:!0,datumTransformation:s.datumTransformation,interpolation:t?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:n,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[r],timeExtent:s.timeExtent,tileInfo:i,disableWrapAround:a}}_getCacheSize(r){return r?40:0}_initializeTileInfo(){const{layerView:r}=this,e=r.view.spatialReference;if(this._canUseLayerLODs()){const{origin:u,lods:d}=this.layer.tileInfo,h=d.map(({scale:g})=>g),c=te.create({spatialReference:e,size:z,scales:h,origin:u});return r.set("tileInfo",c),void(this._srcResolutions=d.map(({resolution:g})=>({x:g,y:g})))}const{scales:t,srcResolutions:s,isCustomTilingScheme:i}=at(this.layer.serviceRasterInfo,e,{tileSize:z,alignGlobalDatasetWithAGOL:!0}),a=te.create({spatialReference:e,size:z,scales:t}),n=a.origin.x===0;ve(r.fullExtent);const{xmin:o,ymax:l}=r.fullExtent;(n||i&&a.origin.x>o)&&(a.origin=new Te({x:o,y:l,spatialReference:e})),this._isCustomTilingScheme=i,r.set("tileInfo",a),this._srcResolutions=s??[]}_canUseLayerLODs(){var i;const{layer:r,layerView:e}=this;if(r.raster.tileType!=="Map")return!1;const{lods:t}=r.tileInfo,s=(i=e.view.constraints)==null?void 0:i.effectiveLODs;return(s==null?void 0:s.length)===t.length&&s.every(({scale:a},n)=>Math.abs(a-t[n].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:r}=this.layer.serviceRasterInfo.storageInfo,e=r[r.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(r,e){var t;if(!this._fetchQueue.has(r.key.id)){try{const s=await this._fetchQueue.push(r.key),i=this._getBandIds();let a=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){a=!1;try{await this._redrawImage((t=this._abortController)==null?void 0:t.signal)}catch(l){F(l)&&C.getLogger(this).error(l)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const n=this._tileInfoView.getTileCoords(ir,r.key),o=this._tileInfoView.getTileResolution(r.key);await this.updateTileSource(r,{source:s,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:a,bandIds:i,coords:n,resolution:o}),r.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(r)}catch(s){F(s)||C.getLogger(this).error(s)}this.layerView.requestUpdate()}}async _redrawImage(r){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(r):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async t=>this.updateTileSymbolizerParameters(t,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(r){const e=this._getFetchOptions(this.previousLOD.level,r),t=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!(t!=null&&t.pixelBlock))return;const{resolution:s}=this.previousLOD,i=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:t.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:s,y:s},bandIds:i});!this.canUseWebGLForProcessing()&&a&&a.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(a.factor=a.factor.map(n=>255*n),a.outMin=Math.round(255*a.outMin),a.outMax=Math.round(255*a.outMax)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:r}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:e})}_updateBlockCacheRegistry(r=!1){const{layer:e,layerView:t}=this,{raster:s}=e,{multidimensionalDefinition:i}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:t.timeExtent}),a=s.rasterInfo.multidimensionalInfo?s.getSliceIndex(i):null,n=st(s.rasterId,a);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&re(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=rt(n,s.rasterInfo),r){const{view:o}=t,l=this._tileInfoView.getClosestInfoForScale(o.scale),u=this._srcResolutions[l.level];se(n,this._blockCacheRegistryId,o.extent,o.resolution,u,s.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const r=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>r.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(r))}};m([p()],w.prototype,"_globalUpdateRequested",void 0),m([p()],w.prototype,"attached",void 0),m([p()],w.prototype,"container",void 0),m([p()],w.prototype,"layer",void 0),m([p()],w.prototype,"layerView",void 0),m([p()],w.prototype,"scheduler",void 0),m([p()],w.prototype,"type",void 0),m([p()],w.prototype,"useWebGLForProcessing",null),m([p()],w.prototype,"useProgressiveUpdate",null),m([p()],w.prototype,"timeExtent",void 0),m([p()],w.prototype,"updating",null),w=m([V("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],w);let U=class extends w{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new rr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){var i,a;const{symbolizer:e}=this.layer,t=(a=(i=e.lookup)==null?void 0:i.colormapLut)==null?void 0:a.indexedColormap,s=t&&t.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&e.canRenderInWebGL&&!s&&!(this.layer.interpolation==="majority"&&ce(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}updateRasterFunctionParameters(){const{clips:e,view:t}=this.layerView;this._geometry!=null&&e.remove(this._geometry);const{raster:s,type:i}=this.layer;if(s.datasetFormat==="Function"){const _=s.getClippingGeometry(t.spatialReference);if(_){const y=new Ce({geometry:_});e.add(y),this._geometry=y}}const{container:a}=this;if(s.datasetFormat!=="Function"||i==="wcs")return a.rasterFunctionChain=null,a.children.forEach(_=>{const{bitmap:y}=_;y&&(y.suspended=!0,y.processed=!1,y.projected&&(y.invalidateTexture(),y.rasterTexture=null))}),void(this._rasterFunctionState="na");const n=this._rasterFunctionState,{rasterFunction:o,primaryRasters:l}=s,u=o.supportsGPU&&(!l||l.rasters.length<=1),d=u?o.flatWebGLFunctionChain:null,{renderer:h}=this.layer,c=!u||!(d!=null&&d.functions.length)||(h==null?void 0:h.type)==="raster-stretch"&&h.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();a.rasterFunctionChain=c?null:d;const g=o==null?"na":a.rasterFunctionChain?"gpu":"cpu";a.children.forEach(_=>{const{bitmap:y}=_;y&&(y.suspended=n!==g,y.processed=!1,y.processedTexture=null)}),this._rasterFunctionState=g}async updateTileSource(e,t){const s=this._getBandIds(),i=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{source:n,globalSymbolizerParams:o,suspended:l,coords:u,resolution:d}=t,h=this.layerView.hasTilingEffects?o:t.symbolizerParams,{bitmap:c}=e;if([c.x,c.y]=u,c.resolution=d,(n==null?void 0:n.pixelBlock)!=null){const g={extent:n.extent,pixelBlock:n.pixelBlock,srcPixelSize:n.srcTilePixelSize};if(c.rawPixelData=g,a)c.source=n.pixelBlock,c.isRendereredSource=!1;else{const _=await this.layer.applyRenderer(g,(o==null?void 0:o.type)==="stretch"?o:void 0);c.source=_,c.isRendereredSource=!0}c.symbolizerParameters=a?h:null,c.transformGrid=a?n.transformGrid:null}else{const g=this.createEmptyTilePixelBlock();c.source=g,c.symbolizerParameters=a?h:null,c.transformGrid=null}c.bandIds=a?s:null,c.width=this._tileInfoView.tileInfo.size[0],c.height=this._tileInfoView.tileInfo.size[1],c.interpolation=i,c.suspended=l,c.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:s,global:i}=t,a=this._getBandIds(),n=this._getLayerInterpolation(),o=this.canUseWebGLForProcessing(),{bitmap:l}=e,{rawPixelData:u}=l;o||u==null?(l.isRendereredSource&&u!=null&&(l.source=u.pixelBlock),l.isRendereredSource=!1):(l.source=await this.layer.applyRenderer(u,(i==null?void 0:i.type)==="stretch"?i:void 0),l.isRendereredSource=!0),l.symbolizerParameters=o?this.layerView.hasTilingEffects?i:s:null,l.bandIds=o?a:null,l.interpolation=n,l.suspended=!1}_getLayerInterpolation(){const{interpolation:e,renderer:t}=this.layer;if(!t)return e;const s=t.type;return s==="raster-colormap"||s==="unique-value"?"nearest":t.type==="raster-stretch"&&t.colorRamp!=null?e==="bilinear"||e==="cubic"?"bilinear":"nearest":e}};m([p()],U.prototype,"container",void 0),m([p()],U.prototype,"layer",void 0),m([p()],U.prototype,"type",void 0),U=m([V("esri.views.2d.layers.imagery.ImageryTileView2D")],U);const ar=U;class nr extends he{constructor(e,t,s,i,a,n,o=null){super(e,t,s,i,a,n),this.tileData=new Ie(o),this.tileData.coordScale=[a,n],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:M(),tileMat3:M()}}setTransform(e){super.setTransform(e);const t=this.resolution/(e.resolution*e.pixelRatio),s=this.transforms.tileMat3,[i,a]=this.tileData.offset,n=[this.x+i*this.resolution,this.y-a*this.resolution],[o,l]=e.toScreenNoRotation([0,0],n),{symbolTileSize:u}=this.tileData.symbolizerParameters,d=Math.round((this.width-this.tileData.offset[0])/u)*u,h=Math.round((this.height-this.tileData.offset[1])/u)*u,c=d/this.rangeX*t,g=h/this.rangeY*t;ke(s,c,0,0,0,g,0,o,l,1),ue(this.transforms.displayViewScreenMat3,e.displayViewMat3,s),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class or extends de{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this.tileInfoView.getTileBounds(le(),e),[s,i]=this.tileInfoView.tileInfo.size,a=this.tileInfoView.getTileResolution(e.level);return new nr(e,a,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[$e],target:()=>this.children.map(s=>s.tileData),drawPhase:D.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===D.MAP&&this.symbolTypes.forEach(t=>{e.renderPass=t,super.doRender(e)})}}let R=class extends w{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(r,e){var s;e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const t=await this.layer.fetchTile(r.level,r.row,r.col,e);return((s=this.layer.serviceRasterInfo)==null?void 0:s.dataType)==="vector-magdir"&&(t!=null&&t.pixelBlock)&&(t.pixelBlock=await this.layer.convertVectorFieldData(t.pixelBlock,e)),t}updateTileSource(r,e){const t=e.symbolizerParams,{tileData:s}=r;s.key=r.key,s.width=this._tileInfoView.tileInfo.size[0],s.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=t,{source:a}=e;if(s.offset=this._getTileSymbolOffset(s.key,i),(a==null?void 0:a.pixelBlock)!=null){const n={extent:a.extent,pixelBlock:a.pixelBlock};s.rawPixelData=n,s.symbolizerParameters=t,s.source=this._sampleVectorFieldData(a.pixelBlock,t,s.offset)}else{const n=[Math.round((this._tileInfoView.tileInfo.size[0]-s.offset[0])/i),Math.round((this._tileInfoView.tileInfo.size[1]-s.offset[1])/i)],o=this.createEmptyTilePixelBlock(n);s.source=o,s.symbolizerParameters=t}return s.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(r,e){var o;const t=e.local,{symbolTileSize:s}=t,{tileData:i}=r;i.offset=this._getTileSymbolOffset(i.key,s);const a=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=t;const n=(o=i.rawPixelData)==null?void 0:o.pixelBlock;return n!=null&&a!==s&&(i.source=this._sampleVectorFieldData(n,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new or(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=L(()=>this.layer.renderer,r=>this._updateSymbolType(r))}detach(){var r;super.detach(),this.container.removeAllChildren(),(r=this._handle)==null||r.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(r,e){const t=r.col*this._tileInfoView.tileInfo.size[0]%e,s=r.row*this._tileInfoView.tileInfo.size[1]%e;return[t>e/2?e-t:-t,s>e/2?e-s:-s]}_sampleVectorFieldData(r,e,t){const{symbolTileSize:s}=e;return tt(r,"vector-uv",s,t)}_updateSymbolType(r){r.type==="vector-field"&&(this.container.symbolTypes=r.style==="wind-barb"?["scalar","triangle"]:r.style==="simple-scalar"?["scalar"]:["triangle"])}};m([p()],R.prototype,"container",void 0),m([p()],R.prototype,"layer",void 0),m([p()],R.prototype,"type",void 0),R=m([V("esri.views.2d.layers.imagery.VectorFieldTileView2D")],R);const lr=R,ur=r=>{let e=class extends r{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){var t;return ht(this.layer,(t=this.view)==null?void 0:t.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?nt(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(t){try{return!this.layer.loaded||!!ie(this.layer.serviceRasterInfo,t)}catch{return!1}}async fetchPopupFeaturesAtLocation(t,s){var c,g;const{layer:i}=this;if(!t)throw new Pe("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:a}=i,n=dt(i,s);if(!a||n==null)return[];const o=[],{value:l,magdirValue:u,processedValue:d}=await i.identify(t,{timeExtent:this.timeExtent,signal:s==null?void 0:s.signal});let h="";if(l!=null&&l.length){h=i.type==="imagery-tile"&&i.hasStandardTime()&&l[0]!=null?l.map(E=>i.getStandardTimeValue(E)).join(", "):l.join(", ");const _={ObjectId:0},y="Raster.ServicePixelValue";_[y]=i.type==="imagery-tile"&&i.raster.datasetFormat==="Function"?d==null?void 0:d.join(", "):h,_[y+".Raw"]=h;const S=((c=i.raster)==null?void 0:c.rasterInfo)??i.serviceRasterInfo,H=S==null?void 0:S.attributeTable;if(H!=null){const{fields:E,features:ge}=H,J=E.find(({name:T})=>T.toLowerCase()==="value"),_e=_[y],B=J?ge.find(T=>String(T.attributes[J.name])===_e):null;if(B)for(const T in B.attributes)B.attributes.hasOwnProperty(T)&&(_[this._rasterFieldPrefix+T]=B.attributes[T])}const Z=S==null?void 0:S.dataType;Z!=="vector-magdir"&&Z!=="vector-uv"||(_["Raster.Magnitude"]=u==null?void 0:u[0],_["Raster.Direction"]=u==null?void 0:u[1]);const fe=new Se({geometry:(g=this.fullExtent)==null?void 0:g.clone(),attributes:_,layer:i,sourceLayer:i});o.push(fe)}return o}_getFullExtent(){return ie(this.layer.serviceRasterInfo,this.view.spatialReference)}};return m([p()],e.prototype,"fullExtent",null),m([p()],e.prototype,"layer",void 0),m([p({readOnly:!0})],e.prototype,"timeExtent",null),m([p()],e.prototype,"tileInfo",void 0),m([p({readOnly:!0})],e.prototype,"hasTilingEffects",null),m([p()],e.prototype,"datumTransformation",null),e=m([V("esri.views.layers.ImageryTileLayerView")],e),e};let P=class extends ur(mt(ze(Me))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(r){this._useWebGLForProcessing=r,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=r)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(r){this._useProgressiveUpdate=r,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=r)}get displayParameters(){const{layer:r}=this,e=this._get("displayParameters");return r.renderer?{bandIds:r.bandIds,renderer:r.renderer,interpolation:r.interpolation,multidimensionalDefinition:r.multidimensionalDefinition,rasterFunction:r.type==="imagery-tile"?r.rasterFunction:null}:e}update(r){var e;(e=this.subview)==null||e.update(r),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([L(()=>this.displayParameters,(r,e)=>{const t=r.interpolation!==(e==null?void 0:e.interpolation)&&(r.interpolation==="majority"||(e==null?void 0:e.interpolation)==="majority")&&ce(this.layer),s=r.renderer!==(e==null?void 0:e.renderer)&&this._getSubviewType(e==null?void 0:e.renderer)!==this._getSubviewType(r.renderer);s&&this._updateSubview();const i=r.multidimensionalDefinition!==(e==null?void 0:e.multidimensionalDefinition),a=r.rasterFunction!==(e==null?void 0:e.rasterFunction),n=a&&!this._useWebGLForProcessing,o=i||t||s||n;this.subview.redrawOrRefetch({refetch:o,reprocess:a}).catch(l=>{F(l)||C.getLogger(this).error(l)}),this.notifyChange("updating")}),L(()=>this.layer.multidimensionalSubset??null,(r,e)=>{const{multidimensionalDefinition:t}=this.layer;t!=null&&X(t,r)!==X(t,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(s=>{F(s)||C.getLogger(this).error(s)}),this.notifyChange("updating"))},Ue),L(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(r=>{F(r)||C.getLogger(this).error(r)})},Re)])}detach(){var r;this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),(r=this.subview)==null||r.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){var i;const{renderer:r}=this.layer;if(!r)return;const e=this._getSubviewType(r);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),(i=this.subview)==null||i.destroy(),this.subview=null}const{layer:t}=this;let s;if(s=e==="rasterVF"?new lr({layer:t,layerView:this,scheduler:this.scheduler}):e==="flow"?new Fe({layer:t,layerView:this,scheduler:this.scheduler}):new ar({layer:t,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in s&&(s.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in s&&(s.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in s){const{subview:a}=this;s.previousLOD=a&&"previousLOD"in a?a.previousLOD:null}this._attachSubview(s),this.subview=s,this.requestUpdate()}_attachSubview(r){r&&!r.attached&&(r.attach(),r.attached=!0,this.container.addChildAt(r.container,0))}_detachSubview(r){r!=null&&r.attached&&(this.container.removeChild(r.container),r.detach(),r.attached=!1)}_getSubviewType(r){const e=r==null?void 0:r.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};m([p()],P.prototype,"subview",void 0),m([p()],P.prototype,"useWebGLForProcessing",null),m([p()],P.prototype,"useProgressiveUpdate",null),m([p({readOnly:!0})],P.prototype,"displayParameters",null),P=m([V("esri.views.2d.layers.ImageryTileLayerView2D")],P);const Ti=P;export{Ti as default};
//# sourceMappingURL=ImageryTileLayerView2D-5gVq_YAH.js.map

import{I as f,dc as d,dd as m,de as n,U as l}from"./index-Club40b3.js";import{i as k}from"./WebMap-BueuDxS9.js";import"./ColorBackground-C9MmleQD.js";import"./CollectionFlattener-CDWmfFqW.js";import"./basemapUtils-DcCkyfUy.js";import"./TablesMixin-EU-_VM0Q.js";import"./MultiOriginJSONSupport-BEThRq27.js";import"./portalItemUtils-BFPvV2jZ.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-DkMYd3l4.js";import"./jsonContext-BI9PU4gF.js";import"./project-DeFuvCVW.js";import"./FeatureLayer-BT8Bna_d.js";import"./commonProperties-C7qVnWA0.js";import"./FeatureLayerBase-Brgke90g.js";import"./HeightModelInfo-CyeP0S36.js";import"./featureLayerUtils-DGP_qgKj.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-CON6ZVex.js";import"./Relationship-C52zRLrQ.js";import"./serviceCapabilitiesUtils-CiTafVMC.js";import"./editsZScale-Dm-aRfhz.js";import"./APIKeyMixin-CygWNKme.js";import"./ArcGISService-Nvh9xVH1.js";import"./CustomParametersMixin-CWS7gQZS.js";import"./EditBusLayer-CuqbZRUQ.js";import"./FeatureEffectLayer-C8jzoxly.js";import"./FeatureEffect-22EIS-1y.js";import"./FeatureReductionLayer-Cd7ZHusx.js";import"./FeatureReductionSelection-kviuNazU.js";import"./labelingInfo-BYGFQ--y.js";import"./labelUtils-9UeHmwQ0.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-Bg1GjXra.js";import"./OrderedLayer-BPW7XlQy.js";import"./OrderByInfo-BdSameQq.js";import"./PortalLayer-CB5zFuuX.js";import"./RefreshableLayer-8wKJynh4.js";import"./TemporalLayer-alZzuFqB.js";import"./FeatureTemplate-4pdVRtmp.js";import"./FeatureType-5k9utpDt.js";import"./fieldProperties-BzPjeRbS.js";import"./versionUtils-CA5wZBTi.js";import"./styleUtils-DYnR3WAv.js";import"./popupUtils-UvwxK4SE.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-DfYN2Y9z.js";async function nt(i,t,a){const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s={...r,returnEdits:!0,f:"json"},p=n({...e.query,...s}),o=m(p,{...a,method:"post"}),u=`${e.path}/validateNetworkTopology`,{data:c}=await l(u,o);return k.fromJSON(v(c))}async function lt(i,t,a){if(!t.gdbVersion)throw new f("submit-validate-network-topology-job:missing-gdb-version","version is missing");const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s=m(e.query,{query:n({...r,returnEdits:!0,async:!0,f:"json"}),...a,method:"post"}),p=`${e.path}/validateNetworkTopology`,{data:o}=await l(p,s);return o?o.statusUrl:null}function v(i){return i.serviceEdits&&(i.serviceEdits=i.serviceEdits.map(t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures}))),i}export{v as handleValidateNetworkTopologyResult,lt as submitValidateNetworkTopologyJob,nt as validateNetworkTopology};
//# sourceMappingURL=validateNetworkTopology-BMssEOXL.js.map

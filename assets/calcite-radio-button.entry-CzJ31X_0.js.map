{"version":3,"file":"calcite-radio-button.entry-CzJ31X_0.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/calcite-radio-button.entry.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { r as registerInstance, c as createEvent, f as forceUpdate, h, H as Host, g as getElement } from './index-abe3b66e.js';\nimport { g as getRoundRobinIndex } from './array-2c4e379e.js';\nimport { g as getElementDir, d as focusElement, t as toAriaBoolean } from './dom-b6dedd88.js';\nimport { c as connectForm, d as disconnectForm, H as HiddenFormInputSlot } from './form-8ec29459.js';\nimport { g as guid } from './guid-9c230b6a.js';\nimport { u as updateHostInteraction, I as InteractiveContainer } from './interactive-1a42577a.js';\nimport { c as connectLabel, d as disconnectLabel, g as getLabelText } from './label-043ae25a.js';\nimport { c as componentFocusable, s as setUpLoadableComponent, a as setComponentLoaded } from './loadable-13e9ffb2.js';\nimport './resources-a23d2491.js';\nimport './component-5f0a8be8.js';\nimport './browser-618ac057.js';\n\nconst CSS = {\n    container: \"container\",\n};\n\nconst radioButtonCss = \":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:block;cursor:pointer}:host .container{position:relative;outline:2px solid transparent;outline-offset:2px}:host .radio{cursor:pointer;border-radius:9999px;background-color:var(--calcite-color-foreground-1);outline-color:transparent;transition:background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;box-shadow:inset 0 0 0 1px var(--calcite-color-border-input)}:host([hovered]) .radio,:host(:not([checked])[focused]:not([disabled])) .radio{box-shadow:inset 0 0 0 2px var(--calcite-color-brand)}:host([focused]) .radio{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));outline-offset:calc(\\n            2px *\\n            calc(\\n              1 -\\n              2 * clamp(\\n                0,\\n                var(--calcite-offset-invert-focus),\\n                1\\n              )\\n            )\\n          )}:host([disabled]) .radio{cursor:default;opacity:var(--calcite-opacity-disabled)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hovered][disabled]) .radio{box-shadow:inset 0 0 0 1px var(--calcite-color-border-input)}:host([scale=s]){--calcite-radio-size:var(--calcite-font-size--2)}:host([scale=m]){--calcite-radio-size:var(--calcite-font-size--1)}:host([scale=l]){--calcite-radio-size:var(--calcite-font-size-0)}.radio{block-size:var(--calcite-radio-size);max-inline-size:var(--calcite-radio-size);min-inline-size:var(--calcite-radio-size)}:host([scale=s][checked]) .radio,:host([hovered][scale=s][checked][disabled]) .radio{box-shadow:inset 0 0 0 4px var(--calcite-color-brand)}:host([scale=s][focused][checked]:not([disabled])) .radio{box-shadow:inset 0 0 0 4px var(--calcite-color-brand), 0 0 0 2px var(--calcite-color-foreground-1)}:host([scale=m][checked]) .radio,:host([hovered][scale=m][checked][disabled]) .radio{box-shadow:inset 0 0 0 5px var(--calcite-color-brand)}:host([scale=m][focused][checked]:not([disabled])) .radio{box-shadow:inset 0 0 0 5px var(--calcite-color-brand), 0 0 0 2px var(--calcite-color-foreground-1)}:host([scale=l][checked]) .radio,:host([hovered][scale=l][checked][disabled]) .radio{box-shadow:inset 0 0 0 6px var(--calcite-color-brand)}:host([scale=l][focused][checked]:not([disabled])) .radio{box-shadow:inset 0 0 0 6px var(--calcite-color-brand), 0 0 0 2px var(--calcite-color-foreground-1)}@media (forced-colors: active){:host([checked]) .radio::after,:host([checked][disabled]) .radio::after{content:\\\"\\\";inline-size:var(--calcite-radio-size);block-size:var(--calcite-radio-size);background-color:windowText;display:block}}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteRadioButtonStyle0 = radioButtonCss;\n\nconst RadioButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.calciteInternalRadioButtonBlur = createEvent(this, \"calciteInternalRadioButtonBlur\", 6);\n        this.calciteRadioButtonChange = createEvent(this, \"calciteRadioButtonChange\", 6);\n        this.calciteInternalRadioButtonCheckedChange = createEvent(this, \"calciteInternalRadioButtonCheckedChange\", 6);\n        this.calciteInternalRadioButtonFocus = createEvent(this, \"calciteInternalRadioButtonFocus\", 6);\n        this.selectItem = (items, selectedIndex) => {\n            items[selectedIndex].click();\n        };\n        this.queryButtons = () => {\n            return Array.from(this.rootNode.querySelectorAll(\"calcite-radio-button:not([hidden])\")).filter((radioButton) => radioButton.name === this.name);\n        };\n        this.isFocusable = () => {\n            const radioButtons = this.queryButtons();\n            const firstFocusable = radioButtons.find((radioButton) => !radioButton.disabled);\n            const checked = radioButtons.find((radioButton) => radioButton.checked);\n            return firstFocusable === this.el && !checked;\n        };\n        this.check = () => {\n            if (this.disabled) {\n                return;\n            }\n            this.focused = true;\n            this.setFocus();\n            if (this.checked) {\n                return;\n            }\n            this.uncheckAllRadioButtonsInGroup();\n            this.checked = true;\n            this.calciteRadioButtonChange.emit();\n        };\n        this.clickHandler = () => {\n            if (this.disabled) {\n                return;\n            }\n            this.check();\n        };\n        this.setContainerEl = (el) => {\n            this.containerEl = el;\n        };\n        this.handleKeyDown = (event) => {\n            const keys = [\"ArrowLeft\", \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \" \"];\n            const { key } = event;\n            const { el } = this;\n            if (keys.indexOf(key) === -1) {\n                return;\n            }\n            if (key === \" \") {\n                this.check();\n                event.preventDefault();\n                return;\n            }\n            let adjustedKey = key;\n            if (getElementDir(el) === \"rtl\") {\n                if (key === \"ArrowRight\") {\n                    adjustedKey = \"ArrowLeft\";\n                }\n                if (key === \"ArrowLeft\") {\n                    adjustedKey = \"ArrowRight\";\n                }\n            }\n            const radioButtons = Array.from(this.rootNode.querySelectorAll(\"calcite-radio-button:not([hidden])\")).filter((radioButton) => radioButton.name === this.name);\n            let currentIndex = 0;\n            const radioButtonsLength = radioButtons.length;\n            radioButtons.some((item, index) => {\n                if (item.checked) {\n                    currentIndex = index;\n                    return true;\n                }\n            });\n            switch (adjustedKey) {\n                case \"ArrowLeft\":\n                case \"ArrowUp\":\n                    event.preventDefault();\n                    this.selectItem(radioButtons, getRoundRobinIndex(Math.max(currentIndex - 1, -1), radioButtonsLength));\n                    return;\n                case \"ArrowRight\":\n                case \"ArrowDown\":\n                    event.preventDefault();\n                    this.selectItem(radioButtons, getRoundRobinIndex(currentIndex + 1, radioButtonsLength));\n                    return;\n                default:\n                    return;\n            }\n        };\n        this.onContainerBlur = () => {\n            this.focused = false;\n            this.calciteInternalRadioButtonBlur.emit();\n        };\n        this.onContainerFocus = () => {\n            if (!this.disabled) {\n                this.focused = true;\n                this.calciteInternalRadioButtonFocus.emit();\n            }\n        };\n        this.checked = false;\n        this.disabled = false;\n        this.focused = false;\n        this.form = undefined;\n        this.guid = undefined;\n        this.hovered = false;\n        this.label = undefined;\n        this.name = undefined;\n        this.required = false;\n        this.scale = \"m\";\n        this.value = undefined;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Global attributes\n    //\n    //--------------------------------------------------------------------------\n    handleHiddenChange() {\n        this.updateTabIndexOfOtherRadioButtonsInGroup();\n    }\n    checkedChanged(newChecked) {\n        if (newChecked) {\n            this.uncheckOtherRadioButtonsInGroup();\n        }\n        this.calciteInternalRadioButtonCheckedChange.emit();\n    }\n    disabledChanged() {\n        this.updateTabIndexOfOtherRadioButtonsInGroup();\n    }\n    nameChanged() {\n        this.checkLastRadioButton();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        if (!this.disabled) {\n            focusElement(this.containerEl);\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    syncHiddenFormInput(input) {\n        input.type = \"radio\";\n    }\n    onLabelClick(event) {\n        if (this.disabled || this.el.hidden) {\n            return;\n        }\n        const label = event.currentTarget;\n        const radioButton = label.for\n            ? this.rootNode.querySelector(`calcite-radio-button[id=\"${label.for}\"]`)\n            : label.querySelector(`calcite-radio-button[name=\"${this.name}\"]`);\n        if (!radioButton) {\n            return;\n        }\n        radioButton.focused = true;\n        this.setFocus();\n        if (radioButton.checked) {\n            return;\n        }\n        this.uncheckOtherRadioButtonsInGroup();\n        radioButton.checked = true;\n        this.calciteRadioButtonChange.emit();\n    }\n    checkLastRadioButton() {\n        const radioButtons = this.queryButtons();\n        const checkedRadioButtons = radioButtons.filter((radioButton) => radioButton.checked);\n        if (checkedRadioButtons?.length > 1) {\n            const lastCheckedRadioButton = checkedRadioButtons[checkedRadioButtons.length - 1];\n            checkedRadioButtons\n                .filter((checkedRadioButton) => checkedRadioButton !== lastCheckedRadioButton)\n                .forEach((checkedRadioButton) => {\n                checkedRadioButton.checked = false;\n                checkedRadioButton.emitCheckedChange();\n            });\n        }\n    }\n    /** @internal */\n    async emitCheckedChange() {\n        this.calciteInternalRadioButtonCheckedChange.emit();\n    }\n    uncheckAllRadioButtonsInGroup() {\n        const radioButtons = this.queryButtons();\n        radioButtons.forEach((radioButton) => {\n            if (radioButton.checked) {\n                radioButton.checked = false;\n                radioButton.focused = false;\n            }\n        });\n    }\n    uncheckOtherRadioButtonsInGroup() {\n        const radioButtons = this.queryButtons();\n        const otherRadioButtons = radioButtons.filter((radioButton) => radioButton.guid !== this.guid);\n        otherRadioButtons.forEach((otherRadioButton) => {\n            if (otherRadioButton.checked) {\n                otherRadioButton.checked = false;\n                otherRadioButton.focused = false;\n            }\n        });\n    }\n    updateTabIndexOfOtherRadioButtonsInGroup() {\n        const radioButtons = this.queryButtons();\n        const otherFocusableRadioButtons = radioButtons.filter((radioButton) => radioButton.guid !== this.guid && !radioButton.disabled);\n        otherFocusableRadioButtons.forEach((radioButton) => {\n            forceUpdate(radioButton);\n        });\n    }\n    getTabIndex() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return this.checked || this.isFocusable() ? 0 : -1;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    pointerEnterHandler() {\n        if (this.disabled) {\n            return;\n        }\n        this.hovered = true;\n    }\n    pointerLeaveHandler() {\n        if (this.disabled) {\n            return;\n        }\n        this.hovered = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        this.rootNode = this.el.getRootNode();\n        this.guid = this.el.id || `calcite-radio-button-${guid()}`;\n        if (this.name) {\n            this.checkLastRadioButton();\n        }\n        connectLabel(this);\n        connectForm(this);\n        this.updateTabIndexOfOtherRadioButtonsInGroup();\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        if (this.focused && !this.disabled) {\n            this.setFocus();\n        }\n    }\n    disconnectedCallback() {\n        disconnectLabel(this);\n        disconnectForm(this);\n        this.updateTabIndexOfOtherRadioButtonsInGroup();\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const tabIndex = this.getTabIndex();\n        return (h(Host, { key: '45fcb686faaafd7fa14c61ae37c7e56394a2f75d', onClick: this.clickHandler, onKeyDown: this.handleKeyDown }, h(InteractiveContainer, { key: '3172c8e34562872615f7ff91f3cef82042b14c32', disabled: this.disabled }, h(\"div\", { key: 'c33c5c4c5bdd1a8fdd821491bf9bf179e19eeef5', \"aria-checked\": toAriaBoolean(this.checked), \"aria-label\": getLabelText(this), class: CSS.container, onBlur: this.onContainerBlur, onFocus: this.onContainerFocus, ref: this.setContainerEl, role: \"radio\", tabIndex: tabIndex }, h(\"div\", { key: '88bc96d9b946384bf96aefa2dcdf5f6ca39ae7a2', class: \"radio\" })), h(HiddenFormInputSlot, { key: '0851a97b89e6f09ae9634c6417a9950ea3ba1ef6', component: this }))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"hidden\": [\"handleHiddenChange\"],\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"name\": [\"nameChanged\"]\n    }; }\n};\nRadioButton.style = CalciteRadioButtonStyle0;\n\nexport { RadioButton as calcite_radio_button };\n\n//# sourceMappingURL=calcite-radio-button.entry.js.map"],"names":["CSS","radioButtonCss","CalciteRadioButtonStyle0","RadioButton","hostRef","registerInstance","createEvent","items","selectedIndex","radioButton","radioButtons","firstFocusable","checked","el","event","keys","key","adjustedKey","getElementDir","currentIndex","radioButtonsLength","item","index","getRoundRobinIndex","newChecked","componentFocusable","focusElement","input","label","checkedRadioButtons","lastCheckedRadioButton","checkedRadioButton","otherRadioButton","forceUpdate","guid","connectLabel","connectForm","setUpLoadableComponent","setComponentLoaded","disconnectLabel","disconnectForm","updateHostInteraction","tabIndex","h","Host","InteractiveContainer","toAriaBoolean","getLabelText","HiddenFormInputSlot","getElement"],"mappings":"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","x_google_ignoreList":[0]}
import{I as f,dc as d,dd as m,de as n,U as l}from"./index-0pHHYqT1.js";import{i as k}from"./WebMap-BCUzSfnw.js";import"./ColorBackground-BHAvUgL_.js";import"./CollectionFlattener-BlSS9TyQ.js";import"./basemapUtils-OAcqO5VQ.js";import"./TablesMixin-BQXh6KBa.js";import"./MultiOriginJSONSupport-TbxqwyX4.js";import"./portalItemUtils-DNXyin3a.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-_kTxLSXI.js";import"./jsonContext-whrT3Qnr.js";import"./project-CqD2rP75.js";import"./FeatureLayer-CLFLYoCH.js";import"./commonProperties-CUfTzj5N.js";import"./FeatureLayerBase-BK564wbX.js";import"./HeightModelInfo-Dpg9rG1D.js";import"./featureLayerUtils-o4ogvGp7.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-vgxZ2T0V.js";import"./Relationship-CAcVCOO_.js";import"./serviceCapabilitiesUtils-PSx4Rb3I.js";import"./editsZScale-CvCkWL30.js";import"./APIKeyMixin-BF8uUpas.js";import"./ArcGISService-Dzxg3G3l.js";import"./CustomParametersMixin-RLrsYJRF.js";import"./EditBusLayer-BwLk-_N_.js";import"./FeatureEffectLayer-DLo0B2xh.js";import"./FeatureEffect-BcjtHuez.js";import"./FeatureReductionLayer-7b6Nqwz0.js";import"./FeatureReductionSelection-BoqJWAJO.js";import"./labelingInfo-DEVe8ZeJ.js";import"./labelUtils-CVz6nlM3.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-CqOXhR1u.js";import"./OrderedLayer-DbP1K9H4.js";import"./OrderByInfo-BgypIh2b.js";import"./PortalLayer-678mR6Su.js";import"./RefreshableLayer-vaXU4Q7r.js";import"./TemporalLayer-E3LAz_Uz.js";import"./FeatureTemplate-XR48cppx.js";import"./FeatureType-DK7YwK9k.js";import"./fieldProperties-2SiMYHIk.js";import"./versionUtils-2QnhVNd1.js";import"./styleUtils-BTQTWLlk.js";import"./popupUtils-Bu-xDbb_.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-BnQTLBgR.js";async function nt(i,t,a){const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s={...r,returnEdits:!0,f:"json"},p=n({...e.query,...s}),o=m(p,{...a,method:"post"}),u=`${e.path}/validateNetworkTopology`,{data:c}=await l(u,o);return k.fromJSON(v(c))}async function lt(i,t,a){if(!t.gdbVersion)throw new f("submit-validate-network-topology-job:missing-gdb-version","version is missing");const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s=m(e.query,{query:n({...r,returnEdits:!0,async:!0,f:"json"}),...a,method:"post"}),p=`${e.path}/validateNetworkTopology`,{data:o}=await l(p,s);return o?o.statusUrl:null}function v(i){return i.serviceEdits&&(i.serviceEdits=i.serviceEdits.map(t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures}))),i}export{v as handleValidateNetworkTopologyResult,lt as submitValidateNetworkTopologyJob,nt as validateNetworkTopology};
//# sourceMappingURL=validateNetworkTopology-xt_TTEGq.js.map

import{dc as e,dd as c,de as n,U as u}from"./index-BSR5w7Gk.js";import{a as y}from"./WebMap-CIMgmv3e.js";import"./ColorBackground-COQ1YjT2.js";import"./CollectionFlattener-6RagYJed.js";import"./basemapUtils-CyJ9yRZI.js";import"./TablesMixin-DEJKQFW0.js";import"./MultiOriginJSONSupport-BDWimddl.js";import"./portalItemUtils-CNprQd1s.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-DpnlxG_I.js";import"./jsonContext-CrRyLCRG.js";import"./project-DK1KNCdm.js";import"./FeatureLayer-Clz9PDPz.js";import"./commonProperties-BoEbAvXG.js";import"./FeatureLayerBase-B-lWo9ZT.js";import"./HeightModelInfo-B-_G_zyw.js";import"./featureLayerUtils-_6_W9WXI.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-8kJ2xQMB.js";import"./Relationship-BW1YPHEL.js";import"./serviceCapabilitiesUtils-C4FbpV5C.js";import"./editsZScale-46RKc-jQ.js";import"./APIKeyMixin-WfAhZNOY.js";import"./ArcGISService-Cop4IZ11.js";import"./CustomParametersMixin-BTDwaxNj.js";import"./EditBusLayer-qvfyINHp.js";import"./FeatureEffectLayer-BZwBZzG7.js";import"./FeatureEffect-Cz74eSUA.js";import"./FeatureReductionLayer-67DAVGFT.js";import"./FeatureReductionSelection-CrEb-Mgm.js";import"./labelingInfo-Dgoy55mg.js";import"./labelUtils-DoFEj0N5.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-CYQ_UX42.js";import"./OrderedLayer-BQ-YvzY2.js";import"./OrderByInfo-Japmq6_O.js";import"./PortalLayer-Bfw9bGZv.js";import"./RefreshableLayer-DCWILGLU.js";import"./TemporalLayer-US19_AO6.js";import"./FeatureTemplate-CLIdXBQJ.js";import"./FeatureType-Dfso7MAP.js";import"./fieldProperties-KMEW-zlU.js";import"./versionUtils-nTdPCh9f.js";import"./styleUtils-Bt4b32Rz.js";import"./popupUtils-BHI5lAMR.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-HnkB8vve.js";async function at(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function et(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{et as submitTraceJob,at as trace};
//# sourceMappingURL=trace-dC2hGtFQ.js.map

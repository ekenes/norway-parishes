import{ex as G,hS as C,hT as J,j as t,m as r,by as U,bd as X,h7 as b,hU as k,k as F,ao as A,gH as L,ae as P,dG as B,hV as I,aX as K,fG as E,dH as Q,aR as q,eB as W,u as Y}from"./index-BSR5w7Gk.js";import{c as Z,b as ee}from"./featureReferenceUtils-CzKPR1DV.js";import{c as te}from"./Analysis-DvGXASbh.js";import{S as ie}from"./MultiOriginJSONSupport-BDWimddl.js";import{b as re}from"./OperationalLayer-CYQ_UX42.js";import"./vec32-DpCM1Mgc.js";import"./sphere-BiNrqvee.js";import"./mat3-BwQ82Z_B.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-DBHgjooM.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-aQ5IuZRd.js";import"./IntersectorInterfaces-dI_rFEZm.js";import"./boundedPlane-DhyNqRJU.js";import"./lineSegment-Bp10ArvS.js";import"./commonProperties-BoEbAvXG.js";let a=class extends G(C){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(e){return J(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&Z(this.feature,e.feature)}};t([r({type:U,json:{write:!0}})],a.prototype,"observer",void 0),t([r({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],a.prototype,"farDistance",void 0),t([r({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),X(i=>b.normalize(k(i),void 0,!0))],a.prototype,"heading",void 0),t([r({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"tilt",void 0),t([r({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],a.prototype,"horizontalFieldOfView",void 0),t([r({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"verticalFieldOfView",void 0),t([r(ee)],a.prototype,"feature",void 0),t([r({json:{read:!1}})],a.prototype,"isValid",null),a=t([F("esri.analysis.Viewshed")],a);const S=a,j=P.ofType(S);let u=class extends te{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(A(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},L))}get viewsheds(){return this._get("viewsheds")||new j}set viewsheds(e){this._set("viewsheds",B(e,this.viewsheds,j))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const p=this.viewsheds.filter(s=>s.observer!=null),y=p.map(s=>s.observer).toArray(),o=I(y,e);return o.pending!=null?{pending:o.pending,extent:null}:{pending:null,extent:o.geometries.map((s,d)=>{const V=p.at(d);return s!=null&&V!=null?this._computeViewshedExtent(this.viewsheds.at(d),s):null}).filter(s=>s!=null).reduce((s,d)=>se(s,d),null)}}_computeViewshedExtent(e,p){const{farDistance:y,heading:o,tilt:s,horizontalFieldOfView:d,verticalFieldOfView:V}=e,{spatialReference:v}=p,O=d/2,$=V/2,R=y/v.metersPerUnit,T=[b.normalize(o-O),o,b.normalize(o+O)],h=K.fromPoint(p),g=f=>{const c=T.map(l=>b.normalize(l-f));if(c[0]>c[2]||d===360)return R;const m=c.map(l=>Math.abs(l>180?360-l:l)).reduce((l,x)=>l>x?x:l);return m>90?0:R*Math.cos(E(m))};h.xmax+=g(90),h.xmin-=g(-90),h.ymax+=g(0),h.ymin-=g(180);const w=p.z;if(w!=null){let f=w,c=w;const m=s-90,l=q(m+$,-90,90),x=q(m-$,-90,90),z=v!=null&&v.isGeographic?y:R;f+=z*N(l),c+=z*N(x);const H=M($)*z,_=N(m)*H*(1-M(O));s<90&&(f-=_),s>90&&(c-=_),h.zmax=Math.max(f,w),h.zmin=Math.min(c,w)}return h}clear(){this.viewsheds.removeAll()}};function se(i,e){return i==null?e:e==null?i:i.union(e)}function M(i){return Math.cos(E(i))}function N(i){return Math.sin(E(i))}t([r({type:["viewshed"]})],u.prototype,"type",void 0),t([r({cast:Q,type:j,nonNullable:!0})],u.prototype,"viewsheds",null),t([r({readOnly:!0})],u.prototype,"spatialReference",null),t([r()],u.prototype,"_extent",void 0),t([r({readOnly:!0})],u.prototype,"extent",null),t([r({readOnly:!0})],u.prototype,"requiredPropertiesForEditing",null),u=t([F("esri.analysis.ViewshedAnalysis")],u);const D=u;let n=class extends re(ie(W)){constructor(i){super(i),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new D,this.opacity=1}initialize(){this.addHandles(A(()=>this.source,(i,e)=>{e!=null&&e.parent===this&&(e.parent=null),i!=null&&(i.parent=this)},L))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(i){this.source===i&&(this.source=new D)}get analysis(){return this.source}set analysis(i){this.source=i}get viewsheds(){return this.source.viewsheds}set viewsheds(i){this.source.viewsheds=i}writeViewsheds(i,e,p,y){e.viewsheds=i.filter(o=>o.isValid()).map(o=>o.toJSON(y)).toJSON()}};t([r({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([r({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),t([r({nonNullable:!0})],n.prototype,"source",void 0),t([r({readOnly:!0})],n.prototype,"spatialReference",null),t([r({readOnly:!0})],n.prototype,"fullExtent",null),t([r({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),t([r({type:["show","hide"]})],n.prototype,"listMode",void 0),t([r({type:P.ofType(S),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),t([Y("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=t([F("esri.layers.ViewshedLayer")],n);const Oe=n;export{Oe as default};
//# sourceMappingURL=ViewshedLayer-D64WzX9b.js.map

import{el as j,I as g,b7 as I,G as L,d6 as P,dy as J}from"./index-BVCTOtrL.js";import{n as T,a as F,m as S}from"./TimeOnly-45knFUqB.js";import{t as M}from"./ImmutableArray-BPVd6ESQ.js";import z from"./FeatureLayer-BbRmUrlq.js";import"./MultiOriginJSONSupport-BXZzo0M_.js";import"./commonProperties-DmZr01KJ.js";import"./FeatureLayerBase-Y2Aka3cI.js";import"./HeightModelInfo-D75wB90s.js";import"./featureLayerUtils-B0QOKcCv.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-B9V4YR8l.js";import"./Relationship-B8VMX0ss.js";import"./serviceCapabilitiesUtils-omGOALqK.js";import"./editsZScale-CBZ1qtHx.js";import"./APIKeyMixin-BEV7oKel.js";import"./ArcGISService-COfEZmwR.js";import"./CustomParametersMixin-cSIktmqI.js";import"./EditBusLayer-CIjHQEfq.js";import"./FeatureEffectLayer-B34r9GVe.js";import"./FeatureEffect-D5w8bFDA.js";import"./FeatureReductionLayer-BswP6Ecs.js";import"./FeatureReductionSelection-CiVbu83E.js";import"./labelingInfo-Ck6NdHkS.js";import"./labelUtils-D4t8uaUh.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-fijZ19TW.js";import"./OrderedLayer-fkPIRH_I.js";import"./OrderByInfo-DjAoB8Q5.js";import"./PortalLayer-BKA_-9U3.js";import"./portalItemUtils-CUao5ph-.js";import"./RefreshableLayer-CyLwmdJQ.js";import"./TemporalLayer-B2fv0pZb.js";import"./TimeInfo-DJByDno4.js";import"./FeatureTemplate-B3chx-cI.js";import"./FeatureType--4HuUDmC.js";import"./fieldProperties-BQKVfvvj.js";import"./versionUtils-BHV9SW6u.js";import"./styleUtils-IYGHFe8x.js";import"./popupUtils-B0sP_MKD.js";import"./AlphaCutoff-UcccL64p.js";import"./interfaces-CL2NbQte.js";let b=null;function E(e,o,a,n={}){const t=o.elementType,i="value",c=t.type==="array"?[{name:i,type:t.type,elementType:t.elementType}]:t.type==="dictionary"?[{name:i,type:t.type,properties:t.properties}]:[{name:i,type:t.type}];return new M(e.map(s=>{const r={};return w(r,c,{[i]:s},a,n),r[i]}))}function N(e,o,a={}){const n=e instanceof J?new z({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return o.constructFeatureSet(n,a.spatialReference,null,!0,a.lruCache,a.interceptor)}function X(e,o,a={}){const{spatialReference:n,interceptor:t,lruCache:i}=a;return typeof e=="string"?o.createFeatureSetCollectionFromService(e,n,i,t):o.createFeatureSetCollectionFromMap(e,n,i,t)}function Y(e,o,a,n={}){const t={};return w(t,o.properties,e,a,n),new b.Dictionary(t)}function w(e,o,a,n,t={}){const i={};for(const c of Object.keys(a))i[c.toLowerCase()]=a[c];for(const c of o){const s=c.name.toLowerCase();if(t.variablesPreProcessed)e[s]=i[s];else switch(c.type){case"array":{const r=i[s];e[s]=r==null?null:E(r,c,n,t);break}case"feature":{const r=i[s];e[s]=r==null?null:b.Feature.createFromGraphic(r,t==null?void 0:t.timeZone);break}case"featureSet":{const r=i[s];e[s]=r==null?null:n?N(r,n,t):null;break}case"featureSetCollection":{const r=i[s];e[s]=r==null?null:n?X(r,n,t):null;break}case"dictionary":{const r=i[s];e[s]=r==null?null:Y(r,c,n,t);break}case"date":{const r=i[s];e[s]=r?r instanceof S?r:t!=null&&t.timeZone?S.dateJSAndZoneToArcadeDate(r,t==null?void 0:t.timeZone):S.dateJSToArcadeDate(r):null;break}case"dateOnly":{const r=i[s];e[s]=r?r instanceof F?r:F.fromReader(r):null;break}case"time":{const r=i[s];e[s]=r?r instanceof T?r:T.fromReader(r):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[s]=i[s]}}}function Z(e,o){for(const a of e)o.push(a),a.type==="dictionary"&&Z(a.properties,o);return o}function R(e,o,a,n,t){const{spatialReference:i,interceptor:c,lruCache:s,console:r,abortSignal:m,timeZone:l,services:$={portal:L.getDefault()}}=a,f={vars:{},spatialReference:i,interceptor:c,timeZone:l,lrucache:s,useAsync:t,services:$,console:r,abortSignal:m};return o&&w(f.vars,e.variables,o,n,a),f}function v(e,o){switch(o.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const a=(e.type,e),n="geometry"in a?a.geometry():null,t="readAttributes"in a?a.readAttributes():a.attributes;return new P({geometry:n,attributes:t})}case"dictionary":{const a=e,n=a.attributes,t={};for(const i of Object.keys(n))t[i]=v(a.field(i),o);return t}case"array":return("toArray"in e?e.toArray():e).map(a=>v(a,o))}return e}const D={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"}]},O={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"}]},U=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"}]}],["popup",D],["popup-element",D],["feature-reduction-popup",O],["feature-reduction-popup-element",O],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"}]}]}]]);function Ze(e){const o=U.get(e);if(!o){const a=Array.from(U.keys()).map(n=>`'${n}'`).join(", ");throw new g("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${a}`)}return I(o)}async function Ge(e,o,a={}){b||(b=await j());const{arcade:n,arcadeUtils:t}=b,{loadScriptDependencies:i,referencesMember:c,scriptIsAsync:s}=n,r=Z(o.variables,[]),m=r.filter(p=>p.type==="featureSet"||p.type==="featureSetCollection").map(p=>p.name.toLowerCase()),l=n.parseScript(e,m);if(!l)throw new g("arcade:invalid-script","Unable to create SyntaxTree");const $=t.extractFieldNames(l),f=n.scriptTouchesGeometry(l),h=r.map(p=>p.name.toLowerCase()).filter(p=>c(l,p)),u=s(l,m);await i(l,u,m);const C={vars:{},spatialReference:null,useAsync:u};for(const p of h)C.vars[p]="any";const{lruCache:A}=a,x=n.compileScript(l,C),k=n.featureSetUtils(),{services:G}=a;return{execute:(p,y={})=>{if(u)throw new g("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const d=x(R(o,p,{lruCache:A,...y},k,u));return y.rawOutput?d:v(d,t)},executeAsync:async(p,y={})=>{const d=await x(R(o,p,{lruCache:A,services:G,...y},k,u));return y.rawOutput?d:v(d,t)},isAsync:u,variablesUsed:h,fieldsUsed:$,geometryUsed:f,syntaxTree:l}}export{Ge as createArcadeExecutor,Ze as createArcadeProfile};
//# sourceMappingURL=arcade-fcdU5CWH.js.map

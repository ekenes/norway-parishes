{"version":3,"mappings":"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","names":["CSS","hourToMinutes","timeZoneOffsetToDecimal","shortOffsetTimeZoneName","toOffsetValue","timeZoneName","referenceDateInMs","offset","getTimeZoneShortOffset","getUserTimeZoneOffset","getUserTimeZoneName","getNormalizer","mode","timeZone","normalize","__vitePreload","createTimeZoneItems","locale","messages","referenceDate","standardTime","groupByName","toUserFriendlyName","group","effectiveLocale","groupByRegion","getCountry","globalLabel","region","tzs","timeZoneA","timeZoneB","labeledTimeZoneA","getTimeZoneLabel","labeledTimeZoneB","gmtTimeZoneString","offsetStringA","offsetStringB","offsetA","getMessageOrKeyFallback","decimalOffset","label","filterValue","countryCode","country","groupA","groupB","groupByOffset","DateEngine","groups","listFormatter","offsetTimeZoneNameBlockList","indexOffsets","removedSoFar","tz","index","labelTzIdx","groupRepTz","value","tzLabels","createTimeZoneOffsetLabel","getCity","getSelectedRegionTimeZoneLabel","city","key","offsetLabel","groupLabel","getDateTimeFormat","type","isGroup","item","flattenTimeZoneItems","timeZoneItems","findTimeZoneItemByProp","prop","valueToMatch","inputTimeZoneCss","CalciteInputTimeZoneStyle0","InputTimeZone","hostRef","registerInstance","createEvent","el","event","selectedItem","selected","selectedValue","oldValue","timeZoneItem","componentFocusable","updateMessages","open","metadata","fallbackValue","connectForm","connectLabel","connectLocalized","connectMessages","disconnectForm","disconnectLabel","disconnectLocalized","disconnectMessages","setUpLoadableComponent","normalizer","setUpMessages","afterConnectDefaultValueSet","setComponentLoaded","updateHostInteraction","h","Host","InteractiveContainer","HiddenFormInputSlot","items","getElement"],"ignoreList":[0],"sources":["../../node_modules/@esri/calcite-components/dist/esm/calcite-input-time-zone.entry.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-abe3b66e.js';\nimport { c as connectLabel, d as disconnectLabel } from './label-043ae25a.js';\nimport { u as updateHostInteraction, I as InteractiveContainer } from './interactive-1a42577a.js';\nimport { f as getDateTimeFormat, c as connectLocalized, d as disconnectLocalized } from './locale-60f8ca58.js';\nimport { u as updateMessages, c as connectMessages, d as disconnectMessages, s as setUpMessages } from './t9n-75defee3.js';\nimport { c as componentFocusable, s as setUpLoadableComponent, a as setComponentLoaded } from './loadable-13e9ffb2.js';\nimport { c as connectForm, d as disconnectForm, a as afterConnectDefaultValueSet, H as HiddenFormInputSlot } from './form-8ec29459.js';\nimport './dom-b6dedd88.js';\nimport './guid-9c230b6a.js';\nimport './resources-a23d2491.js';\nimport './component-5f0a8be8.js';\nimport './key-3ee05994.js';\nimport './observers-9c166451.js';\nimport './browser-618ac057.js';\n\nconst CSS = {\n    offset: \"offset\",\n};\n\nconst hourToMinutes = 60;\nfunction timeZoneOffsetToDecimal(shortOffsetTimeZoneName) {\n    const minusSign = \"−\";\n    const hyphen = \"-\";\n    return (shortOffsetTimeZoneName\n        .replace(\":15\", \".25\")\n        .replace(\":30\", \".5\")\n        .replace(\":45\", \".75\")\n        // ensures decimal string representation is parseable\n        .replace(minusSign, hyphen));\n}\nfunction toOffsetValue(timeZoneName, referenceDateInMs) {\n    // we use \"en-US\" to allow us to reliably remove the standard time token\n    const offset = getTimeZoneShortOffset(timeZoneName, \"en-US\", referenceDateInMs).replace(\"GMT\", \"\");\n    if (offset === \"\") {\n        return 0;\n    }\n    return Number(timeZoneOffsetToDecimal(offset)) * hourToMinutes;\n}\nfunction getUserTimeZoneOffset() {\n    const localDate = new Date();\n    return localDate.getTimezoneOffset() * -1;\n}\nfunction getUserTimeZoneName() {\n    const dateFormatter = new Intl.DateTimeFormat();\n    return dateFormatter.resolvedOptions().timeZone;\n}\nasync function getNormalizer(mode) {\n    if (mode === \"offset\") {\n        return (timeZone) => timeZone;\n    }\n    const { normalize } = await import('./time-zones-2baacc2d.js');\n    return normalize;\n}\nasync function createTimeZoneItems(locale, messages, mode, referenceDate, standardTime) {\n    if (mode === \"name\") {\n        const { groupByName } = await import('./index-caa4a8e0.js');\n        const groups = await groupByName();\n        return groups\n            .map(({ label: timeZone }) => {\n            const label = toUserFriendlyName(timeZone);\n            const value = timeZone;\n            return {\n                label,\n                value,\n                metadata: {\n                    filterValue: timeZone,\n                },\n            };\n        })\n            .filter((group) => !!group)\n            .sort();\n    }\n    const effectiveLocale = standardTime === \"user\"\n        ? locale\n        : // we use locales that will always yield a short offset that matches `standardTime`\n            standardTime === \"utc\"\n                ? \"fr\"\n                : \"en-GB\";\n    const referenceDateInMs = referenceDate.getTime();\n    if (mode === \"region\") {\n        const [{ groupByRegion }, { getCountry, global: globalLabel }] = await Promise.all([\n            import('./index-24ae0bc4.js'),\n            import('./region-ffaa69eb.js'),\n        ]);\n        const groups = await groupByRegion();\n        return groups\n            .map(({ label: region, tzs }) => {\n            tzs.sort((timeZoneA, timeZoneB) => {\n                const labeledTimeZoneA = getTimeZoneLabel(timeZoneA, messages);\n                const labeledTimeZoneB = getTimeZoneLabel(timeZoneB, messages);\n                const gmtTimeZoneString = \"Etc/GMT\";\n                if (timeZoneA.startsWith(gmtTimeZoneString) && timeZoneB.startsWith(gmtTimeZoneString)) {\n                    // we use the IANA timezone for simpler and consistent sorting across locales\n                    const offsetStringA = timeZoneA.substring(gmtTimeZoneString.length);\n                    const offsetStringB = timeZoneB.substring(gmtTimeZoneString.length);\n                    const offsetA = offsetStringA === \"\" ? 0 : parseInt(offsetStringA);\n                    const offsetB = offsetStringB === \"\" ? 0 : parseInt(offsetStringB);\n                    return offsetB - offsetA;\n                }\n                return labeledTimeZoneA.localeCompare(labeledTimeZoneB);\n            });\n            return {\n                label: getMessageOrKeyFallback(messages, region),\n                items: tzs.map((timeZone) => {\n                    const decimalOffset = timeZoneOffsetToDecimal(getTimeZoneShortOffset(timeZone, effectiveLocale, referenceDateInMs));\n                    const label = getTimeZoneLabel(timeZone, messages);\n                    const filterValue = region === globalLabel\n                        ? // we rely on the label for search since GMT items have their signs inverted (see https://en.wikipedia.org/wiki/Tz_database#Area)\n                            // in addition to the label we also add \"Global\" and \"Etc\" to allow searching for these items\n                            `${getTimeZoneLabel(globalLabel, messages)} Etc`\n                        : toUserFriendlyName(timeZone);\n                    const countryCode = getCountry(timeZone);\n                    const country = getMessageOrKeyFallback(messages, countryCode);\n                    return {\n                        label,\n                        value: timeZone,\n                        metadata: {\n                            country: country === label ? undefined : country,\n                            filterValue,\n                            offset: decimalOffset,\n                        },\n                    };\n                }),\n            };\n        })\n            .sort((groupA, groupB) => groupA.label === globalLabel ? -1 : groupB.label === globalLabel ? 1 : groupA.label.localeCompare(groupB.label));\n    }\n    const [{ groupByOffset }, { DateEngine }] = await Promise.all([\n        import('./index-50eeb4c2.js'),\n        import('./index-1a7f19ef.js'),\n    ]);\n    const groups = await groupByOffset({\n        dateEngine: new DateEngine(),\n        groupDateRange: 1,\n        startDate: new Date(referenceDateInMs).toISOString(),\n    });\n    const listFormatter = new Intl.ListFormat(locale, { style: \"long\", type: \"conjunction\" });\n    const offsetTimeZoneNameBlockList = [\"Factory\", \"Etc/UTC\"];\n    // we remove blocked entries from tzs and adjust label indices accordingly\n    groups.forEach((group) => {\n        const indexOffsets = [];\n        let removedSoFar = 0;\n        group.tzs.forEach((tz, index) => {\n            if (offsetTimeZoneNameBlockList.includes(tz)) {\n                removedSoFar++;\n            }\n            indexOffsets[index] = removedSoFar;\n        });\n        group.tzs = group.tzs.filter((tz) => !offsetTimeZoneNameBlockList.includes(tz));\n        group.labelTzIdx = group.labelTzIdx\n            .map((index) => index - indexOffsets[index])\n            .filter((index) => index >= 0 && index < group.tzs.length);\n    });\n    return groups\n        .map(({ labelTzIdx, tzs }) => {\n        const groupRepTz = tzs[0];\n        const decimalOffset = timeZoneOffsetToDecimal(getTimeZoneShortOffset(groupRepTz, effectiveLocale, referenceDateInMs));\n        const value = toOffsetValue(groupRepTz, referenceDateInMs);\n        const tzLabels = labelTzIdx.map((index) => getTimeZoneLabel(tzs[index], messages));\n        const label = createTimeZoneOffsetLabel(messages, decimalOffset, listFormatter.format(tzLabels));\n        return {\n            label,\n            value,\n            metadata: {\n                filterValue: tzs.map((tz) => toUserFriendlyName(tz)),\n            },\n        };\n    })\n        .filter((group) => !!group)\n        .sort((groupA, groupB) => groupA.value - groupB.value);\n}\nfunction getTimeZoneLabel(timeZone, messages) {\n    return messages[timeZone] || getCity(timeZone);\n}\nfunction getSelectedRegionTimeZoneLabel(city, country, messages) {\n    const template = messages.timeZoneRegionLabel;\n    return template.replace(\"{city}\", city).replace(\"{country}\", getMessageOrKeyFallback(messages, country));\n}\nfunction getMessageOrKeyFallback(messages, key) {\n    return messages[key] || key;\n}\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nfunction getCity(timeZone) {\n    return timeZone.split(\"/\").pop();\n}\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nfunction toUserFriendlyName(timeZoneName) {\n    return timeZoneName.replace(/_/g, \" \");\n}\nfunction createTimeZoneOffsetLabel(messages, offsetLabel, groupLabel) {\n    return messages.timeZoneLabel.replace(\"{offset}\", offsetLabel).replace(\"{cities}\", groupLabel);\n}\nfunction getTimeZoneShortOffset(timeZone, locale, referenceDateInMs = Date.now()) {\n    const dateTimeFormat = getDateTimeFormat(locale, { timeZone, timeZoneName: \"shortOffset\" });\n    const parts = dateTimeFormat.formatToParts(referenceDateInMs);\n    return parts.find(({ type }) => type === \"timeZoneName\").value;\n}\nfunction isGroup(item) {\n    return item.items !== undefined;\n}\nfunction flattenTimeZoneItems(timeZoneItems) {\n    return isGroup(timeZoneItems[0]) ? timeZoneItems.flatMap((item) => item.items) : timeZoneItems;\n}\nfunction findTimeZoneItemByProp(timeZoneItems, prop, valueToMatch) {\n    return valueToMatch == null\n        ? null\n        : flattenTimeZoneItems(timeZoneItems).find((item) => \n        // intentional == to match string to number\n        item[prop] == valueToMatch);\n}\n\nconst inputTimeZoneCss = \":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:block}.offset{white-space:nowrap}:host([hidden]){display:none}[hidden]{display:none}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}\";\nconst CalciteInputTimeZoneStyle0 = inputTimeZoneCss;\n\nconst InputTimeZone = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.calciteInputTimeZoneBeforeClose = createEvent(this, \"calciteInputTimeZoneBeforeClose\", 6);\n        this.calciteInputTimeZoneBeforeOpen = createEvent(this, \"calciteInputTimeZoneBeforeOpen\", 6);\n        this.calciteInputTimeZoneChange = createEvent(this, \"calciteInputTimeZoneChange\", 6);\n        this.calciteInputTimeZoneClose = createEvent(this, \"calciteInputTimeZoneClose\", 6);\n        this.calciteInputTimeZoneOpen = createEvent(this, \"calciteInputTimeZoneOpen\", 6);\n        this.setComboboxRef = (el) => {\n            this.comboboxEl = el;\n        };\n        this.onComboboxBeforeClose = (event) => {\n            event.stopPropagation();\n            this.overrideSelectedLabelForRegion(false);\n            this.calciteInputTimeZoneBeforeClose.emit();\n        };\n        this.onComboboxBeforeOpen = (event) => {\n            event.stopPropagation();\n            this.overrideSelectedLabelForRegion(true);\n            this.calciteInputTimeZoneBeforeOpen.emit();\n        };\n        this.onComboboxChange = (event) => {\n            event.stopPropagation();\n            const combobox = event.target;\n            const selectedItem = combobox.selectedItems[0];\n            if (!selectedItem) {\n                this.value = null;\n                this.selectedTimeZoneItem = null;\n                this.calciteInputTimeZoneChange.emit();\n                return;\n            }\n            const selected = this.findTimeZoneItemByLabel(selectedItem.getAttribute(\"data-label\"));\n            const selectedValue = `${selected.value}`;\n            if (this.value === selectedValue && selected.label === this.selectedTimeZoneItem.label) {\n                return;\n            }\n            this.value = selectedValue;\n            this.selectedTimeZoneItem = selected;\n            this.calciteInputTimeZoneChange.emit();\n        };\n        this.onComboboxClose = (event) => {\n            event.stopPropagation();\n            this.open = false;\n            this.calciteInputTimeZoneClose.emit();\n        };\n        this.onComboboxOpen = (event) => {\n            this.open = true;\n            event.stopPropagation();\n            this.calciteInputTimeZoneOpen.emit();\n        };\n        this.clearable = false;\n        this.disabled = false;\n        this.form = undefined;\n        this.maxItems = 0;\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.mode = \"offset\";\n        this.offsetStyle = \"user\";\n        this.validationMessage = undefined;\n        this.validationIcon = undefined;\n        this.validity = {\n            valid: false,\n            badInput: false,\n            customError: false,\n            patternMismatch: false,\n            rangeOverflow: false,\n            rangeUnderflow: false,\n            stepMismatch: false,\n            tooLong: false,\n            tooShort: false,\n            typeMismatch: false,\n            valueMissing: false,\n        };\n        this.name = undefined;\n        this.open = false;\n        this.overlayPositioning = \"absolute\";\n        this.referenceDate = undefined;\n        this.required = false;\n        this.scale = \"m\";\n        this.status = \"idle\";\n        this.value = undefined;\n        this.readOnly = false;\n        this.defaultMessages = undefined;\n        this.effectiveLocale = \"\";\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    handleTimeZoneItemPropsChange() {\n        if (!this.timeZoneItems) {\n            return;\n        }\n        this.updateTimeZoneItems();\n        this.updateTimeZoneSelection();\n    }\n    openChanged() {\n        // we set the property instead of the attribute to ensure open/close events are emitted properly\n        this.comboboxEl.open = this.open;\n    }\n    handleValueChange(value, oldValue) {\n        value = this.normalizeValue(value);\n        if (!value) {\n            if (this.clearable) {\n                this.value = value;\n                this.selectedTimeZoneItem = null;\n                return;\n            }\n            this.value = oldValue;\n            this.selectedTimeZoneItem = this.findTimeZoneItem(oldValue);\n            return;\n        }\n        const timeZoneItem = this.findTimeZoneItem(value);\n        if (!timeZoneItem) {\n            this.value = oldValue;\n            return;\n        }\n        this.selectedTimeZoneItem = timeZoneItem;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    async setFocus() {\n        await componentFocusable(this);\n        await this.comboboxEl.setFocus();\n    }\n    effectiveLocaleWatcher() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    onLabelClick() {\n        this.setFocus();\n    }\n    /**\n     * Helps override the selected item's label for region mode outside of item rendering logic to avoid flickering text change\n     *\n     * @param open\n     * @private\n     */\n    overrideSelectedLabelForRegion(open) {\n        if (this.mode !== \"region\" || !this.selectedTimeZoneItem) {\n            return;\n        }\n        const { label, metadata } = this.selectedTimeZoneItem;\n        this.comboboxEl.selectedItems[0].textLabel =\n            !metadata.country || open\n                ? label\n                : getSelectedRegionTimeZoneLabel(label, metadata.country, this.messages);\n    }\n    findTimeZoneItem(value) {\n        return findTimeZoneItemByProp(this.timeZoneItems, \"value\", value);\n    }\n    findTimeZoneItemByLabel(label) {\n        return findTimeZoneItemByProp(this.timeZoneItems, \"label\", label);\n    }\n    async updateTimeZoneItems() {\n        this.timeZoneItems = await this.createTimeZoneItems();\n    }\n    async updateTimeZoneSelection() {\n        if (this.value === \"\" && this.clearable) {\n            this.selectedTimeZoneItem = null;\n            return;\n        }\n        const fallbackValue = this.mode === \"offset\" ? getUserTimeZoneOffset() : getUserTimeZoneName();\n        const valueToMatch = this.value ?? fallbackValue;\n        this.selectedTimeZoneItem =\n            this.findTimeZoneItem(valueToMatch) || this.findTimeZoneItem(fallbackValue);\n    }\n    async createTimeZoneItems() {\n        if (!this.effectiveLocale || !this.messages) {\n            return [];\n        }\n        return createTimeZoneItems(this.effectiveLocale, this.messages, this.mode, this.referenceDate instanceof Date\n            ? this.referenceDate\n            : new Date(this.referenceDate ?? Date.now()), this.offsetStyle);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectForm(this);\n        connectLabel(this);\n        connectLocalized(this);\n        connectMessages(this);\n    }\n    disconnectedCallback() {\n        disconnectForm(this);\n        disconnectLabel(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n    }\n    normalizeValue(value) {\n        value = value === null ? \"\" : value;\n        return value ? this.normalizer(value) : value;\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        const [, normalizer] = await Promise.all([setUpMessages(this), getNormalizer(this.mode)]);\n        this.normalizer = normalizer;\n        await this.updateTimeZoneItems();\n        this.value = this.normalizeValue(this.value);\n        await this.updateTimeZoneSelection();\n        const selectedValue = this.selectedTimeZoneItem ? `${this.selectedTimeZoneItem.value}` : null;\n        afterConnectDefaultValueSet(this, selectedValue);\n        this.value = selectedValue;\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        this.openChanged();\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n        this.overrideSelectedLabelForRegion(this.open);\n    }\n    render() {\n        return (h(Host, { key: 'b94fb2d93cdcaf0c44bbd2a0c7deaf59701078bf' }, h(InteractiveContainer, { key: '45246bbab441e9daf0e372832e74d7660039c770', disabled: this.disabled }, h(\"calcite-combobox\", { key: '294e44d8ab01079651c417f7808348e584f135b7', clearDisabled: !this.clearable, disabled: this.disabled, label: this.messages.chooseTimeZone, lang: this.effectiveLocale, maxItems: this.maxItems, onCalciteComboboxBeforeClose: this.onComboboxBeforeClose, onCalciteComboboxBeforeOpen: this.onComboboxBeforeOpen, onCalciteComboboxChange: this.onComboboxChange, onCalciteComboboxClose: this.onComboboxClose, onCalciteComboboxOpen: this.onComboboxOpen, overlayPositioning: this.overlayPositioning, placeholder: this.mode === \"name\"\n                ? this.messages.namePlaceholder\n                : this.mode === \"offset\"\n                    ? this.messages.offsetPlaceholder\n                    : this.messages.regionPlaceholder, placeholderIcon: \"search\", readOnly: this.readOnly, ref: this.setComboboxRef, scale: this.scale, selectionMode: this.clearable ? \"single\" : \"single-persist\", status: this.status, \"validation-icon\": this.validationIcon, \"validation-message\": this.validationMessage }, this.renderItems()), h(HiddenFormInputSlot, { key: '0b7a0694166f1d5b36b780d3436dad15d466bc3c', component: this }))));\n    }\n    renderItems() {\n        if (this.mode === \"region\") {\n            return this.renderRegionItems();\n        }\n        return this.timeZoneItems.map((group) => {\n            const selected = this.selectedTimeZoneItem === group;\n            const { label, metadata, value } = group;\n            return (h(\"calcite-combobox-item\", { \"data-label\": label, key: label, metadata: metadata, selected: selected, textLabel: label, value: value }));\n        });\n    }\n    renderRegionItems() {\n        return this.timeZoneItems.flatMap(({ label, items }) => (h(\"calcite-combobox-item-group\", { key: label, label: label }, items.map((item) => {\n            const selected = this.selectedTimeZoneItem === item;\n            const { label, metadata, value } = item;\n            return (h(\"calcite-combobox-item\", { \"data-label\": label, description: metadata.country, key: label, metadata: metadata, selected: selected, textLabel: label, value: value }, h(\"span\", { class: CSS.offset, slot: \"content-end\" }, metadata.offset)));\n        }))));\n    }\n    static get delegatesFocus() { return true; }\n    static get assetsDirs() { return [\"assets\"]; }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"messageOverrides\": [\"onMessagesChange\"],\n        \"messages\": [\"handleTimeZoneItemPropsChange\"],\n        \"mode\": [\"handleTimeZoneItemPropsChange\"],\n        \"referenceDate\": [\"handleTimeZoneItemPropsChange\"],\n        \"open\": [\"openChanged\"],\n        \"value\": [\"handleValueChange\"],\n        \"effectiveLocale\": [\"effectiveLocaleWatcher\"]\n    }; }\n};\nInputTimeZone.style = CalciteInputTimeZoneStyle0;\n\nexport { InputTimeZone as calcite_input_time_zone };\n\n//# sourceMappingURL=calcite-input-time-zone.entry.js.map"],"file":"assets/calcite-input-time-zone.entry-DlJ3Q4wU.js"}
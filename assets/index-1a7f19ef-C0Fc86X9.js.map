{"version":3,"file":"index-1a7f19ef-C0Fc86X9.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/index-1a7f19ef.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nclass NativeDateEngine {\n    constructor() {\n        this._formatterCache = new Map();\n        this._commonDateTimeFormatterOptions = {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            timeZoneName: 'shortOffset',\n        };\n    }\n    get name() {\n        return 'native';\n    }\n    create(date) {\n        return new Date(date);\n    }\n    increase(date) {\n        const oneDayInMs = 86400000;\n        return new Date(date.getTime() + oneDayInMs);\n    }\n    formatToIsoDateString(date) {\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return `${year}-${month.toString().padStart(2, '0')}-${day\n            .toString()\n            .padStart(2, '0')}`;\n    }\n    isoToTimeZone(isoDate, tz) {\n        const date = this._toDate(isoDate);\n        const formatter = this._getFormatter(tz);\n        const parts = formatter.formatToParts(date);\n        const [offset] = parts\n            .filter(({ type }) => type === 'timeZoneName')\n            .map(({ value }) => value);\n        const tzOffset = this._getTimeZoneOffsetInMins(offset);\n        const tzOffsetMinutes = date.getMinutes() - (date.getTimezoneOffset() - tzOffset);\n        date.setMinutes(tzOffsetMinutes);\n        return date;\n    }\n    same(date1, date2) {\n        return date1.getTime() === date2.getTime();\n    }\n    _toDate(isoDate) {\n        return new Date(isoDate);\n    }\n    _getFormatter(tz) {\n        let formatter = this._formatterCache.get(tz);\n        if (!formatter) {\n            formatter = new Intl.DateTimeFormat('en-US', {\n                timeZone: tz,\n                ...this._commonDateTimeFormatterOptions,\n            });\n            this._formatterCache.set(tz, formatter);\n        }\n        return formatter;\n    }\n    _getTimeZoneOffsetInMins(gmtTimeZone) {\n        const [sign, ...hoursMinutes] = gmtTimeZone.slice(3);\n        const [hours, minutes] = hoursMinutes.join('').split(':');\n        const signMultiplier = sign === '+' ? 1 : -1;\n        return signMultiplier * (Number(hours) * 60 + Number(minutes || 0));\n    }\n}\n\nexport { NativeDateEngine as DateEngine };\n\n//# sourceMappingURL=index-1a7f19ef.js.map"],"names":["NativeDateEngine","date","year","month","day","isoDate","tz","parts","offset","type","value","tzOffset","tzOffsetMinutes","date1","date2","formatter","gmtTimeZone","sign","hoursMinutes","hours","minutes"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA,GAKA,MAAMA,CAAiB,CACnB,aAAc,CACV,KAAK,gBAAkB,IAAI,IAC3B,KAAK,gCAAkC,CACnC,KAAM,UACN,MAAO,UACP,IAAK,UACL,aAAc,aACjB,CACT,CACI,IAAI,MAAO,CACP,MAAO,QACf,CACI,OAAOC,EAAM,CACT,OAAO,IAAI,KAAKA,CAAI,CAC5B,CACI,SAASA,EAAM,CAEX,OAAO,IAAI,KAAKA,EAAK,QAAO,EAAK,KAAU,CACnD,CACI,sBAAsBA,EAAM,CACxB,MAAMC,EAAOD,EAAK,YAAa,EACzBE,EAAQF,EAAK,SAAQ,EAAK,EAC1BG,EAAMH,EAAK,QAAS,EAC1B,MAAO,GAAGC,CAAI,IAAIC,EAAM,WAAW,SAAS,EAAG,GAAG,CAAC,IAAIC,EAClD,SAAQ,EACR,SAAS,EAAG,GAAG,CAAC,EAC7B,CACI,cAAcC,EAASC,EAAI,CACvB,MAAML,EAAO,KAAK,QAAQI,CAAO,EAE3BE,EADY,KAAK,cAAcD,CAAE,EACf,cAAcL,CAAI,EACpC,CAACO,CAAM,EAAID,EACZ,OAAO,CAAC,CAAE,KAAAE,CAAM,IAAKA,IAAS,cAAc,EAC5C,IAAI,CAAC,CAAE,MAAAC,CAAO,IAAKA,CAAK,EACvBC,EAAW,KAAK,yBAAyBH,CAAM,EAC/CI,EAAkBX,EAAK,WAAU,GAAMA,EAAK,kBAAmB,EAAGU,GACxE,OAAAV,EAAK,WAAWW,CAAe,EACxBX,CACf,CACI,KAAKY,EAAOC,EAAO,CACf,OAAOD,EAAM,YAAcC,EAAM,QAAS,CAClD,CACI,QAAQT,EAAS,CACb,OAAO,IAAI,KAAKA,CAAO,CAC/B,CACI,cAAcC,EAAI,CACd,IAAIS,EAAY,KAAK,gBAAgB,IAAIT,CAAE,EAC3C,OAAKS,IACDA,EAAY,IAAI,KAAK,eAAe,QAAS,CACzC,SAAUT,EACV,GAAG,KAAK,+BACxB,CAAa,EACD,KAAK,gBAAgB,IAAIA,EAAIS,CAAS,GAEnCA,CACf,CACI,yBAAyBC,EAAa,CAClC,KAAM,CAACC,EAAM,GAAGC,CAAY,EAAIF,EAAY,MAAM,CAAC,EAC7C,CAACG,EAAOC,CAAO,EAAIF,EAAa,KAAK,EAAE,EAAE,MAAM,GAAG,EAExD,OADuBD,IAAS,IAAM,EAAI,KACjB,OAAOE,CAAK,EAAI,GAAK,OAAOC,GAAW,CAAC,EACzE,CACA","x_google_ignoreList":[0]}
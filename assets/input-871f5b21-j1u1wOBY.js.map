{"version":3,"file":"input-871f5b21-j1u1wOBY.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/input-871f5b21.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\n/**\n * Exported for testing purposes only\n */\nconst minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n/**\n * Exported for testing purposes only\n */\nconst patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n/**\n * Exported for testing purposes only\n */\nconst minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\nfunction updateConstraintValidation(inputComponent, input, propName, matchesType) {\n    const attributeName = propName.toLowerCase();\n    const value = inputComponent[propName];\n    if (matchesType && value != null) {\n        input.setAttribute(attributeName, `${value}`);\n    }\n    else {\n        // we remove the attribute to ensure validation-constraints are properly reset\n        input.removeAttribute(attributeName);\n    }\n}\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nfunction syncHiddenFormInput(type, inputComponent, hiddenFormInput) {\n    hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n    const isMinMaxStepType = minMaxStepTypes.includes(type);\n    const numericInputComponent = inputComponent;\n    updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n    updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n    updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n    const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n    const textualInputComponent = inputComponent;\n    updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n    updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n    const isPatternType = patternTypes.includes(type);\n    updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n\nexport { syncHiddenFormInput as s };\n\n//# sourceMappingURL=input-871f5b21.js.map"],"names":["minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","input","propName","matchesType","attributeName","value","syncHiddenFormInput","type","hiddenFormInput","isMinMaxStepType","numericInputComponent","isMinMaxLengthType","textualInputComponent","isPatternType"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA,GAQA,MAAMA,EAAkB,CAAC,OAAQ,iBAAkB,QAAS,SAAU,QAAS,OAAQ,MAAM,EAIvFC,EAAe,CAAC,QAAS,WAAY,SAAU,MAAO,OAAQ,KAAK,EAInEC,EAAoB,CAAC,QAAS,WAAY,SAAU,MAAO,OAAQ,WAAY,KAAK,EAC1F,SAASC,EAA2BC,EAAgBC,EAAOC,EAAUC,EAAa,CAC9E,MAAMC,EAAgBF,EAAS,YAAa,EACtCG,EAAQL,EAAeE,CAAQ,EACjCC,GAAeE,GAAS,KACxBJ,EAAM,aAAaG,EAAe,GAAGC,CAAK,EAAE,EAI5CJ,EAAM,gBAAgBG,CAAa,CAE3C,CAUA,SAASE,EAAoBC,EAAMP,EAAgBQ,EAAiB,CAChEA,EAAgB,KAAOD,IAAS,WAAa,OAASA,EACtD,MAAME,EAAmBb,EAAgB,SAASW,CAAI,EAChDG,EAAwBV,EAC9BD,EAA2BW,EAAuBF,EAAiB,MAAOC,CAAgB,EAC1FV,EAA2BW,EAAuBF,EAAiB,MAAOC,CAAgB,EAC1FV,EAA2BW,EAAuBF,EAAiB,OAAQC,CAAgB,EAC3F,MAAME,EAAqBb,EAAkB,SAASS,CAAI,EACpDK,EAAwBZ,EAC9BD,EAA2Ba,EAAuBJ,EAAiB,YAAaG,CAAkB,EAClGZ,EAA2Ba,EAAuBJ,EAAiB,YAAaG,CAAkB,EAClG,MAAME,EAAgBhB,EAAa,SAASU,CAAI,EAChDR,EAA2Ba,EAAuBJ,EAAiB,UAAWK,CAAa,CAC/F","x_google_ignoreList":[0]}
import{dc as e,dd as c,de as n,U as u}from"./index-CaYX07dN.js";import{a as y}from"./WebMap-DjAGLf_N.js";import"./ColorBackground-DTkXfUEZ.js";import"./CollectionFlattener-Cs8eeHoL.js";import"./basemapUtils-DjtI-qAC.js";import"./TablesMixin-lGcuma7O.js";import"./MultiOriginJSONSupport-Bi5uKwj-.js";import"./portalItemUtils-BBW6qNW0.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-CYanYxnN.js";import"./jsonContext-CcrH7wJT.js";import"./project-oJzGKyQP.js";import"./FeatureLayer-YLT85sg5.js";import"./commonProperties-DBW-YxFy.js";import"./FeatureLayerBase-CKQufHfN.js";import"./HeightModelInfo-Ps3uWwtj.js";import"./featureLayerUtils-2pagGweI.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-C-D_cv9C.js";import"./Relationship-BeINTIYG.js";import"./serviceCapabilitiesUtils-Du53SxUj.js";import"./editsZScale-DrijibqU.js";import"./APIKeyMixin-DwT4LJn1.js";import"./ArcGISService-DJzSwl4t.js";import"./CustomParametersMixin-Cb_T5l_q.js";import"./EditBusLayer-CtDfIQ2P.js";import"./FeatureEffectLayer-DUDQwqKz.js";import"./FeatureEffect-CXan94xZ.js";import"./FeatureReductionLayer-CRRMF-pO.js";import"./FeatureReductionSelection-BoTNJckb.js";import"./labelingInfo-Bp9dmvH0.js";import"./labelUtils-BSe5K0uY.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-Da4YsTIo.js";import"./OrderedLayer-ZURXSBpZ.js";import"./OrderByInfo-C5ybC2tZ.js";import"./PortalLayer-Ciik5dRx.js";import"./RefreshableLayer-CkRekPl3.js";import"./TemporalLayer-BTRMjqwQ.js";import"./FeatureTemplate-HnWbOSRK.js";import"./FeatureType-IFBZU2EE.js";import"./fieldProperties-QFwbmKex.js";import"./versionUtils-CnAKhV8m.js";import"./styleUtils-B_cT8GaQ.js";import"./popupUtils-BRhiAAWL.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-DCRW_SB1.js";async function at(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function et(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{et as submitTraceJob,at as trace};
//# sourceMappingURL=trace-2os-z37L.js.map

{"version":3,"file":"logger-d56ad214-CzX10kyW.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/logger-d56ad214.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { l as logLevel } from './config-974b1499.js';\n\n/**\n * Exported for testing purposes only\n */\nconst loggedDeprecations = new Set();\nconst logLevels = {\n    trace: 0,\n    debug: 1,\n    info: 2,\n    warn: 4,\n    error: 8,\n    off: 10,\n};\nfunction willLog(level) {\n    return logLevels[level] >= logLevels[logLevel];\n}\nfunction forwardToConsole(level, ...data) {\n    if (!willLog(level)) {\n        return;\n    }\n    const badgeTemplate = \"%ccalcite\";\n    const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n    console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\nlet listFormatter;\nconst logger = {\n    debug: (message) => forwardToConsole(\"debug\", message),\n    info: (message) => forwardToConsole(\"info\", message),\n    warn: (message) => forwardToConsole(\"warn\", message),\n    error: (message) => forwardToConsole(\"error\", message),\n    trace: (message) => forwardToConsole(\"trace\", message),\n    deprecated,\n};\nfunction deprecated(context, { component, name, suggested, removalVersion }) {\n    const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n    if (loggedDeprecations.has(key)) {\n        return;\n    }\n    loggedDeprecations.add(key);\n    const multiSuggestions = Array.isArray(suggested);\n    if (multiSuggestions && !listFormatter) {\n        listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n    }\n    const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n    forwardToConsole(\"warn\", message);\n}\n\nexport { logger as l };\n\n//# sourceMappingURL=logger-d56ad214.js.map"],"names":["loggedDeprecations","logLevels","willLog","level","logLevel","forwardToConsole","data","listFormatter","logger","message","deprecated","context","component","name","suggested","removalVersion","key","multiSuggestions","suggestion"],"mappings":"wCAAA;AAAA;AAAA;AAAA;AAAA,GAUA,MAAMA,EAAqB,IAAI,IACzBC,EAAY,CACd,MAAO,EACP,MAAO,EACP,KAAM,EACN,KAAM,EACN,MAAO,EACP,IAAK,EACT,EACA,SAASC,EAAQC,EAAO,CACpB,OAAOF,EAAUE,CAAK,GAAKF,EAAUG,CAAQ,CACjD,CACA,SAASC,EAAiBF,KAAUG,EAAM,CACtC,GAAI,CAACJ,EAAQC,CAAK,EACd,OAIJ,QAAQA,CAAK,EAAE,KAAK,KAFE,YACH,0EACkC,GAAGG,CAAI,CAChE,CACA,IAAIC,EACC,MAACC,EAAS,CACX,MAAQC,GAAYJ,EAAiB,QAASI,CAAO,EACrD,KAAOA,GAAYJ,EAAiB,OAAQI,CAAO,EACnD,KAAOA,GAAYJ,EAAiB,OAAQI,CAAO,EACnD,MAAQA,GAAYJ,EAAiB,QAASI,CAAO,EACrD,MAAQA,GAAYJ,EAAiB,QAASI,CAAO,EACrD,WAAAC,CACJ,EACA,SAASA,EAAWC,EAAS,CAAE,UAAAC,EAAW,KAAAC,EAAM,UAAAC,EAAW,eAAAC,GAAkB,CACzE,MAAMC,EAAM,GAAGL,CAAO,IAAIA,IAAY,YAAc,GAAKC,CAAS,GAAGC,CAAI,GACzE,GAAIb,EAAmB,IAAIgB,CAAG,EAC1B,OAEJhB,EAAmB,IAAIgB,CAAG,EAC1B,MAAMC,EAAmB,MAAM,QAAQH,CAAS,EAC5CG,GAAoB,CAACV,IACrBA,EAAgB,IAAI,KAAK,WAAW,KAAM,CAAE,MAAO,OAAQ,KAAM,cAAe,GAEpF,MAAME,EAAU,IAAII,CAAI,KAAKF,CAAO,yCAAyCI,IAAmB,SAAW,mBAAqB,IAAIA,CAAc,EAAE,IAAID,EAAY,QAAQG,EAAmBV,EAAc,OAAOO,EAAU,IAAKI,GAAe,IAAIA,CAAU,GAAG,CAAC,EAAI,IAAIJ,CAAS,GAAG,YAAc,EAAE,GACxST,EAAiB,OAAQI,CAAO,CACpC","x_google_ignoreList":[0]}
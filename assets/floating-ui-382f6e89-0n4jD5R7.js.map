{"version":3,"file":"floating-ui-382f6e89-0n4jD5R7.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/floating-ui-382f6e89.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { D as DEBOUNCE } from './resources-a23d2491.js';\nimport { g as getElementDir } from './dom-b6dedd88.js';\nimport { i as isBrowser } from './browser-618ac057.js';\nimport { d as debounce } from './debounce-6e4946fd.js';\n\n/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition$1 = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset$1 = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift$1 = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle$1(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle$1(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle$1(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle$1(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nsize;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\ninline;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nlimitShift;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nfunction offsetParent(element) {\n    return offsetParentPolyfill(element);\n}\nfunction flatTreeParent(element) {\n    if (element.assignedSlot) {\n        return element.assignedSlot;\n    }\n    if (element.parentNode instanceof ShadowRoot) {\n        return element.parentNode.host;\n    }\n    return element.parentNode;\n}\nfunction offsetParentPolyfill(element) {\n    // Do an initial walk to check for display:none ancestors.\n    for (let ancestor = element; ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        if (getComputedStyle(ancestor).display === 'none') {\n            return null;\n        }\n    }\n    for (let ancestor = flatTreeParent(element); ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        const style = getComputedStyle(ancestor);\n        // Display:contents nodes aren't in the layout tree, so they should be skipped.\n        if (style.display === 'contents') {\n            continue;\n        }\n        if (style.position !== 'static' || isContainingBlock(style)) {\n            return ancestor;\n        }\n        if (ancestor.tagName === 'BODY') {\n            return ancestor;\n        }\n    }\n    return null;\n}\n\n(function setUpFloatingUiForShadowDomPositioning() {\n    if (isBrowser()) {\n        const originalGetOffsetParent = platform.getOffsetParent;\n        platform.getOffsetParent = (element) => originalGetOffsetParent(element, offsetParent);\n    }\n})();\nfunction roundByDPR(value) {\n    const dpr = window.devicePixelRatio || 1;\n    return Math.round(value * dpr) / dpr;\n}\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param component\n * @param root0.referenceEl.referenceEl\n * @param root0.referenceEl.floatingEl\n * @param root0.referenceEl.overlayPositioning\n * @param root0.referenceEl.placement\n * @param root0.referenceEl.flipDisabled\n * @param root0.referenceEl.flipPlacements\n * @param root0.referenceEl.offsetDistance\n * @param root0.referenceEl.offsetSkidding\n * @param root0.referenceEl.arrowEl\n * @param root0.referenceEl.type\n * @param component.referenceEl\n * @param component.floatingEl\n * @param component.overlayPositioning\n * @param component.placement\n * @param component.flipDisabled\n * @param component.flipPlacements\n * @param component.offsetDistance\n * @param component.offsetSkidding\n * @param component.arrowEl\n * @param component.type\n */\nconst positionFloatingUI = \n/* we export arrow function to allow us to spy on it during testing */\nasync (component, { referenceEl, floatingEl, overlayPositioning = \"absolute\", placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, arrowEl, type, }) => {\n    if (!referenceEl || !floatingEl) {\n        return null;\n    }\n    const isRTL = getElementDir(floatingEl) === \"rtl\";\n    const { x, y, placement: effectivePlacement, strategy: position, middlewareData, } = await computePosition(referenceEl, floatingEl, {\n        strategy: overlayPositioning,\n        placement: placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n            ? undefined\n            : getEffectivePlacement(placement, isRTL),\n        middleware: getMiddleware({\n            placement,\n            flipDisabled,\n            flipPlacements: flipPlacements?.map((placement) => getEffectivePlacement(placement, isRTL)),\n            offsetDistance,\n            offsetSkidding,\n            arrowEl,\n            type,\n        }),\n    });\n    if (arrowEl && middlewareData.arrow) {\n        const { x, y } = middlewareData.arrow;\n        const side = effectivePlacement.split(\"-\")[0];\n        const alignment = x != null ? \"left\" : \"top\";\n        const transform = ARROW_CSS_TRANSFORM[side];\n        const reset = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n        if (\"floatingLayout\" in component) {\n            component.floatingLayout = side === \"left\" || side === \"right\" ? \"horizontal\" : \"vertical\";\n        }\n        Object.assign(arrowEl.style, {\n            ...reset,\n            [alignment]: `${alignment == \"left\" ? x : y}px`,\n            [side]: \"100%\",\n            transform,\n        });\n    }\n    const referenceHidden = middlewareData.hide?.referenceHidden;\n    const visibility = referenceHidden ? \"hidden\" : null;\n    const pointerEvents = visibility ? \"none\" : null;\n    floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n    const { open } = component;\n    Object.assign(floatingEl.style, {\n        visibility,\n        pointerEvents,\n        position,\n        transform: open ? `translate(${roundByDPR(x)}px,${roundByDPR(y)}px)` : \"\",\n        top: 0,\n        left: 0,\n    });\n};\n/**\n * Exported for testing purposes only\n */\nconst placementDataAttribute = \"data-placement\";\nconst flipPlacements = [\n    \"top\",\n    \"bottom\",\n    \"right\",\n    \"left\",\n    \"top-start\",\n    \"top-end\",\n    \"bottom-start\",\n    \"bottom-end\",\n    \"right-start\",\n    \"right-end\",\n    \"left-start\",\n    \"left-end\",\n    \"leading\",\n    \"trailing\",\n    \"leading-start\",\n    \"leading-end\",\n    \"trailing-start\",\n    \"trailing-end\",\n];\nconst defaultMenuPlacement = \"bottom-start\";\nconst defaultEndMenuPlacement = \"bottom-end\";\nconst FloatingCSS = {\n    animation: \"calcite-floating-ui-anim\",\n    animationActive: \"calcite-floating-ui-anim--active\",\n    arrow: \"calcite-floating-ui-arrow\",\n    arrowStroke: \"calcite-floating-ui-arrow__stroke\",\n};\nfunction getMiddleware({ placement, flipDisabled, flipPlacements, offsetDistance, offsetSkidding, arrowEl, type, }) {\n    const defaultMiddleware = [shift(), hide()];\n    if (type === \"menu\") {\n        return [\n            ...defaultMiddleware,\n            flip({\n                fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"],\n            }),\n        ];\n    }\n    if (type === \"popover\" || type === \"tooltip\") {\n        const middleware = [\n            ...defaultMiddleware,\n            offset({\n                mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n                crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0,\n            }),\n        ];\n        if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n            middleware.push(autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }));\n        }\n        else if (!flipDisabled) {\n            middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n        }\n        if (arrowEl) {\n            middleware.push(arrow({\n                element: arrowEl,\n            }));\n        }\n        return middleware;\n    }\n    return [];\n}\nfunction filterValidFlipPlacements(placements, el) {\n    const filteredPlacements = placements.filter((placement) => flipPlacements.includes(placement));\n    if (filteredPlacements.length !== placements.length) {\n        console.warn(`${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${flipPlacements\n            .map((placement) => `\"${placement}\"`)\n            .join(\", \")\n            .trim()}`, { el });\n    }\n    return filteredPlacements;\n}\nfunction getEffectivePlacement(placement, isRTL = false) {\n    const placements = [\"left\", \"right\"];\n    if (isRTL) {\n        placements.reverse();\n    }\n    return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]);\n}\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component - A floating-ui component.\n * @param options - Reposition parameters.\n * @param options.referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param options.floatingEl - The `floatingElement` containing the floating ui.\n * @param options.overlayPositioning - type of positioning to use for the overlaid content.\n * @param options.placement - Determines where the component will be positioned relative to the `referenceElement`.\n * @param options.flipDisabled - Prevents flipping the component's placement when overlapping its `referenceElement`.\n * @param options.flipPlacements - Defines the available placements that can be used when a flip occurs.\n * @param options.offsetDistance - Offsets the position of the popover away from the `referenceElement`.\n * @param options.offsetSkidding - Offsets the position of the component along the `referenceElement`.\n * @param options.arrowEl - A customizable arrow element.\n * @param options.type - The type of floating UI.\n * @param delayed - Reposition the component after a delay.\n * @returns {Promise<void>}\n */\nasync function reposition(component, options, delayed = false) {\n    if (!component.open || !options.floatingEl || !options.referenceEl) {\n        return;\n    }\n    const trackedState = autoUpdatingComponentMap.get(component);\n    if (!trackedState) {\n        return runAutoUpdate(component, options.referenceEl, options.floatingEl);\n    }\n    const positionFunction = delayed ? getDebouncedReposition(component) : positionFloatingUI;\n    await positionFunction(component, options);\n}\nfunction getDebouncedReposition(component) {\n    let debounced = componentToDebouncedRepositionMap.get(component);\n    if (debounced) {\n        return debounced;\n    }\n    debounced = debounce(positionFloatingUI, DEBOUNCE.reposition, {\n        leading: true,\n        maxWait: DEBOUNCE.reposition,\n    });\n    componentToDebouncedRepositionMap.set(component, debounced);\n    return debounced;\n}\nconst ARROW_CSS_TRANSFORM = {\n    top: \"\",\n    left: \"rotate(-90deg)\",\n    bottom: \"rotate(180deg)\",\n    right: \"rotate(90deg)\",\n};\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nconst autoUpdatingComponentMap = new WeakMap();\nconst componentToDebouncedRepositionMap = new WeakMap();\nasync function runAutoUpdate(component, referenceEl, floatingEl) {\n    if (!floatingEl.isConnected) {\n        return;\n    }\n    const effectiveAutoUpdate = isBrowser()\n        ? autoUpdate\n        : (_refEl, _floatingEl, updateCallback) => {\n            updateCallback();\n            return () => {\n                /* noop */\n            };\n        };\n    // we set initial state here to make it available for `reposition` calls\n    autoUpdatingComponentMap.set(component, { state: \"pending\" });\n    let repositionPromise;\n    const cleanUp = effectiveAutoUpdate(referenceEl, floatingEl, \n    // callback is invoked immediately\n    () => {\n        const promise = component.reposition();\n        if (!repositionPromise) {\n            repositionPromise = promise;\n        }\n    });\n    autoUpdatingComponentMap.set(component, { state: \"active\", cleanUp });\n    return repositionPromise;\n}\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nasync function connectFloatingUI(component, referenceEl, floatingEl) {\n    if (!floatingEl || !referenceEl) {\n        return;\n    }\n    disconnectFloatingUI(component, referenceEl, floatingEl);\n    Object.assign(floatingEl.style, {\n        visibility: \"hidden\",\n        pointerEvents: \"none\",\n        // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n        position: component.overlayPositioning,\n    });\n    if (!component.open) {\n        return;\n    }\n    return runAutoUpdate(component, referenceEl, floatingEl);\n}\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nfunction disconnectFloatingUI(component, referenceEl, floatingEl) {\n    if (!floatingEl || !referenceEl) {\n        return;\n    }\n    const trackedState = autoUpdatingComponentMap.get(component);\n    if (trackedState?.state === \"active\") {\n        trackedState.cleanUp();\n    }\n    autoUpdatingComponentMap.delete(component);\n    componentToDebouncedRepositionMap.get(component)?.cancel();\n    componentToDebouncedRepositionMap.delete(component);\n}\nconst visiblePointerSize = 4;\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nconst defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n\nexport { FloatingCSS as F, disconnectFloatingUI as a, defaultEndMenuPlacement as b, connectFloatingUI as c, defaultMenuPlacement as d, defaultOffsetDistance as e, filterValidFlipPlacements as f, reposition as r };\n\n//# sourceMappingURL=floating-ui-382f6e89.js.map"],"names":["sides","alignments","placements","acc","side","min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","clamp","start","value","end","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","x","y","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition$1","config","strategy","middleware","platform","validMiddleware","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow$1","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","getPlacementList","autoAlignment","allowedPlacements","autoPlacement$1","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements$1","overflow","currentIndex","currentPlacement","alignmentSides","currentOverflows","allOverflows","nextPlacement","placementsSortedByMostSpace","d","a","b","resetPlacement","flip$1","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","fallbackPlacements","overflows","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","hide$1","offsets","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","offset$1","_middlewareData$offse","diffCoords","shift$1","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","hasWindow","getNodeName","node","isNode","getWindow","_node$ownerDocument","getDocumentElement","isElement","isHTMLElement","isShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle$1","isTableElement","isTopLayer","selector","isContainingBlock","elementOrCss","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","getBoundingClientRect","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","left","top","convertOffsetParentRelativeRectToViewportRelativeRect","documentElement","topLayer","scroll","isOffsetParentAnElement","offsetRect","getClientRects","getWindowScrollBarX","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","isStaticPositioned","getTrueOffsetParent","polyfill","getOffsetParent","svgOffsetParent","getElementRects","getOffsetParentFn","getDimensionsFn","floatingDimensions","isRTL","observeMove","onMove","io","timeoutId","root","cleanup","_io","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","autoPlacement","shift","flip","hide","arrow","computePosition","mergedOptions","platformWithCache","offsetParentPolyfill","flatTreeParent","style","isBrowser","originalGetOffsetParent","roundByDPR","dpr","positionFloatingUI","component","floatingEl","overlayPositioning","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","type","getElementDir","effectivePlacement","position","getEffectivePlacement","getMiddleware","transform","ARROW_CSS_TRANSFORM","visibility","_a","pointerEvents","placementDataAttribute","open","defaultMenuPlacement","defaultEndMenuPlacement","FloatingCSS","defaultMiddleware","filterValidFlipPlacements","filteredPlacements","reposition","delayed","autoUpdatingComponentMap","runAutoUpdate","getDebouncedReposition","debounced","componentToDebouncedRepositionMap","debounce","DEBOUNCE","effectiveAutoUpdate","_refEl","_floatingEl","updateCallback","repositionPromise","cleanUp","promise","connectFloatingUI","disconnectFloatingUI","trackedState","visiblePointerSize","defaultOffsetDistance"],"mappings":"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","x_google_ignoreList":[0]}
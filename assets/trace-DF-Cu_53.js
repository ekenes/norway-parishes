import{dc as e,dd as c,de as n,U as u}from"./index-0pHHYqT1.js";import{a as y}from"./WebMap-BCUzSfnw.js";import"./ColorBackground-BHAvUgL_.js";import"./CollectionFlattener-BlSS9TyQ.js";import"./basemapUtils-OAcqO5VQ.js";import"./TablesMixin-BQXh6KBa.js";import"./MultiOriginJSONSupport-TbxqwyX4.js";import"./portalItemUtils-DNXyin3a.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-_kTxLSXI.js";import"./jsonContext-whrT3Qnr.js";import"./project-CqD2rP75.js";import"./FeatureLayer-CLFLYoCH.js";import"./commonProperties-CUfTzj5N.js";import"./FeatureLayerBase-BK564wbX.js";import"./HeightModelInfo-Dpg9rG1D.js";import"./featureLayerUtils-o4ogvGp7.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-vgxZ2T0V.js";import"./Relationship-CAcVCOO_.js";import"./serviceCapabilitiesUtils-PSx4Rb3I.js";import"./editsZScale-CvCkWL30.js";import"./APIKeyMixin-BF8uUpas.js";import"./ArcGISService-Dzxg3G3l.js";import"./CustomParametersMixin-RLrsYJRF.js";import"./EditBusLayer-BwLk-_N_.js";import"./FeatureEffectLayer-DLo0B2xh.js";import"./FeatureEffect-BcjtHuez.js";import"./FeatureReductionLayer-7b6Nqwz0.js";import"./FeatureReductionSelection-BoqJWAJO.js";import"./labelingInfo-DEVe8ZeJ.js";import"./labelUtils-CVz6nlM3.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-CqOXhR1u.js";import"./OrderedLayer-DbP1K9H4.js";import"./OrderByInfo-BgypIh2b.js";import"./PortalLayer-678mR6Su.js";import"./RefreshableLayer-vaXU4Q7r.js";import"./TemporalLayer-E3LAz_Uz.js";import"./FeatureTemplate-XR48cppx.js";import"./FeatureType-DK7YwK9k.js";import"./fieldProperties-2SiMYHIk.js";import"./versionUtils-2QnhVNd1.js";import"./styleUtils-BTQTWLlk.js";import"./popupUtils-Bu-xDbb_.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-BnQTLBgR.js";async function at(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function et(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{et as submitTraceJob,at as trace};
//# sourceMappingURL=trace-DF-Cu_53.js.map

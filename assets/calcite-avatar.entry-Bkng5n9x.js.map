{"version":3,"file":"calcite-avatar.entry-Bkng5n9x.js","sources":["../../node_modules/@esri/calcite-components/dist/esm/calcite-avatar.entry.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { r as registerInstance, h, g as getElement } from './index-abe3b66e.js';\nimport { i as getModeName } from './dom-b6dedd88.js';\nimport { h as hexToRGB, i as isValidHex } from './utils-3daeffe5.js';\nimport './guid-9c230b6a.js';\nimport './resources-a23d2491.js';\n\nconst CSS = {\n    thumbnail: \"thumbnail\",\n    background: \"background\",\n    initials: \"initials\",\n    icon: \"icon\",\n};\n\n/**\n * Convert a string to a valid hex by hashing its contents\n * and using the hash as a seed for three distinct color values\n *\n * @param string\n */\nfunction stringToHex(string) {\n    // improve random color generation for similar strings.\n    string = mixStringDeterministically(string);\n    let hash = 0;\n    for (let i = 0; i < string.length; i++) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let hex = \"#\";\n    for (let j = 0; j < 3; j++) {\n        const value = (hash >> (j * 8)) & 0xff;\n        hex += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return hex;\n}\n/**\n * The function splits the string into two halves, reverses each half, and then concatenates them.\n *\n * @param {string} string - The input string to be mixed.\n * @returns {string} - The mixed string.\n */\nfunction mixStringDeterministically(string) {\n    const midPoint = Math.floor(string.length / 2);\n    const reversed = string.split(\"\").reverse().join(\"\");\n    return reversed.substring(midPoint) + reversed.slice(0, midPoint);\n}\n/**\n * Find the hue of a color given the separate RGB color channels\n *\n * @param rgb\n */\nfunction rgbToHue(rgb) {\n    let { r, g, b } = rgb;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const delta = max - min;\n    if (max === min) {\n        return 0;\n    }\n    let hue = (max + min) / 2;\n    switch (max) {\n        case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n        case g:\n            hue = (b - r) / delta + 2;\n            break;\n        case b:\n            hue = (r - g) / delta + 4;\n            break;\n    }\n    return Math.round(hue * 60);\n}\n/**\n * For a hex color, find the hue\n *\n * @param hex {string} - form of \"#------\"\n */\nfunction hexToHue(hex) {\n    return rgbToHue(hexToRGB(hex));\n}\n\nconst avatarCss = \":host{display:inline-block;overflow:hidden;border-radius:var(--calcite-avatar-corner-radius, 50%);color:var(--calcite-avatar-color, var(--calcite-color-text-2))}:host([scale=s]){block-size:1.5rem;inline-size:1.5rem;font-size:var(--calcite-font-size--3)}:host([scale=m]){block-size:2rem;inline-size:2rem;font-size:var(--calcite-font-size--2)}:host([scale=l]){block-size:2.75rem;inline-size:2.75rem;font-size:var(--calcite-font-size-0)}.icon{display:flex}.background{display:flex;block-size:100%;inline-size:100%;align-items:center;justify-content:center;border-radius:var(--calcite-avatar-corner-radius, 50%)}.initials{font-weight:var(--calcite-font-weight-bold);text-transform:uppercase}.thumbnail{block-size:100%;inline-size:100%;border-radius:var(--calcite-avatar-corner-radius, 50%)}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteAvatarStyle0 = avatarCss;\n\nconst Avatar = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.scale = \"m\";\n        this.thumbnail = undefined;\n        this.fullName = undefined;\n        this.username = undefined;\n        this.userId = undefined;\n        this.label = undefined;\n        this.thumbnailFailedToLoad = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    render() {\n        return this.determineContent();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    determineContent() {\n        if (this.thumbnail && !this.thumbnailFailedToLoad) {\n            return (h(\"img\", { alt: this.label || \"\", class: CSS.thumbnail, onError: () => (this.thumbnailFailedToLoad = true), src: this.thumbnail }));\n        }\n        const initials = this.generateInitials();\n        const backgroundColor = this.generateFillColor();\n        return (h(\"span\", { \"aria-label\": this.label || this.fullName, class: CSS.background, role: \"figure\", style: { backgroundColor } }, initials ? (h(\"span\", { \"aria-hidden\": \"true\", class: CSS.initials }, initials)) : (h(\"calcite-icon\", { class: CSS.icon, icon: \"user\", scale: this.scale }))));\n    }\n    /**\n     * Generate a valid background color that is consistent and unique to this user\n     */\n    generateFillColor() {\n        const { userId, username, fullName, el } = this;\n        const theme = getModeName(el);\n        const id = userId && `#${userId.substr(userId.length - 6)}`;\n        const name = username || fullName || \"\";\n        const hex = id && isValidHex(id) ? id : stringToHex(name);\n        // if there is not unique information, or an invalid hex is produced, return a default\n        if ((!userId && !name) || !isValidHex(hex)) {\n            return `var(--calcite-avatar-background-color, var(--calcite-color-foreground-2))`;\n        }\n        const hue = hexToHue(hex);\n        const l = theme === \"dark\" ? 20 : 90;\n        return `var(--calcite-avatar-background-color, hsl(${hue}, 60%, ${l}%))`;\n    }\n    /**\n     * Use fullName or username to generate initials\n     */\n    generateInitials() {\n        const { fullName, username } = this;\n        if (fullName) {\n            return fullName\n                .trim()\n                .split(\" \")\n                .map((name) => name.substring(0, 1))\n                .join(\"\");\n        }\n        else if (username) {\n            return username.substring(0, 2);\n        }\n        return false;\n    }\n    get el() { return getElement(this); }\n};\nAvatar.style = CalciteAvatarStyle0;\n\nexport { Avatar as calcite_avatar };\n\n//# sourceMappingURL=calcite-avatar.entry.js.map"],"names":["CSS","stringToHex","string","mixStringDeterministically","hash","i","hex","j","value","midPoint","reversed","rgbToHue","rgb","r","g","b","max","min","delta","hue","hexToHue","hexToRGB","avatarCss","CalciteAvatarStyle0","Avatar","hostRef","registerInstance","h","initials","backgroundColor","userId","username","fullName","el","theme","getModeName","id","name","isValidHex","getElement"],"mappings":"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","x_google_ignoreList":[0]}
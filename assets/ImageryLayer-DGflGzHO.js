const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/imageryUtils-5noXLVq8.js","assets/utils-DNCtIKhV.js","assets/index-BSR5w7Gk.js","assets/index-C-o8y_f9.css","assets/originUtils-D69mHv66.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/jsonContext-CrRyLCRG.js","assets/portalItemUtils-CNprQd1s.js","assets/saveUtils-tBPX8gUm.js"])))=>i.map(i=>d[i]);
import{b7 as A,jm as Qt,O as P,j as i,m as l,u as j,k as v,M as Se,by as V,ag as se,eZ as He,P as kt,cn as te,fk as oe,mq as be,mp as st,n8 as at,c3 as dt,aX as ze,o as J,bA as re,be as Wt,n9 as Zt,p as Ft,dy as At,c2 as Kt,df as M,dc as E,de as U,dd as H,U as T,eW as yt,d5 as Pe,R as Ie,Z as Xt,na as Yt,aQ as er,s as Pt,I as x,fl as ut,gc as tr,ao as rr,d6 as ir,hU as sr,ez as ar,eA as nr,fd as or,_ as lr,z as ur,eB as pr,$ as cr}from"./index-BSR5w7Gk.js";import{S as mr}from"./MultiOriginJSONSupport-BDWimddl.js";import{N as F,i as k,a as ve,j as Le,g as dr,c as yr,d as hr,l as fr,n as pt,b as gr,h as Nt,p as wr,f as Rr,t as vr,B as br,L as Sr,U as xr,q as Ir,e as Fr,o as Dr}from"./RasterPresetRendererMixin-Wufqh9IB.js";import{f as Tr,y as jr,d as Pr,l as Nr}from"./commonProperties-BoEbAvXG.js";import{m as ct,g as _r,p as Or,d as Cr}from"./multidimensionalUtils-DutuxDtb.js";import{s as $r}from"./pixelRangeUtils-Ba7Ehdiw.js";import{A as Vt,d as Mt,e as Ar,q as Vr,s as Mr,n as Jr,a as Jt,_ as Er,j as _t,P as qr}from"./RasterSymbolizer-2WMOiJXq.js";import{t as Ot}from"./imageBitmapUtils-C3zLmuaT.js";import{g as mt,s as Gr,l as zr}from"./dataUtils-1TXoaEuE.js";import{a as Lr,s as Ur}from"./executeForIds-DuC03fxY.js";import{l as Hr}from"./ArcGISService-Cop4IZ11.js";import{e as Br}from"./CustomParametersMixin-BTDwaxNj.js";import{b as Qr}from"./OperationalLayer-CYQ_UX42.js";import{j as kr}from"./PortalLayer-Bfw9bGZv.js";import{f as Wr}from"./RefreshableLayer-DCWILGLU.js";import{l as Zr}from"./TemporalLayer-US19_AO6.js";import{t as Kr}from"./versionUtils-nTdPCh9f.js";import{p as Xr}from"./popupUtils-BHI5lAMR.js";import{A as ke}from"./interfaces-CL2NbQte.js";import"./utils-D-fEzv4k.js";import"./cimSymbolUtils-CiT926eI.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./portalItemUtils-CNprQd1s.js";import"./TimeInfo-DpnlxG_I.js";const Yr={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},ei=new Set(["u1","u2","u4","u8","s8","u16","s16"]),ti={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ri=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Et(s){return ri.has(s.type)}function ht(s,r){var e;if(!s||!r)return A(s||r);const n=A(s);if(n.functionDefinition&&r.rasterFunctionDefinition){const t=r.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),qt(n.functionDefinition.arguments,r),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else((e=r.functionName)==null?void 0:e.toLowerCase())!=="none"&&(Gt(n.functionArguments).Raster=r);return n}function qt(s,r){for(const n in s)n.toLowerCase()==="raster"&&(s[n].type==="RasterFunctionVariable"?(s[n]=r.rasterFunctionDefinition,s[n].type="RasterFunctionTemplate"):s[n].type==="RasterFunctionTemplate"&&qt(s[n].arguments,r))}function ae(s){const r=A(Yr[s.functionName+"Function"]),n=s.functionArguments;for(const e in n)e.toLowerCase()==="raster"?(r.arguments[e]=ae(n[e]),r.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(r.arguments[e].value=pi(n[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=n[e];return r}function ii(s,r){switch(r=r||{},s.type){case"raster-stretch":return ni(s,r);case"class-breaks":return oi(s,r);case"unique-value":return li(s,r);case"raster-colormap":return ui(s,r);case"vector-field":return si(s,r);case"raster-shaded-relief":return ai(s,r);case"flow":throw new Error("Unsupported rendering rule.")}}function Gt(s){const r=(s==null?void 0:s.Raster)??(s==null?void 0:s.raster);return r&&r.declaredClass==="esri.layers.support.RasterFunction"?Gt(r.functionArguments):s}const Me={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function si(s,r){const n=new F;n.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=r,a=e==="vector-uv";let o,u;if(t&&t.length===2){const f=t.map(w=>w.toLowerCase());o=f.indexOf("magnitude"),u=f.indexOf("direction")}o!==-1&&o!==null||(o=0,u=1);const p=s.rotationType==="arithmetic"?1:2,m=s.flowRepresentation==="flow-from"?0:1,c=s.visualVariables?s.visualVariables.find(f=>f.field==="Magnitude"):new Qt,d={magnitudeBandID:o,directionBandID:u,isUVComponents:a,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:ti[s.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};n.functionArguments=d;const h=ae(n);return r.convertToRFT?F.fromJSON({rasterFunctionDefinition:h}):n}function ai(s,r){const n=r.convertToRFT;if(r.dataType!=="elevation"&&(r.dataType!=="generic"||r.bandCount!==1||r.pixelType!=="s16"&&r.pixelType!=="s32"&&r.pixelType!=="f32"&&r.pixelType!=="f64"))return new F;const e=new F;e.functionName="Hillshade";const t=s.hillshadeType==="traditional"?0:1,a=s.scalingType==="none"?1:3,o={HillshadeType:t,SlopeType:a,ZFactor:s.zFactor};return t===0&&(o.Azimuth=s.azimuth,o.Altitude=s.altitude),a===3&&(o.PSPower=s.pixelSizePower,o.PSZFactor=s.pixelSizeFactor),e.functionArguments=o,e.variableName="Raster",s.colorRamp&&(e.functionName="ShadedRelief",n?o.ColorRamp=Vt(s.colorRamp):o.Colormap=Mt(s.colorRamp)),n?new F({rasterFunctionDefinition:ae(e)}):e}function ni(s,r){var p,m;const n=r.convertToRFT,e=new F;e.functionName="Stretch";const t=Me[Ar.toJSON(s.stretchType)],a="u8",o=(p=s.customStatistics)==null?void 0:p.map(c=>[c.min,c.max,c.avg??0,c.stddev??1]),u={StretchType:t,Statistics:o,DRA:s.dynamicRangeAdjustment,UseGamma:s.useGamma,Gamma:s.gamma,ComputeGamma:s.computeGamma};if(s.outputMin!=null&&(u.Min=s.outputMin),s.outputMax!=null&&(u.Max=s.outputMax),t===Me.standardDeviation?(u.NumberOfStandardDeviations=s.numberOfStandardDeviations,e.outputPixelType=a):t===Me.percentClip?(u.MinPercent=s.minPercent,u.MaxPercent=s.maxPercent,e.outputPixelType=a):t===Me.minMax?e.outputPixelType=a:t===Me.sigmoid&&(u.SigmoidStrengthLevel=s.sigmoidStrengthLevel),e.functionArguments=u,e.variableName="Raster",s.colorRamp){const c=s.colorRamp,d=new F;if(n)d.functionArguments={ColorRamp:Vt(c)};else{const h=Vr(c,!0);if(h)d.functionArguments={colorRampName:h};else if(!r.convertColorRampToColormap||c.type!=="algorithmic"&&c.type!=="multipart"){const f=s.colorRamp.toJSON();f.type==="algorithmic"?f.algorithm=f.algorithm||"esriCIELabAlgorithm":f.type==="multipart"&&((m=f.colorRamps)!=null&&m.length)&&f.colorRamps.forEach(w=>w.algorithm=w.algorithm||"esriCIELabAlgorithm"),d.functionArguments={colorRamp:f}}else d.functionArguments={Colormap:Mt(c)}}return d.variableName="Raster",d.functionName="Colormap",d.functionArguments.Raster=e,n?new F({rasterFunctionDefinition:ae(d)}):d}return n?new F({rasterFunctionDefinition:ae(e)}):e}function oi(s,r){const n=[],e=[],t=[],a=[],{pixelType:u,rasterAttributeTable:p}=r,m=p==null?null:p.features,c=zt(p);if(c&&m&&Array.isArray(m)&&s.classBreakInfos){s.classBreakInfos.forEach((y,R)=>{var N;const I=(N=y.symbol)==null?void 0:N.color;let S;I!=null&&I.a&&y.minValue!=null&&y.maxValue!=null&&m.forEach(q=>{y.minValue!=null&&y.maxValue!=null&&(S=q.attributes[s.field],(S>=y.minValue&&S<y.maxValue||R===s.classBreakInfos.length-1&&S>=y.minValue)&&a.push([q.attributes[c],I.r,I.g,I.b]))})});const w=u?nt(a,u):a,g=new F;return g.functionName="Colormap",g.functionArguments={},g.functionArguments.Colormap=w,g.variableName="Raster",r.convertToRFT?new F({rasterFunctionDefinition:ae(g)}):g}s.classBreakInfos.forEach((w,g)=>{if(w.minValue==null||w.maxValue==null)return;const y=w.symbol&&w.symbol.color;y!=null&&y.a?(g===0?n.push(w.minValue,w.maxValue+1e-4):n.push(w.minValue+1e-4,w.maxValue+1e-4),e.push(g),a.push([g,y.r,y.g,y.b])):t.push(w.minValue,w.maxValue)});const d=u?nt(a,u):a,h=new F;h.functionName="Remap",h.functionArguments={InputRanges:n,OutputValues:e,NoDataRanges:t},h.variableName="Raster";const f=new F;return f.functionName="Colormap",f.functionArguments={Colormap:d,Raster:h},r.convertToRFT?new F({rasterFunctionDefinition:ae(f)}):f}function nt(s,r){const n=ei.has(r)?$r(r):null;return n&&s.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),s}function zt(s){if(s==null)return;const{fields:r}=s,n=r==null?void 0:r.find(e=>(e==null?void 0:e.name)&&e.name.toLowerCase()==="value");return n==null?void 0:n.name}function li(s,r){var d,h;const n=[],{pixelType:e,rasterAttributeTable:t}=r,a=t==null?null:t.features,o=zt(t),u=(h=(d=s.defaultSymbol)==null?void 0:d.color)==null?void 0:h.toRgb(),p=s.uniqueValueInfos;if(p)if(a){if(o){const f=new Map;p.forEach(g=>{const y=g.value,R=Ct(g);y!=null&&(R!=null&&R.a)&&f.set(String(y),R.toRgb())});const w=s.field;w&&a.forEach(({attributes:g})=>{const y=String(g[w]),R=g[o],I=f.get(y);I?n.push([R,...I]):u&&n.push([R,...u])})}}else for(let f=0;f<p.length;f++){const w=p[f],g=Ct(w),y=+w.value;if(g!=null&&g.a){if(isNaN(y))return null;n.push([y,g.r,g.g,g.b])}}const m=e?nt(n,e):n,c=new F;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",r.convertToRFT?new F({rasterFunctionDefinition:ae(c)}):c}function Ct(s){var r,n,e,t,a;return((r=s.symbol)==null?void 0:r.type)==="polygon-3d"?(t=(e=(n=s.symbol.symbolLayers)==null?void 0:n.find(o=>o.type==="fill"))==null?void 0:e.material)==null?void 0:t.color:(a=s.symbol)==null?void 0:a.color}function ui(s,r){const n=s.extractColormap();if(!n||n.length===0)return null;const{pixelType:e}=r,t=e?nt(n,e):n,a=new F;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=t,r.convertToRFT?new F({rasterFunctionDefinition:ae(a)}):a}function pi(s){const r=[],n=[];return s.forEach(e=>{r.push(e[0]),n.push(Mr([...e.slice(1),255]))}),{type:"RasterColormap",values:r,colors:n}}let O=class extends P{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(r,n,e){this.layer.version<10.3||(n[e]=r)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(r,n,e){this.format&&this.format.toLowerCase().includes("jpg")&&r!=null&&(n[e]=r)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(r,n,e){this.format==="lerc"&&r!=null&&(n[e]=r)}get format(){var r;return((r=this.layer.renderer)==null?void 0:r.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(r,n,e){this.format==="lerc"&&this.layer.version>=10.5&&(n[e]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("rasterFunction"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("definitionExpression"),r.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let n=r.mosaicRule;const e=r.definitionExpression;return n?e&&e!==n.where&&(n=n.clone(),n.where=e):e&&(n=new k({where:e})),n}get rasterFunction(){var o,u;const r=this.layer;let{rasterFunction:n}=r;const e=r.pixelFilter,t=!r.format||r.format.includes("jpg")||r.format.includes("png");n=this._addResampleRasterFunction(n);const a=(o=r.multidimensionalSubset)==null?void 0:o.areaOfInterest;return a&&(n=ci(n,a)),t&&!e&&((u=r.renderer)==null?void 0:u.type)!=="vector-field"&&(n=this.combineRendererWithRenderingRule(n)),n}combineRendererWithRenderingRule(r){const n=this.layer,{rasterInfo:e,renderer:t}=n;return r=r||n.rasterFunction,!t||!Et(t)?r:ht(ii(t,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandNames:e.bandInfos.map(({name:a})=>a),convertColorRampToColormap:n.version<10.6,convertToRFT:!!(r!=null&&r.rasterFunctionDefinition),bandCount:e.bandCount}),r)}_addResampleRasterFunction(r){var a;if(((a=this.layer.renderer)==null?void 0:a.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const n=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let t=new F({functionName:"Resample",functionArguments:{ResamplingType:n,InputCellSize:e}});return t=r!=null&&r.rasterFunctionDefinition?new F({rasterFunctionDefinition:ae(t)}):t,ht(t,r)}};function ci(s,r){const n=new F({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}});return ht(n,s)}i([l()],O.prototype,"layer",void 0),i([l({json:{write:!0}})],O.prototype,"adjustAspectRatio",null),i([j("adjustAspectRatio")],O.prototype,"writeAdjustAspectRatio",null),i([l({json:{write:!0}})],O.prototype,"bandIds",null),i([l({json:{write:!0}})],O.prototype,"compression",void 0),i([l({json:{write:!0}})],O.prototype,"compressionQuality",null),i([j("compressionQuality")],O.prototype,"writeCompressionQuality",null),i([l({json:{write:!0}})],O.prototype,"compressionTolerance",null),i([j("compressionTolerance")],O.prototype,"writeCompressionTolerance",null),i([l({json:{write:!0}})],O.prototype,"format",null),i([l({type:String,json:{read:{reader:ve.read},write:{writer:ve.write}}})],O.prototype,"interpolation",null),i([l({json:{write:!0}})],O.prototype,"noData",null),i([l({type:String,json:{read:{reader:Le.read},write:{writer:Le.write}}})],O.prototype,"noDataInterpretation",null),i([l({json:{write:!0}})],O.prototype,"pixelType",void 0),i([l({json:{write:!0}})],O.prototype,"lercVersion",void 0),i([j("lercVersion")],O.prototype,"writeLercVersion",null),i([l({type:Number})],O.prototype,"version",null),i([l({json:{write:!0}})],O.prototype,"mosaicRule",null),i([l({json:{write:!0,name:"renderingRule"}})],O.prototype,"rasterFunction",null),O=i([v("esri.layers.support.ExportImageServiceParameters")],O);let fe=class extends Se(P){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};i([l({type:V,json:{read:!0}})],fe.prototype,"fromGeometry",void 0),i([l({type:V,json:{read:!0,write:!0}})],fe.prototype,"toGeometry",void 0),i([l({json:{write:!0}})],fe.prototype,"objectIds",void 0),i([l({type:String,json:{write:!0}})],fe.prototype,"where",void 0),i([l({type:Number,json:{write:!0}})],fe.prototype,"maxCount",void 0),fe=i([v("esri.rest.support.FindImagesParameters")],fe);const mi=fe,Lt=s=>{let r=class extends s{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return i([l({json:{write:!0}})],r.prototype,"make",void 0),i([l({json:{write:!0}})],r.prototype,"model",void 0),i([l({json:{write:!0}})],r.prototype,"focalLength",void 0),i([l({json:{write:!0}})],r.prototype,"pixelSize",void 0),i([l({json:{write:!0}})],r.prototype,"rows",void 0),i([l({json:{write:!0}})],r.prototype,"cols",void 0),r=i([v("esri.rest.support.CameraInfoMixin")],r),r};let K=class extends Lt(P){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(r,n){n.acquisitionDate=r==null?void 0:r.getTime()}};i([l({json:{write:!0}})],K.prototype,"id",void 0),i([l({json:{name:"uri",write:!0}})],K.prototype,"referenceUri",void 0),i([l({type:Date,json:{write:!0}})],K.prototype,"acquisitionDate",void 0),i([j("acquisitionDate")],K.prototype,"writeAcquisitionDate",null),i([l({json:{write:!0}})],K.prototype,"cameraID",void 0),i([l({type:V,json:{write:!0}})],K.prototype,"center",void 0),i([l({type:V,json:{write:!0}})],K.prototype,"perspectiveCenter",void 0),i([l({json:{write:!0}})],K.prototype,"orientation",void 0),K=i([v("esri.rest.support.ImageInspectionInfo")],K);const di=K;let We=class extends P{constructor(){super(...arguments),this.images=null}};i([l({type:[di],json:{write:!0}})],We.prototype,"images",void 0),We=i([v("esri.rest.support.FindImagesResult")],We);const yi=We;var ft;let Fe=ft=class extends P{constructor(s){super(s),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new ft(A({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};i([l({type:[String],json:{name:"angleName",write:!0}})],Fe.prototype,"angleNames",void 0),i([l({type:V,json:{write:!0}})],Fe.prototype,"point",void 0),i([l({type:se,json:{write:!0}})],Fe.prototype,"spatialReference",void 0),i([l({type:He,json:{write:!0}})],Fe.prototype,"rasterId",void 0),Fe=ft=i([v("esri.rest.support.ImageAngleParameters")],Fe);const hi=Fe;let Ne=class extends P{constructor(r){super(r),this.north=null,this.up=null,this.spatialReference=null}};i([l({type:Number,json:{write:!0}})],Ne.prototype,"north",void 0),i([l({type:Number,json:{write:!0}})],Ne.prototype,"up",void 0),i([l({type:se,json:{write:!0}})],Ne.prototype,"spatialReference",void 0),Ne=i([v("esri.rest.support.ImageAngleResult")],Ne);const fi=Ne,W=new kt({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ee=class extends P{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};i([l()],ee.prototype,"type",void 0),i([l({type:W.apiValues,json:{read:W.read,write:W.write}})],ee.prototype,"measureOperation",void 0),i([l({type:k,json:{write:!0}})],ee.prototype,"mosaicRule",void 0),i([l({type:V,json:{write:!0}})],ee.prototype,"pixelSize",void 0),i([l({json:{write:!0}})],ee.prototype,"raster",void 0),ee=i([v("esri.rest.support.BaseImageMeasureParameters")],ee);var gt;let ue=gt=class extends ee{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new gt(A({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([l({types:oe,json:{name:"fromGeometry",read:!0,write:!0}})],ue.prototype,"geometry",void 0),i([j("geometry")],ue.prototype,"writeGeometry",null),i([l({type:W.apiValues,json:{write:W.write}})],ue.prototype,"measureOperation",null),i([l({json:{read:!0}})],ue.prototype,"is3D",void 0),i([l({type:String,json:{read:be.read,write:be.write}})],ue.prototype,"linearUnit",void 0),i([l({type:String,json:{read:st.read,write:st.write}})],ue.prototype,"areaUnit",void 0),ue=gt=i([v("esri.rest.support.ImageAreaParameters")],ue);const gi=ue;let we=class extends P{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};i([l({type:Number,json:{read:!0,write:!0}})],we.prototype,"value",void 0),i([l({type:String,json:{read:!0,write:!0}})],we.prototype,"displayValue",void 0),i([l({type:Number,json:{read:!0,write:!0}})],we.prototype,"uncertainty",void 0),we=i([v("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],we);let Ae=class extends we{constructor(){super(...arguments),this.unit=null}};i([l({type:String,json:{read:be.read,write:be.write}})],Ae.prototype,"unit",void 0),Ae=i([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],Ae);let Ze=class extends we{constructor(){super(...arguments),this.unit=null}};i([l({type:String,json:{read:st.read,write:st.write}})],Ze.prototype,"unit",void 0),Ze=i([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],Ze);let Ue=class extends we{constructor(){super(...arguments),this.unit=null}};i([l({type:String,json:{read:at.read,write:at.write}})],Ue.prototype,"unit",void 0),Ue=i([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],Ue);let Re=class extends P{constructor(){super(...arguments),this.name=null,this.sensorName=null}};i([l({type:String,json:{read:!0,write:!0}})],Re.prototype,"name",void 0),i([l({type:String,json:{read:!0,write:!0}})],Re.prototype,"sensorName",void 0),Re=i([v("esri.rest.support.BaseImageMeasureResult")],Re);let Je=class extends Re{constructor(){super(...arguments),this.area=null,this.perimeter=null}};i([l({type:Ze,json:{read:!0,write:!0}})],Je.prototype,"area",void 0),i([l({type:Ae,json:{read:!0,write:!0}})],Je.prototype,"perimeter",void 0),Je=i([v("esri.rest.support.ImageAreaResult")],Je);const wi=Je;let Ke=class extends Se(P){constructor(){super(...arguments),this.outSpatialReference=null}};i([l({type:se,json:{name:"outSR",write:!0}})],Ke.prototype,"outSpatialReference",void 0),Ke=i([v("esri.rest.support.ImageBoundaryParameters")],Ke);const Ri=Ke;let _e=class extends P{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(r,n){return r==null?null:r.rings?dt.fromJSON(r):ze.fromJSON(r)}};i([l({type:Number,json:{write:!0}})],_e.prototype,"area",void 0),i([l({json:{name:"shape",write:!0}})],_e.prototype,"geometry",void 0),i([J("geometry")],_e.prototype,"readGeometry",null),_e=i([v("esri.rest.support.ImageBoundaryResult")],_e);const vi=_e;var wt;let ie=wt=class extends ee{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new wt(A({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([l({type:V,json:{read:!0,write:!0}})],ie.prototype,"fromGeometry",void 0),i([j("fromGeometry")],ie.prototype,"writeFromGeometry",null),i([l({type:V,json:{read:!0,write:!0}})],ie.prototype,"toGeometry",void 0),i([l({type:W.apiValues,json:{write:W.write}})],ie.prototype,"measureOperation",null),i([l({json:{read:!0}})],ie.prototype,"is3D",void 0),i([l({type:String,json:{read:be.read,write:be.write}})],ie.prototype,"linearUnit",void 0),i([l({type:String,json:{read:at.read,write:at.write}})],ie.prototype,"angularUnit",void 0),ie=wt=i([v("esri.rest.support.ImageDistanceParameters")],ie);const bi=ie;let Oe=class extends Re{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};i([l({type:Ae,json:{read:!0,write:!0}})],Oe.prototype,"distance",void 0),i([l({type:Ue,json:{read:!0,write:!0}})],Oe.prototype,"azimuthAngle",void 0),i([l({type:Ue,json:{read:!0,write:!0}})],Oe.prototype,"elevationAngle",void 0),Oe=i([v("esri.rest.support.ImageDistanceResult")],Oe);const Si=Oe;let pe=class extends Se(P){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(r,n,e){r!=null&&(n.geometryType=te(r),n[e]=JSON.stringify(r.toJSON()))}};i([l({types:oe,json:{read:re,write:!0}})],pe.prototype,"geometry",void 0),i([j("geometry")],pe.prototype,"writeGeometry",null),i([l({json:{write:!0}})],pe.prototype,"objectIds",void 0),i([Wt(Zt,{ignoreUnknown:!1,name:"spatialRel"})],pe.prototype,"spatialRelationship",void 0),i([l({type:Ft,json:{name:"time",write:!0}})],pe.prototype,"timeExtent",void 0),i([l({type:String,json:{write:!0}})],pe.prototype,"where",void 0),pe=i([v("esri.rest.support.ImageGPSInfoParameters")],pe);const xi=pe;let Xe=class extends Lt(P){constructor(){super(...arguments),this.id=null}};i([l({json:{write:!0}})],Xe.prototype,"id",void 0),Xe=i([v("esri.rest.support.CameraInfo")],Xe);const Ii=Xe;let X=class extends P{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(r,n){n.acquisitionDate=r==null?void 0:r.getTime()}};i([l({json:{write:!0}})],X.prototype,"id",void 0),i([l({json:{write:!0}})],X.prototype,"name",void 0),i([l({type:Date,json:{write:!0}})],X.prototype,"acquisitionDate",void 0),i([j("acquisitionDate")],X.prototype,"writeAcquisitionDate",null),i([l({json:{write:!0}})],X.prototype,"cameraID",void 0),i([l({type:V,json:{write:!0}})],X.prototype,"center",void 0),i([l({json:{write:!0}})],X.prototype,"gps",void 0),i([l({json:{write:!0}})],X.prototype,"orientation",void 0),X=i([v("esri.rest.support.ImageGPSInfo")],X);const Fi=X;let Ee=class extends P{constructor(){super(...arguments),this.images=null,this.cameras=null}};i([l({type:[Fi],json:{write:!0}})],Ee.prototype,"images",void 0),i([l({type:[Ii],json:{write:!0}})],Ee.prototype,"cameras",void 0),Ee=i([v("esri.rest.support.ImageGPSInfoResult")],Ee);const Di=Ee;var Rt;let ce=Rt=class extends ee{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}get measureOperation(){return this.operationType}clone(){return new Rt(A({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([l({type:V,json:{read:!0}})],ce.prototype,"fromGeometry",void 0),i([j("fromGeometry")],ce.prototype,"writeFromGeometry",null),i([l({type:V,json:{read:!0,write:!0}})],ce.prototype,"toGeometry",void 0),i([l({type:W.apiValues,json:{write:W.write}})],ce.prototype,"measureOperation",null),i([l({json:{read:!0}})],ce.prototype,"operationType",void 0),i([l({type:String,json:{read:be.read,write:be.write}})],ce.prototype,"linearUnit",void 0),ce=Rt=i([v("esri.rest.support.ImageHeightParameters")],ce);const Ti=ce;let Ye=class extends Re{constructor(){super(...arguments),this.height=null}};i([l({type:Ae,json:{read:!0,write:!0}})],Ye.prototype,"height",void 0),Ye=i([v("esri.rest.support.ImageHeightResult")],Ye);const ji=Ye;var vt;let C=vt=class extends P{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=JSON.stringify(s.toJSON()))}set mosaicRule(s){let r=s;r!=null&&r.mosaicMethod&&(r=k.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}writeMosaicRule(s,r,n){s!=null&&(r[n]=JSON.stringify(s.toJSON()))}set rasterFunction(s){let r=s;r!=null&&r.rasterFunction&&(r=F.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}writeRasterFunction(s,r,n){s!=null&&(r[n]=JSON.stringify(s.toJSON())),s.rasterFunctionDefinition&&(r[n]=JSON.stringify(s.rasterFunctionDefinition))}writeRasterFunctions(s,r,n){s!=null&&(r[n]=JSON.stringify(s.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(s,r,n){s!=null&&(r[n]=JSON.stringify(s))}writeTimeExtent(s,r,n){if(s!=null){const e=s.start!=null?s.start.getTime():null,t=s.end!=null?s.end.getTime():null;r[n]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new vt(A({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};i([l({json:{write:!0}})],C.prototype,"geometry",void 0),i([j("geometry")],C.prototype,"writeGeometry",null),i([l({type:k,json:{write:!0}})],C.prototype,"mosaicRule",null),i([j("mosaicRule")],C.prototype,"writeMosaicRule",null),i([l({type:F,json:{write:!0,name:"renderingRule"}})],C.prototype,"rasterFunction",null),i([j("rasterFunction")],C.prototype,"writeRasterFunction",null),i([l({type:[F],json:{write:!0,name:"renderingRules"}})],C.prototype,"rasterFunctions",void 0),i([j("rasterFunctions")],C.prototype,"writeRasterFunctions",null),i([l({type:V,json:{write:!0}})],C.prototype,"pixelSize",void 0),i([j("pixelSize")],C.prototype,"writePixelSize",null),i([l({type:Boolean,json:{write:!0}})],C.prototype,"returnGeometry",void 0),i([l({type:Boolean,json:{write:!0}})],C.prototype,"returnCatalogItems",void 0),i([l({type:Boolean,json:{write:!0}})],C.prototype,"returnPixelValues",void 0),i([l({type:Number,json:{write:!0}})],C.prototype,"maxItemCount",void 0),i([l({type:Ft,json:{write:{target:"time"}}})],C.prototype,"timeExtent",void 0),i([j("timeExtent")],C.prototype,"writeTimeExtent",null),i([l({json:{write:!0}})],C.prototype,"raster",void 0),i([l({json:{write:!0}})],C.prototype,"viewId",void 0),i([l({type:Boolean,json:{write:!0}})],C.prototype,"processAsMultidimensional",void 0),C=vt=i([v("esri.rest.support.ImageIdentifyParameters")],C);const Ut=C;let Y=class extends P{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};i([l({json:{write:!0}})],Y.prototype,"catalogItemVisibilities",void 0),i([l({type:At,json:{write:!0}})],Y.prototype,"catalogItems",void 0),i([l({type:V,json:{write:!0}})],Y.prototype,"location",void 0),i([l({json:{write:!0}})],Y.prototype,"name",void 0),i([l({json:{write:!0}})],Y.prototype,"objectId",void 0),i([l({json:{write:!0}})],Y.prototype,"processedValues",void 0),i([l({json:{write:!0}})],Y.prototype,"properties",void 0),i([l({json:{write:!0}})],Y.prototype,"value",void 0),Y=i([v("esri.rest.support.ImageIdentifyResult")],Y);const Pi=Y;var bt;let Ce=bt=class extends P{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(s,r,n){r.geometries={geometryType:"esriGeometryPoint",geometries:s.map(e=>e.toJSON())}}clone(){var s;return new bt({geometries:((s=this.geometries)==null?void 0:s.map(r=>r.clone()))??[],rasterId:this.rasterId})}};i([l({type:[V],json:{write:!0}})],Ce.prototype,"geometries",void 0),i([j("geometries")],Ce.prototype,"writeGeometry",null),i([l({type:He,json:{write:!0}})],Ce.prototype,"rasterId",void 0),Ce=bt=i([v("esri.rest.support.ImagePixelLocationParameters")],Ce);const Ni=Ce;let et=class extends P{constructor(){super(...arguments),this.geometries=null}};i([l({json:{write:!0}})],et.prototype,"geometries",void 0),et=i([v("esri.rest.support.ImagePixelLocationResult")],et);const _i=et;var St;let De=St=class extends ee{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}get measureOperation(){const{is3D:s,geometry:r}=this;return r.type==="point"?s?"point-3D":"point":s?"centroid-3D":"centroid"}clone(){return new St(A({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([l({types:oe,json:{name:"fromGeometry",read:re}})],De.prototype,"geometry",void 0),i([j("geometry")],De.prototype,"writeGeometry",null),i([l({type:W.apiValues,json:{read:W.read,write:W.write}})],De.prototype,"measureOperation",null),i([l({json:{read:!0}})],De.prototype,"is3D",void 0),De=St=i([v("esri.rest.support.ImagePointParameters")],De);const Oi=De;let tt=class extends Re{constructor(){super(...arguments),this.point=null}};i([l({type:V,json:{name:"point.value",read:!0,write:!0}})],tt.prototype,"point",void 0),tt=i([v("esri.rest.support.ImagePointResult")],tt);const Ci=tt;var xt;let z=xt=class extends P{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}set locations(s){if(s!=null&&s.length){const r=new Kt({spatialReference:s[0].spatialReference,points:s.map(({x:n,y:e})=>[n,e])});this._set("locations",s),this.geometry=r}}clone(){return new xt(A({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};i([l({types:oe,json:{read:re}})],z.prototype,"geometry",void 0),i([j("geometry")],z.prototype,"writeGeometry",null),i([l()],z.prototype,"locations",null),i([l({type:String,json:{type:ve.jsonValues,read:ve.read,write:ve.write}})],z.prototype,"interpolation",void 0),i([l({type:k,json:{write:!0}})],z.prototype,"mosaicRule",void 0),i([l({type:[String],json:{write:!0}})],z.prototype,"outFields",void 0),i([l({type:V,json:{write:!0}})],z.prototype,"pixelSize",void 0),i([l({type:String,json:{write:!0}})],z.prototype,"raster",void 0),i([l({type:Boolean,json:{write:!0}})],z.prototype,"returnFirstValueOnly",void 0),i([l({type:Number,json:{write:!0}})],z.prototype,"sampleDistance",void 0),i([l({type:Number,json:{write:!0}})],z.prototype,"sampleCount",void 0),i([l({type:Number,json:{write:!0}})],z.prototype,"sliceId",void 0),i([l({type:Ft,json:{read:{source:"time"},write:{target:"time"}}})],z.prototype,"timeExtent",void 0),z=xt=i([v("esri.rest.support.ImageSampleParameters")],z);const $i=z;let me=class extends P{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};i([l({json:{write:!0}})],me.prototype,"attributes",void 0),i([l({type:V,json:{write:!0}})],me.prototype,"location",void 0),i([l({json:{write:!0}})],me.prototype,"locationId",void 0),i([l({json:{write:!0}})],me.prototype,"rasterId",void 0),i([l({json:{write:!0}})],me.prototype,"resolution",void 0),i([l({json:{write:!0}})],me.prototype,"pixelValue",void 0),me=i([v("esri.rest.support.ImageSample")],me);const Ai=me;let rt=class extends P{constructor(){super(...arguments),this.samples=null}};i([l({type:[Ai],json:{write:!0}})],rt.prototype,"samples",void 0),rt=i([v("esri.rest.support.ImageSampleResult")],rt);const Vi=rt;let Te=class extends Se(P){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(r,n,e){n.geometries=r!=null&&r.length?{geometryType:te(r[0]),geometries:r.map(t=>({...t.toJSON(),spatialReference:void 0}))}:null}};i([l({types:[oe]})],Te.prototype,"geometries",void 0),i([j("geometries")],Te.prototype,"writeGeometries",null),i([l({type:[He],json:{write:!0}})],Te.prototype,"rasterIds",void 0),i([l({type:se,json:{name:"outSR",write:!0}})],Te.prototype,"outSpatialReference",void 0),Te=i([v("esri.rest.support.ImageToMapMultirayParameters")],Te);const Mi=Te;let de=class extends Se(P){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(r,n,e){r!=null&&(n.geometryType=te(r),n[e]={...r.toJSON(),spatialReference:void 0})}};i([l({types:oe,json:{read:re,write:!0}})],de.prototype,"geometry",void 0),i([j("geometry")],de.prototype,"writeGeometry",null),i([l({json:{write:!0}})],de.prototype,"rasterId",void 0),i([l({type:se,json:{name:"outSR",write:!0}})],de.prototype,"outSpatialReference",void 0),i([l({json:{name:"options.DOff",write:!0}})],de.prototype,"depthOffset",void 0),i([l({json:{name:"options.Adjust",write:!0}})],de.prototype,"adjust",void 0),de=i([v("esri.rest.support.ImageToMapParameters")],de);const Ji=de;let qe=class extends Se(P){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};i([l({type:String,json:{name:"uri",write:!0}})],qe.prototype,"referenceUri",void 0),i([l({type:Number,json:{write:!0}})],qe.prototype,"rasterId",void 0),qe=i([v("esri.rest.support.ImageUrlParameters")],qe);const Ei=qe;let it=class extends P{constructor(){super(...arguments),this.url=null}};i([l({json:{name:"imageURL",write:!0}})],it.prototype,"url",void 0),it=i([v("esri.rest.support.ImageUrlResult")],it);const qi=it;let je=class extends Se(P){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=JSON.stringify(s))}};i([l({types:oe,json:{read:re,write:!0}})],je.prototype,"geometry",void 0),i([j("geometry")],je.prototype,"writeGeometry",null),i([l({json:{write:!0}})],je.prototype,"rasterId",void 0),i([l({json:{name:"options.VisibleOnly",write:!0}})],je.prototype,"visibleOnly",void 0),je=i([v("esri.rest.support.MapToImageParameters")],je);const Gi=je;let ge=class extends P{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(r,n){return r.spatialReference||(r={...r,spatialReference:n.Shape.spatialReference}),V.fromJSON(r)}};i([l({types:oe,json:{name:"Shape",read:re,write:!0}})],ge.prototype,"geometry",void 0),i([l({json:{name:"Length",write:!0}})],ge.prototype,"length",void 0),i([l({json:{name:"Area",write:!0}})],ge.prototype,"area",void 0),i([l({json:{name:"Center",write:!0}})],ge.prototype,"center",void 0),i([J("center")],ge.prototype,"readCenter",null),ge=i([v("esri.rest.support.MeasureAreaFromImageResult")],ge);const zi=ge;var It;let $e=It=class extends P{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]={...s.toJSON(),spatialReference:void 0})}clone(){const s=A({geometry:this.geometry,rasterId:this.rasterId});return new It(s)}};i([l({types:oe,json:{name:"fromGeometry",read:re,write:!0}})],$e.prototype,"geometry",void 0),i([j("geometry")],$e.prototype,"writeGeometry",null),i([l({json:{write:!0}})],$e.prototype,"rasterId",void 0),$e=It=i([v("esri.rest.support.MeasureFromImageParameters")],$e);const Li=$e;let Ge=class extends P{constructor(){super(...arguments),this.geometry=null,this.length=null}};i([l({types:oe,json:{name:"Shape",read:re,write:!0}})],Ge.prototype,"geometry",void 0),i([l({json:{name:"Length",write:!0}})],Ge.prototype,"length",void 0),Ge=i([v("esri.rest.support.MeasureLengthFromImageResult")],Ge);const Ui=Ge;function Dt(s){const r=s==null?void 0:s.time;if(r&&(r.start!=null||r.end!=null)){const n=[];r.start!=null&&n.push(r.start),r.end==null||n.includes(r.end)||n.push(r.end),s.time=n.join(",")}}async function Ht(s,r,n){r=M(dr,r);const e=E(s),t=r.geometry?[r.geometry]:[],a=await Pe(t),o=r.toJSON();Dt(o);const u=a==null?void 0:a[0];u!=null&&(o.geometry=ne(u));const p=U({...e.query,f:"json",...o});return H(p,n)}async function Hi(s,r,n){var p,m,c;const e=(r=M(hi,r)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),(m=(p=r==null?void 0:r.point)==null?void 0:p.spatialReference)!=null&&m.imageCoordinateSystem&&(e.point.spatialReference=lt(r.point.spatialReference)),(c=r==null?void 0:r.spatialReference)!=null&&c.imageCoordinateSystem&&(e.spatialReference=Ve(r.spatialReference));const t=E(s),a=U({...t.query,f:"json",...e}),o=H(a,n),{data:u}=await T(`${t.path}/computeAngles`,o);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new se({wkid:0,imageCoordinateSystem:u.spatialReference}):se.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new fi(u)}async function Bi(s,r,n){var m;const e=(r=M(Ni,r)).toJSON(),{geometries:t}=r;if(t)for(let c=0;c<t.length;c++)(m=t[c].spatialReference)!=null&&m.imageCoordinateSystem&&(e.geometries.geometries[c].spatialReference=lt(t[c].spatialReference));const a=E(s),o=U({...a.query,f:"json",...e}),u=H(o,n),{data:p}=await T(`${a.path}/computePixelLocation`,u);return _i.fromJSON(p)}async function Qi(s,r,n){const e=await Ht(s,r,n),t=E(s),{data:a}=await T(`${t.path}/computeStatisticsHistograms`,e),{statistics:o}=a;return o!=null&&o.length&&o.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:o,histograms:a.histograms}}async function ki(s,r,n){const e=await Ht(s,r,n),t=E(s),{data:a}=await T(`${t.path}/computeHistograms`,e);return{histograms:a.histograms}}async function Wi(s,r,n){var d,h;const e=(r=M($i,r)).toJSON();Dt(e),(d=e.outFields)!=null&&d.length&&(e.outFields=e.outFields.join(","));const t=await Pe(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a));const o=E(s),u=U({...o.query,f:"json",...e}),p=H(u,n),{data:m}=await T(`${o.path}/getSamples`,p),c=(h=m==null?void 0:m.samples)==null?void 0:h.map(f=>{const w=f.value==="NaN"||f.value===""?null:f.value.split(" ").map(g=>Number(g));return{...f,pixelValue:w}});return Vi.fromJSON({samples:c})}async function $t(s,r,n){r=M(Ut,r);const e=E(s),t=r.geometry?[r.geometry]:[];return Pe(t).then(a=>{const o=r.toJSON(),u=a==null?void 0:a[0];u!=null&&(o.geometry=JSON.stringify(ne(u)));const p=U({...e.query,f:"json",...o}),m=H(p,n);return T(e.path+"/identify",m)}).then(a=>Pi.fromJSON(a.data))}async function Zi(s,r,n){r=M(Ti,r);const e=await ot(s,r,[r.fromGeometry,r.toGeometry],n);return ji.fromJSON(e)}async function Ki(s,r,n){r=M(gi,r);const e=await ot(s,r,[r.geometry],n);return wi.fromJSON(e)}async function Xi(s,r,n){r=M(Oi,r);const e=await ot(s,r,[r.geometry],n);return Ci.fromJSON(e)}async function Yi(s,r,n){r=M(bi,r);const e=await ot(s,r,[r.fromGeometry,r.toGeometry],n);return Si.fromJSON(e)}async function ot(s,r,n,e){const t=E(s),a=await Pe(n),o=r.toJSON();a[0]!=null&&(o.fromGeometry=JSON.stringify(ne(a[0]))),a[1]!=null&&(o.toGeometry=JSON.stringify(ne(a[1])));const u=U({...t.query,f:"json",...o}),p=H(u,e),{data:m}=await T(t.path+"/measure",p);return m}async function es(s,r,n){const e=await Bt(s,r,n);return Ui.fromJSON(e)}async function ts(s,r,n){const e=await Bt(s,r,n);return zi.fromJSON(e)}async function Bt(s,r,n){r=M(Li,r);const e=E(s),t=r.toJSON(),a=U({...e.query,f:"json",...t}),o=H(a,n),{data:u}=await T(e.path+"/measureFromImage",o);return u}function ne(s){var n;const r=s.toJSON();return(n=s.spatialReference)!=null&&n.imageCoordinateSystem&&(r.spatialReference=lt(s.spatialReference)),r}function lt(s){const{imageCoordinateSystem:r}=s;if(r){const{id:n,referenceServiceName:e}=r;return n!=null?e?{icsid:n,icsns:e}:{icsid:n}:{ics:r}}return s.toJSON()}function Ve(s,r){if(!s.imageCoordinateSystem)return yt(s);const n=lt(s),{icsid:e,icsns:t}=n;return e==null||t!=null&&!(r!=null&&r.toLowerCase().includes("/"+t.toLowerCase()+"/"))?JSON.stringify(n):`0:${e}`}async function rs(s,r,n){r=M(Ri,r);const e=E(s),t=r.toJSON();r.outSpatialReference&&(t.outSR=Ve(r.outSpatialReference));const a=U({...e.query,f:"json",...t}),o=H(a,n),{data:u}=await T(e.path+"/queryBoundary",o);return vi.fromJSON(u)}async function is(s,r,n){var d,h;const e=(r=M(xi,r)).toJSON();Dt(e),(d=e.objectIds)!=null&&d.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const t=await Pe(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a));const o=(a==null?void 0:a.spatialReference)??((h=r.geometry)==null?void 0:h.spatialReference);o&&(e.inSR=Ve(o));const u=E(s),p=U({...u.query,f:"json",...e}),m=H(p,n),{data:c}=await T(`${u.path}/queryGPSInfo`,m);return Di.fromJSON(c)}async function ss(s,r,n){const e=(r=M(Ji,r)).toJSON();r.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=ne(r.geometry)),r.depthOffset&&r.adjust||delete e.options;const t=E(s),a=U({...t.query,f:"json",...e}),o=H(a,n),{data:u}=await T(`${t.path}/imageToMap`,o);return re(u)}async function as(s,r,n){var p;const e=(r=M(Mi,r)).toJSON();(p=r.rasterIds)!=null&&p.length&&(e.rasterIds=r.rasterIds.join(","));const t=E(s),a=U({...t.query,f:"json",...e}),o=H(a,n),{data:u}=await T(`${t.path}/imageToMapMultiray`,o);return re(u)}async function ns(s,r,n){var d;const e=(r=M(Gi,r)).toJSON(),t=await Pe(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a)),r.visibleOnly||delete e.options;const o=(a==null?void 0:a.spatialReference)??((d=r.geometry)==null?void 0:d.spatialReference);o&&(e.inSR=Ve(o));const u=E(s),p=U({...u.query,f:"json",...e}),m=H(p,n),{data:c}=await T(`${u.path}/mapToImage`,m);return re(c)}async function os(s,r,n){const e=(r=M(Ei,r)).toJSON(),t=E(s),a=U({...t.query,f:"json",...e}),o=H(a,n),{data:u}=await T(`${t.path}/getImageUrl`,o);return qi.fromJSON(u)}async function ls(s,r,n){var m;const e=(r=M(mi,r)).toJSON(),t=await Pe([r.fromGeometry,r.toGeometry]);t[0]!=null&&(e.fromGeometry=ne(t[0]),t[0].spatialReference&&(e.inSR=Ve(t[0].spatialReference))),t[1]!=null&&(e.toGeometry=ne(t[1])),(m=r.objectIds)!=null&&m.length&&(e.objectIds=e.objectIds.join(","));const a=E(s),o=U({...a.query,f:"json",...e}),u=H(o,n),{data:p}=await T(`${a.path}/find`,u);return yi.fromJSON(p)}async function us(s,r,n){var N,q;const e=E(s),t=U({...e==null?void 0:e.query,f:"json"}),a=H(t,n),o=`${e==null?void 0:e.path}/${r}/info`,u=T(`${o}`,a),p=T(`${o}/keyProperties`,a),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let h=null;(N=c.statistics)!=null&&N.length&&(h=c.statistics.map(D=>({min:D[0],max:D[1],avg:D[2],stddev:D[3]})));const f=ze.fromJSON(c.extent),w=Math.ceil(f.width/c.pixelSizeX-.1),g=Math.ceil(f.height/c.pixelSizeY-.1),y=f.spatialReference,R=new V({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:y}),I=(q=c.histograms)!=null&&q.length?c.histograms:null,S=new Jr({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new Jt({width:w,height:g,bandCount:c.bandCount,extent:f,spatialReference:y,pixelSize:R,pixelType:c.pixelType.toLowerCase(),statistics:h,histograms:I,keyProperties:d,storageInfo:S})}const ps=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),cs=Yt(sr,{min:0,max:255});function ms(s){const r=JSON.stringify(s),n=r.includes('"rasterFunctionDefinition":{'),e=n?r.match(/"type":"(.*?FunctionArguments")/gi):r.match(/"rasterFunction":"(.*?")/gi),t=e==null?void 0:e.map(a=>n?a.slice(8,-18):a.slice(18,-1));return t?t.join("/"):null}const ds=s=>{let r=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new O({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(a=>typeof a=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,a){e!=null&&this.format!=="lerc"&&(t[a]=e)}writeCompressionTolerance(e,t,a){this.format==="lerc"&&e!=null&&(t[a]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?k.fromJSON(t):null}get fieldsIndex(){return this.fields?new Xt(this.fields):null}set format(e){e&&ps.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t!=null&&t.mosaicMethod&&(t=k.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const a=e||t.mosaicRule;return a?k.fromJSON(a):this._isMosaicRuleSupported(t)?k.fromJSON(t):null}writeMosaicRule(e,t,a){let o=this.mosaicRule;const u=this.definitionExpression;o?u&&u!==o.where&&(o=o.clone(),o.where=u):u&&(o=new k({where:u})),this._isValidCustomizedMosaicRule(o)&&(t[a]=o.toJSON())}writeNoData(e,t,a){e!=null&&typeof e=="number"&&(t[a]=cs(e))}readObjectIdField(e,t){if(!e){const a=t.fields.find(o=>o.type==="esriFieldTypeOID"||o.type==="oid");e=a==null?void 0:a.name}return e}get parsedUrl(){return er(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const a=t==null?void 0:t.find(({name:o})=>o===e);return a==null?void 0:a.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,a){var p,m;const o=(m=(p=t==null?void 0:t.layerDefinition)==null?void 0:p.drawingInfo)==null?void 0:m.renderer,u=gr(o,a);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!o.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),Et(u)||Pt.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,a){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var m;const e=this._rasterAttributeTableFieldPrefix,t=new Ie({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new Ie({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),o=new Ie({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?A(this.fields):[];u.push(a),(m=this.capabilities)!=null&&m.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(c=>c.name.toLowerCase()==="none")&&u.push(o),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(c=>c.name.toLowerCase()!=="none").forEach(c=>{u.push(new Ie({name:"Raster.ServicePixelValue."+c.name,alias:c.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new Ie({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new Ie({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=this.rasterInfo??{};if(p!=null){const c=p.fields.filter(d=>d.type!=="esriFieldTypeOID"&&d.name.toLowerCase()!=="value").map(d=>{const h=A(d);return h.name=e+d.name,h});u=u.concat(c)}return u}set rasterFunction(e){let t=e;t!=null&&t.rasterFunction&&(t=F.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const a=t.rasterFunctionInfos;return t.renderingRule||a!=null&&a.length&&a[0].name!=="None"?this._isRFTJson(t.renderingRule)?F.fromJSON({rasterFunctionDefinition:t.renderingRule}):F.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const a=e||t.extent.spatialReference;return a?se.fromJSON(a):null}readPixelType(e){return pt.fromJSON(e)||e}writePixelType(e,t,a){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(t[a]=pt.toJSON(e))}readVersion(e,t){let a=t.currentVersion;return a||(a=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),a}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let a=e;const{renderer:o,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&o&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(o.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,t),this._cachedRendererJson=o.toJSON());const h=await d.symbolize({bandIds:m,...e},t);a={extent:e.extent,pixelBlock:h}}else a={extent:e.extent,pixelBlock:u.symbolize({bandIds:m,...e})}}return a}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new x("imagery-layer:compute-angles","this operation is not supported on the input image service");return Hi(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new x("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Bi(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new x("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),ki(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new x("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Qi(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(e.operationType==="base-and-top"?a.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?a.mensuration.supportsHeightFromBaseAndTopShadow:a.mensuration.supportsHeightFromTopAndTopShadow))throw new x("imagery-layer:measure-height","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Zi(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsAreaAndPerimeter&&(!e.is3D||a.mensuration.supports3D)))throw new x("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Ki(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsDistanceAndAngle&&(!e.is3D||a.mensuration.supports3D)))throw new x("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Yi(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsPointOrCentroid&&(!e.is3D||a.mensuration.supports3D)))throw new x("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Xi(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new x("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new x("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return es(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new x("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new x("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return ts(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return t!=null?t.get(e):void 0}getFieldDomain(e,t){const a=this.getField(e);return a?a.domain:null}async fetchImage(e,t,a,o={}){if(e==null||t==null||a==null)throw new x("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:o.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(e,t,a,o.timeExtent);if(u==null){if(o.requestAsImageElement&&this._canRequestImageElement(this.format)){const R=document.createElement("canvas");return R.width=t,R.height=a,o.returnImageBitmap?{imageBitmap:await Ot(R,`${n(this.parsedUrl)}/exportImage`,o.signal)}:{imageOrCanvasElement:R}}const{bandIds:d,rasterInfo:h}=this,f=((d==null?void 0:d.length)||h.bandCount)??0,w=t*a,g=h.pixelType,y=[];for(let R=0;R<f;R++)y.push(mt.createEmptyBand(g,w));return{pixelData:{pixelBlock:new mt({width:t,height:a,pixels:y,mask:new Uint8Array(w),pixelType:g}),extent:e}}}const p=!!o.requestAsImageElement&&!this.pixelFilter,m=p&&!!o.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:e,width:t,height:a,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:o.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return T(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new x("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):T(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>At.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const a={...t,query:this._getQueryParams()};return us(n(this.parsedUrl),e,a)}async getCatalogItemICSInfo(e,t){var xe,he,le,Tt,jt;const{data:a}=await T(n(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),o=a==null?void 0:a.ics;if(!o)return;let u=null;try{u=(await T(n(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!(u!=null&&u.spatialReference))return{ics:o,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?T(n(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(b=>b.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:yt(m),outSR:"0:"+e},d=T(n(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...t}).then(b=>b.data).catch(()=>({})),h=5,f=(u.xmin+u.xmax)/2,w=(u.ymax-u.ymin)/(h+1),g=u.ymin+w,y=[];for(let b=0;b<h;b++)y.push({x:f,y:g+w*b});const R={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:y}),inSR:yt(m),outSR:"0:"+e},I=T(n(this.parsedUrl)+"/project",{query:this._getQueryParams(R),...t}).then(b=>b.data).catch(()=>({})),S=await Promise.all([p,d,I]);let N=S[0].ipxf;if(N==null){const b=(xe=o.geodataXform)==null?void 0:xe.xf_0;((he=b==null?void 0:b.name)==null?void 0:he.toLowerCase())==="topup"&&((le=b==null?void 0:b.coefficients)==null?void 0:le.length)===6&&(N={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:b.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const q=ze.fromJSON((jt=(Tt=S[1])==null?void 0:Tt.geometries)==null?void 0:jt[0]);q&&(q.spatialReference=new se({wkid:0,imageCoordinateSystem:o}));const D=S[2].geometries?S[2].geometries.filter(b=>(b==null?void 0:b.x)!=null&&b.y!=null&&b.x!=="NaN"&&b.y!=="NaN"):[],B=D.length;if(B<3)return{ics:o,icsToPixelTransform:N,icsExtent:q,northDirection:null};let Z=0,$=0,_=0,L=0;for(let b=0;b<B;b++)Z+=D[b].x,$+=D[b].y,_+=D[b].x*D[b].x,L+=D[b].x*D[b].y;const G=(B*L-Z*$)/(B*_-Z*Z);let ye=0;const Be=D[h-1].x>D[0].x,Qe=D[h-1].y>D[0].y;return G===1/0?ye=Qe?90:270:G===0?ye=Be?0:180:G>0?ye=Be?180*Math.atan(G)/Math.PI:180*Math.atan(G)/Math.PI+180:G<0&&(ye=Qe?180+180*Math.atan(G)/Math.PI:360+180*Math.atan(G)/Math.PI),{ics:o,icsToPixelTransform:N,icsExtent:q,northDirection:ye}}async generateRasterInfo(e,t){var p;e=M(F,e);const a={...t,query:this._getQueryParams()};if(!e||((p=e.functionName)==null?void 0:p.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??Nt(n(this.parsedUrl),this.sourceJSON,a);const o=ms(e);if(!o)throw new x("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[o])return this._functionRasterInfos[o];const u=wr(n(this.parsedUrl),e,a);this._functionRasterInfos[o]=u;try{return await u}catch(m){throw this._functionRasterInfos[o]=null,m}}getExportImageServiceParameters(e,t,a,o){var R,I;e=e.clone().shiftCentralMeridian();const u=Ve(e.spatialReference,n(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const h=(R=this.rasterFunction)==null?void 0:R.rasterFunctionDefinition,f=(I=this.renderer)==null?void 0:I.type,w=!f||f==="raster-stretch"||f==="raster-colormap"||f==="unique-value"||f==="class-breaks"||f==="raster-shaded-relief";if(m!=null&&m.length&&this._hasRasterFunction(this.rasterFunction)&&!h&&w){const S={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")S.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=S;else if(d.rasterFunction==="Colormap"){const N=d.rasterFunctionArguments.Raster;(N==null?void 0:N.rasterFunction)==="Stretch"?(S.rasterFunctionArguments.Raster=N.rasterFunctionArguments.Raster,N.rasterFunctionArguments.Raster=S):(S.rasterFunctionArguments.Raster=N,d.rasterFunctionArguments.Raster=S)}else S.rasterFunctionArguments.Raster=d,d=S;p.bandIds=void 0}else p.bandIds=m==null?void 0:m.join(",");Array.isArray(c)&&c.length>0&&(p.noData=c.join(","));const g=this._processMultidimensionalIntersection(null,o,this.exportImageServiceParameters.mosaicRule);if(g.isOutSide)return null;p.mosaicRule=g.mosaicRule!=null?JSON.stringify(g.mosaicRule):null,o=g.timeExtent,p.renderingRule=this._getRenderingRuleString(F.fromJSON(d));const y={};if(o!=null){const{start:S,end:N}=o.toJSON();S&&N&&S===N?y.time=""+S:S==null&&N==null||(y.time=`${S??"null"},${N??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+a,...p,...y}}async getSamples(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a!=null&&a.operations.supportsGetSamples))throw new x("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=A(e);const{raster:o}=this;return o&&e.raster==null&&(e.raster=o),Wi(this.url,e,this._getRequestOptions(t))}async identify(e,t){var p;if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new x("imagery-layer:identify","identify operation is not supported on the input image service");e=A(e),this.version<10.91&&((p=e.geometry)==null?void 0:p.type)==="extent"&&(e.geometry=dt.fromExtent(e.geometry));const a=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(a.isOutSide)throw new x("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=a.timeExtent,e.mosaicRule=a.mosaicRule;const{raster:o,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),o&&e.raster==null&&(e.raster=o),$t(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMap)throw new x("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return ss(n(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new x("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return as(n(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMapToImage)throw new x("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return ns(n(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsFindImages)throw new x("imagery-layer:find-images","findImages operation is not supported on the input image service");return ls(n(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsGetImageUrl)throw new x("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return os(n(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new ut({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryBoundary)throw new x("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},rs(n(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),tr(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Lr(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new x("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},is(n(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Ur(this.url,e,t)}async queryVisibleRasters(e,t){var q,D,B,Z;if(!e)throw new x("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:a,returnDomainValues:o,returnTopmostRaster:u,showNoDataRecords:p}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const h="raster.servicepixelvalue",f=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(m=e.outFields.some($=>!$.toLowerCase().includes(h)),this.version>=10.4)){const $=e.outFields.filter(L=>L.toLowerCase().includes(h)&&L.length>h.length).map(L=>{const G=L.slice(h.length+1);return[this._updateRenderingRulesFunctionName(G,f),G]});c=$.map(L=>new F({functionName:L[0]})),d=$.map(L=>L[1]);const{rasterFunction:_}=this;c.length===0?_!=null&&_.functionName?(c.push(_),d.push(_.functionName)):c=null:_!=null&&_.functionName&&!c.some(L=>L.functionName===_.functionName)&&(c.push(_),d.push(_.functionName))}const w=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:g}=this;let y=e.timeExtent||this.timeExtent;if(g){const{isOutside:$,intersection:_}=ct(g,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:(q=this.exportImageServiceParameters.mosaicRule)==null?void 0:q.multidimensionalDefinition});if($)throw new x("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");(_==null?void 0:_.timeExtent)!=null&&(y=_.timeExtent)}const R=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let I=e.geometry;this.version<10.91&&(I==null?void 0:I.type)==="extent"&&(I=dt.fromExtent(I));const S=this._getQueryParams({geometry:I,timeExtent:y,mosaicRule:R,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:c,pixelSize:a,returnCatalogItems:m,returnGeometry:w,raster:this.raster,maxItemCount:u?1:null});delete S.f;const N=new Ut(S);try{await this._generateRasterInfo(this.rasterFunction);const $=await $t(this.url,N,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),_=e.outFields,L=$.value!=null&&$.value.toLowerCase().includes("nodata");if(!(m&&!w&&((D=$==null?void 0:$.catalogItems)!=null&&D.features.length)&&(p||!L)))return this._processVisibleRastersResponse($,{returnDomainValues:o,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:_});const G=this.objectIdField||"ObjectId",ye=((B=$.catalogItems)==null?void 0:B.features)??[],Be=ye.map(he=>{var le;return(le=he.attributes)==null?void 0:le[G]}),Qe=new ut({objectIds:Be,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[G]}),xe=await this.queryRasters(Qe);return(Z=xe==null?void 0:xe.features)!=null&&Z.length&&xe.features.forEach(he=>{ye.forEach(le=>{le.attributes[G]===he.attributes[G]&&he.geometry&&(le.geometry=he.geometry.clone(),e.outSpatialReference!=null&&(le.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse($,{returnDomainValues:o,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:_})}catch{throw new x("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const a=T(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.statistics}),o=T(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.histograms}),u=await Promise.all([a,o]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,t){const a=this._rasterJobHandler.instance;return a?a.createFlowMesh(e,t):Gr(e.meshType,e.simulationSettings,e.flowData,t.signal!=null?t.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return _r(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,a=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Nt(n(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),Rr(p,t),p)),o=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([a,o,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),Pt.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([rr(()=>this.rasterFunction,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,t){var g;const a=this.timeInfo,{multidimensionalInfo:o}=this.serviceRasterInfo;if(e==null||o==null||t==null||(a==null?void 0:a.startField)==null)return e;const{startField:u}=a,p=o.variables.some(y=>y.dimensions.some(R=>R.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(g=e.multidimensionalDefinition)==null?void 0:g.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter(y=>y.dimensionName===p),c=t.start!=null?t.start.getTime():null,d=t.end!=null?t.end.getTime():null,h=c==null||d==null||c===d,f=h?[c||d]:[[c,d]],w=this.version>=10.8;if(m.length)m.forEach(y=>{y.dimensionName===p&&(w?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=h,y.values=f))});else if(!w){const y=e.multidimensionalDefinition.filter(R=>R.variableName!=null&&R.dimensionName==null);y.length?y.forEach(R=>{R.dimensionName=p,R.isSlice=h,R.values=f}):e.multidimensionalDefinition.push(new Or({variableName:"",dimensionName:p,isSlice:h,values:f}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new x("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?M(ut,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new vr;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:a}=this;return e.type==="unique-value"&&this._hasRasterFunction(a)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&br(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var a;let t=this.sourceJSON;if(!t){const{data:o,ssl:u}=await T(n(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=o,this.sourceJSON=t,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((a=t.capabilities)==null?void 0:a.toLowerCase().split(",").map(o=>o.trim()).indexOf("tilesonly"))>-1)throw new x("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var o;if(!e)return!1;const t=this._isMosaicDataset(e),a=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((o=e.fields)==null?void 0:o.length)>1);return t||a}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:t,functionArguments:a}=e,o=(t==null?void 0:t.toLowerCase())==="resample",u=(a==null?void 0:a.ResampleType)||(a==null?void 0:a.resampleType);return o&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var o,u,p;const t=this._isPicture(),{rasterInfo:a}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const m=(u=(o=this.mosaicRule)==null?void 0:o.multidimensionalDefinition)==null?void 0:u[0].variableName,c=Sr({variableName:m,rasterFunctionName:(p=this.rasterFunction)==null?void 0:p.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&a.bandCount>=3){const h=(c==null?void 0:c.bandIds)??xr(a);!h||a.bandCount===3&&h[0]===0&&h[1]===1&&h[2]===2||(this.bandIds=h)}e||(e=(c==null?void 0:c.renderer)??Ir(a,{bandIds:this.bandIds,variableName:this.rasterFunction?null:m}));const d=Fr(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=d,this.symbolizer.rasterInfo=a):this.symbolizer=new Er({rendererJSON:d,rasterInfo:a}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){(e==null?void 0:e.renderingRule)!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:a}=this;return{raster:t,viewId:a,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,a){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):_t(e,t,a)}async _getRasterFunctionInfos(e){var a;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(a=(await T(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:a.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:a,returnImageBitmap:o,signal:u}=e;if(a&&this._canRequestImageElement(t.format)){const g=`${n(this.parsedUrl)}/exportImage`,{data:y}=await T(g,{responseType:o?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return y instanceof Blob?{imageBitmap:await Ot(y,g,u),params:t}:{imageOrCanvasElement:y,params:t}}const p=this._initJobHandler(),m=T(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=t.format||"jpgpng";let h=d;if(h!=="bsq"&&h!=="bip"&&(h=qr(c)),!h)throw new x("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const f={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(h==="png"||h==="jpg")?_t(c,{useCanvas:!0,...t},f):this._decodePixelBlock(c,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:d},f)),extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var a;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=Cr(e,{multidimensionalSubset:this.multidimensionalSubset});if(t!=null&&t.length>0){this.mosaicRule=this.mosaicRule||new k;const o=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&((a=this.rasterFunction.functionName)==null?void 0:a.toLowerCase())!=="none"&&t.forEach(u=>u.variableName=""),t=t.filter(({variableName:u,dimensionName:p})=>u&&u!=="*"||p),!(o!=null&&o.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var S,N,q;t=t||{};const a=e.value,{templateRRFunctionNames:o,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=t,c=e.processedValues;let d=(S=e.catalogItems)==null?void 0:S.features,h=((q=(N=e.properties)==null?void 0:N.Values)==null?void 0:q.map(D=>D.replaceAll(/ /gi,", ")))||[];const f=this.objectIdField||"ObjectId",w=typeof a=="string"&&a.toLowerCase().includes("nodata"),g=[];if(a&&!d&&!w){const D={};D[f]=0,h=[a],d=[new ir({geometry:this.fullExtent,attributes:D})]}if(!d)return[];let y,R,I;this._updateResponseFieldNames(d,m),w&&!u&&(d=[]);for(let D=0;D<d.length;D++){if(y=d[D],a!=null){if(R=h[D],I=this.rasterFunction&&c&&c.length>0&&o&&o.length>0&&o.includes(this.rasterFunction.functionName)?c[o.indexOf(this.rasterFunction.functionName)]:a,R.toLowerCase()==="nodata"&&!u)continue;const B="Raster.ItemPixelValue",Z="Raster.ServicePixelValue";y.attributes[B]=R,y.attributes[Z]=I,this._updateFeatureWithMagDirValues(y,R);const $=this.fields&&this.fields.length>0;let _=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?$?R:a:I;this.rasterFunction||(_=$?R:a),this._updateFeatureWithRasterAttributeTableValues(y,_)}if(y.sourceLayer=y.layer=this,p&&this._updateFeatureWithDomainValues(y),o&&c&&o.length===c.length)for(let B=0;B<o.length;B++){const Z="Raster.ServicePixelValue."+o[B];y.attributes[Z]=c[B]}g.push(d[D])}return g}_processMultidimensionalIntersection(e,t,a){const{multidimensionalSubset:o}=this;if(!o)return{isOutSide:!1,timeExtent:t,mosaicRule:a=this._combineMosaicRuleWithTimeExtent(a,t)};if(o){const{isOutside:u,intersection:p}=ct(o,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};(p==null?void 0:p.timeExtent)!=null&&(t=p.timeExtent)}if(a=this._combineMosaicRuleWithTimeExtent(a,t),a==null?void 0:a.multidimensionalDefinition){const{isOutside:u}=ct(o,{multidimensionalDefinition:a.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:a}}_updateFeatureWithRasterAttributeTableValues(e,t){const a=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(a==null)return;const{features:o,fields:u}=a,p=u.map(c=>c.name).find(c=>c.toLowerCase()==="value");if(!p)return;const m=o.filter(c=>c.attributes[p]===(t!=null?parseInt(t,10):null));m&&m[0]&&u.forEach(c=>{const d=this._rasterAttributeTableFieldPrefix+c.name;e.attributes[d]=m[0].attributes[c.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const a=t.split(/,\s*/).map(c=>parseFloat(c)),o=a.map(c=>[c]),u=a.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new mt({height:1,width:1,pixelType:"f32",pixels:o,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new ze(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:zr([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(a=>a.domain&&a.domain.type==="coded-value");t!=null&&t.forEach(a=>{const o=e.attributes[a.name];if(o!=null){const u=a.domain.codedValues.find(p=>p.code===o);u&&(e.attributes[a.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const a=this.fieldsIndex;a!=null&&e.forEach(o=>{var u;if(o!=null&&o.attributes)for(const p of t){const m=(u=a.get(p))==null?void 0:u.name;m&&m!==p&&(o.attributes[p]=o.attributes[m],delete o.attributes[m])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return(e==null?void 0:e.functionName)!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const a=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(a)?t.get(a):e}_isRFTJson(e){return(e==null?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:a,rasterFunction:o}=this;o&&"rasterFunction"in e&&e.rasterFunction==null&&(e.rasterFunction=o),a&&e.mosaicRule==null&&(e.mosaicRule=a),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){var R;const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(I=>I.trim()):["image","catalog"],{currentVersion:a,advancedQueryCapabilities:o,maxRecordCount:u}=e,p=t.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!(!e.spatialReference&&!((R=e.extent)!=null&&R.spatialReference)),d=t.includes("edit"),h=t.includes("mensuration")&&c,f=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(I=>I.trim()),w=h&&f.includes("basic"),g=this._isMosaicDataset(e)&&t.includes("catalog"),y=t.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:a>=11.2&&g,supportsImageToMapMultiray:a>=11.2&&g,supportsMapToImage:a>=11.2&&g,supportsFindImages:a>=11.2&&g,supportsGetImageUrl:a>=11.3&&y,supportsMeasure:h,supportsMeasureFromImage:a>=11.2,supportsDownload:y,supportsQuery:g&&e.fields&&e.fields.length>0,supportsGetSamples:a>=10.2&&p,supportsProject:a>=10.3&&p,supportsComputeStatisticsHistograms:a>=10.4&&p,supportsQueryBoundary:a>=10.6&&p,supportsCalculateVolume:a>=10.7&&m,supportsComputePixelLocation:a>=10.7&&g,supportsComputeAngles:a>=10.91,supportsQueryGPSInfo:a>=11.2&&g,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!(o!=null&&o.supportsStatistics),supportsOrderBy:!!(o!=null&&o.supportsOrderBy),supportsDistinct:!!(o!=null&&o.supportsDistinct),supportsPagination:!!(o!=null&&o.supportsPagination),supportsStandardizedQueriesOnly:!!(o!=null&&o.useStandardizedQueries),supportsPercentileStatistics:!!(o!=null&&o.supportsPercentileStatistics),supportsCentroid:!!(o!=null&&o.supportsReturningGeometryCentroid),supportsDistance:!!(o!=null&&o.supportsQueryWithDistance),supportsExtent:!!(o!=null&&o.supportsReturningQueryExtent),supportsGeometryProperties:!!(o!=null&&o.supportsReturningGeometryProperties),supportsHavingClause:!!(o!=null&&o.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(o!=null&&o.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:w,supportsAreaAndPerimeter:w,supportsPointOrCentroid:w,supportsHeightFromBaseAndTop:h&&f.includes("base-top height"),supportsHeightFromBaseAndTopShadow:h&&f.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:h&&f.includes("top-top shadow height"),supports3D:h&&f.includes("3d")}}}};function n(e){return(e==null?void 0:e.path)??""}return i([l({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),i([l({clonable:!1})],r.prototype,"_rasterJobHandler",void 0),i([l({clonable:!1})],r.prototype,"_cachedRendererJson",void 0),i([l({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),i([J("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),i([l({readOnly:!0})],r.prototype,"_rasterAttributeTableFieldPrefix",void 0),i([l({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),i([l()],r.prototype,"adjustAspectRatio",void 0),i([l({type:[He],json:{write:!0}})],r.prototype,"bandIds",void 0),i([J("bandIds")],r.prototype,"readBandIds",null),i([l({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),i([J("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),i([l({type:Number})],r.prototype,"compressionQuality",void 0),i([j("compressionQuality")],r.prototype,"writeCompressionQuality",null),i([l({type:Number})],r.prototype,"compressionTolerance",void 0),i([j("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),i([l({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),i([l({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),i([J("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),i([l({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),i([l({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),i([l()],r.prototype,"rasterInfo",void 0),i([l({readOnly:!0,type:[Ie]})],r.prototype,"fields",void 0),i([l({readOnly:!0})],r.prototype,"fieldsIndex",null),i([l({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],r.prototype,"format",null),i([J("service","format",["serviceDataType"])],r.prototype,"readFormat",null),i([l({type:ze})],r.prototype,"fullExtent",void 0),i([l({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),i([l({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),i([l({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),i([l({type:String,json:{type:ve.jsonValues,read:ve.read,write:ve.write}})],r.prototype,"interpolation",void 0),i([l()],r.prototype,"minScale",void 0),i([J("service","minScale")],r.prototype,"readMinScale",null),i([l()],r.prototype,"maxScale",void 0),i([J("service","maxScale")],r.prototype,"readMaxScale",null),i([l({type:k})],r.prototype,"mosaicRule",null),i([J("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),i([j("mosaicRule")],r.prototype,"writeMosaicRule",null),i([l()],r.prototype,"multidimensionalInfo",void 0),i([l({type:yr,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),i([l({json:{type:He}})],r.prototype,"noData",void 0),i([j("noData")],r.prototype,"writeNoData",null),i([l({type:String,json:{type:Le.jsonValues,read:Le.read,write:Le.write}})],r.prototype,"noDataInterpretation",void 0),i([l({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),i([J("objectIdField")],r.prototype,"readObjectIdField",null),i([l({readOnly:!0})],r.prototype,"geometryType",void 0),i([l({})],r.prototype,"typeIdField",void 0),i([l({})],r.prototype,"types",void 0),i([l({readOnly:!0})],r.prototype,"parsedUrl",null),i([l({type:Function})],r.prototype,"pixelFilter",void 0),i([l()],r.prototype,"raster",void 0),i([l({readOnly:!0})],r.prototype,"sourceType",void 0),i([J("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),i([l()],r.prototype,"viewId",void 0),i([l()],r.prototype,"renderer",null),i([l({types:fr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:hr,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],r.prototype,"internalRenderer",null),i([J("internalRenderer")],r.prototype,"readRenderer",null),i([j("internalRenderer")],r.prototype,"writeRenderer",null),i([l({clonable:!1})],r.prototype,"symbolizer",void 0),i([l(Tr)],r.prototype,"opacity",void 0),i([l({readOnly:!0})],r.prototype,"rasterFields",null),i([l({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),i([l({type:F,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),i([J("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),i([l({readOnly:!0})],r.prototype,"serviceDataType",void 0),i([l({readOnly:!0,type:se})],r.prototype,"spatialReference",void 0),i([J("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),i([l({json:{type:pt.jsonValues}})],r.prototype,"pixelType",void 0),i([J("pixelType")],r.prototype,"readPixelType",null),i([j("pixelType")],r.prototype,"writePixelType",null),i([l({constructOnly:!0,type:Jt})],r.prototype,"serviceRasterInfo",void 0),i([l()],r.prototype,"sourceJSON",void 0),i([l(jr)],r.prototype,"url",void 0),i([l({readOnly:!0})],r.prototype,"version",void 0),i([J("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=i([v("esri.layers.mixins.ArcGISImageService")],r),r};let Q=class extends ar(Zr(nr(Qr(kr(Dr(ds(Wr(Br(Hr(mr(Se(pr)))))))))))){constructor(...s){super(...s),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=or(async(r,n,e)=>{const{save:t,saveAs:a}=await lr(()=>import("./imageryUtils-5noXLVq8.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]));switch(r){case ke.SAVE:return t(this,n);case ke.SAVE_AS:return a(this,e,n)}})}normalizeCtorArgs(s,r){return typeof s=="string"?{url:s,...r}:s}load(s){const r=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(ur).then(()=>this._fetchService(r))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(s){this._set("legendEnabled",s)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(s){this._set("listMode",s)}writeOperationalLayerType(s,r,n){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";r[n]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var s;return!(!this.raster||!((s=this.url)!=null&&s.toLowerCase().includes("/rasterrendering/imageserver")))}createPopupTemplate(s){var p;const r=this.rasterFields,n=this.title,e=new Set;let t=!1,a=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const o=new Set;t&&o.add("raster.itempixelvalue");for(const m of r){const c=m.name.toLowerCase();o.has(c)||c.includes("raster.servicepixelvalue.")||e.add(m.name)}a&&e.add("raster.magnitude").add("raster.direction");const u=Xr({fields:r,title:n},{...s,visibleFieldNames:e});return u!=null&&u.fieldInfos&&((p=this.rasterInfo)!=null&&p.pixelType.startsWith("f"))&&u.fieldInfos.forEach(({format:m,fieldName:c})=>{m&&c&&/^raster\.(item|service)pixelvalue/i.test(c)&&(m.places=2)}),u}queryFeatures(s,r){return this.queryRasters(s,r).then(n=>{if(n!=null&&n.features)for(const e of n.features)e.layer=e.sourceLayer=this;return n})}queryFeatureCount(s,r){return this.queryRasterCount(s,r)}redraw(){this.emit("redraw")}async save(s){return this._debouncedSaveOperations(ke.SAVE,s)}async saveAs(s,r){return this._debouncedSaveOperations(ke.SAVE_AS,r,s)}serviceSupportsSpatialReference(s){return Kr(this,s)}write(s,r){if(!this._isPreviewLayer)return super.write(s,r);if(r!=null&&r.messages){const n=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new x("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};i([l(Pr)],Q.prototype,"legendEnabled",null),i([l({type:["show","hide"]})],Q.prototype,"listMode",null),i([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Q.prototype,"isReference",void 0),i([l({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Q.prototype,"operationalLayerType",void 0),i([j("web-map","operationalLayerType")],Q.prototype,"writeOperationalLayerType",null),i([l(Nr)],Q.prototype,"popupEnabled",void 0),i([l({type:cr,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Q.prototype,"popupTemplate",void 0),i([l({readOnly:!0})],Q.prototype,"defaultPopupTemplate",null),i([l({readOnly:!0,json:{read:!1}})],Q.prototype,"type",void 0),i([l({readOnly:!0})],Q.prototype,"_isPreviewLayer",null),Q=i([v("esri.layers.ImageryLayer")],Q);const ma=Q;export{ma as default};
//# sourceMappingURL=ImageryLayer-DGflGzHO.js.map

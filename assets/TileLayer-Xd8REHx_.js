import{ez as _,eA as S,z as T,ag as v,aQ as b,U as c,f5 as w,eX as $,I as h,q as O,X as U,cU as R,aG as W,eB as j,j as a,m as o,o as P,u as A,bd as B,k as I}from"./index-CaYX07dN.js";import{S as L}from"./MultiOriginJSONSupport-Bi5uKwj-.js";import{i as M}from"./APIKeyMixin-DwT4LJn1.js";import{p as N}from"./ArcGISCachedService-DPKcFt5y.js";import{m as k,f as C,t as D}from"./SublayersOwner-CwCg1dBS.js";import{l as J}from"./ArcGISService-DJzSwl4t.js";import{e as q}from"./CustomParametersMixin-Cb_T5l_q.js";import{b as G}from"./OperationalLayer-Da4YsTIo.js";import{j as V}from"./PortalLayer-Ciik5dRx.js";import{f as z}from"./RefreshableLayer-CkRekPl3.js";import{y as E}from"./commonProperties-DBW-YxFy.js";import{o as y}from"./imageBitmapUtils-CBbpC9p1.js";import"./TileInfo-BSYq2maB.js";import"./TileKey-DZd6gJy7.js";import"./TileInfoTilemapCache-C4AebiIg.js";import"./TilemapCache-eQpimBdT.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./portalItemUtils-BBW6qNW0.js";import"./CollectionFlattener-Cs8eeHoL.js";import"./QueryTask-D_Cum4xb.js";import"./infoFor3D-CxdEiWhp.js";import"./executeForIds-BJEnLa6A.js";import"./featureConversionUtils-BAYsIod5.js";import"./featureLayerUtils-2pagGweI.js";import"./uuid-Cl5lrJ4c.js";import"./FeatureType-IFBZU2EE.js";import"./FeatureTemplate-HnWbOSRK.js";import"./labelingInfo-Bp9dmvH0.js";import"./labelUtils-BSe5K0uY.js";import"./LayerFloorInfo-C-D_cv9C.js";import"./Relationship-BeINTIYG.js";import"./serviceCapabilitiesUtils-Du53SxUj.js";import"./popupUtils-BRhiAAWL.js";import"./sublayerUtils-_ON69sXT.js";var m;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let s=m=class extends _(S(k(N(C(G(V(J(L(z(M(q(j)))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(T).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){var r;const e=(r=this.parsedUrl)==null?void 0:r.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){var t;return(e=e||((t=r.tileInfo)==null?void 0:t.spatialReference))&&v.fromJSON(e)}writeSublayers(e,r,t,i){if(!this.loaded||!e)return;const p=e.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray(),n=[],u={writeSublayerStructure:!1,...i};p.forEach(l=>{const d=l.write({},u);n.push(d)}),n.some(l=>Object.keys(l).length>1)&&(r.layers=n)}get tileServers(){var e;return this._getDefaultTileServers((e=this.parsedUrl)==null?void 0:e.path)}castTileServers(e){return Array.isArray(e)?e.map(r=>b(r).path):null}fetchTile(e,r,t,i={}){const{signal:p}=i,n=this.getTileUrl(e,r,t),u={responseType:"image",signal:p,query:{...this.refreshParameters}};return c(n,u).then(l=>l.data)}async fetchImageBitmapTile(e,r,t,i={}){const{signal:p}=i;if(this.fetchTile!==m.prototype.fetchTile){const d=await this.fetchTile(e,r,t,i);return y(d,e,r,t,p)}const n=this.getTileUrl(e,r,t),u={responseType:"blob",signal:p,query:{...this.refreshParameters}},{data:l}=await c(n,u);return y(l,e,r,t,p)}getTileUrl(e,r,t){var u,l;const i=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,p=w({...(u=this.parsedUrl)==null?void 0:u.query,blankTile:!i&&null,...this.customParameters,token:this.apiKey}),n=this.tileServers;return`${n&&n.length?n[r%n.length]:(l=this.parsedUrl)==null?void 0:l.path}/tile/${e}/${r}/${t}${p?"?"+p:""}`}loadAll(){return $(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new h("tile-layer:undefined-url","layer's url is not defined");const i=O(this.parsedUrl.path);if(i!=null&&i.serverType==="ImageServer")throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)}).then(r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!U(t))return this._fetchServerVersion(t,e).then(i=>{this.read({currentVersion:i})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!R(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(i=>{if(i.data&&i.data.currentVersion)return i.data.currentVersion;throw new h("tile-layer:version-not-available")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(e==null)return null;let r;e=e.toLowerCase();for(let t=0,i=f.length;t<i;t++)if(r=f[t],r.toLowerCase().includes(e))return W("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(e==null)return[];const r=e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};a([o({readOnly:!0})],s.prototype,"attributionDataUrl",null),a([o({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),a([o({json:{read:!0,write:!0}})],s.prototype,"blendMode",void 0),a([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),a([o({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),a([o({type:Boolean})],s.prototype,"resampling",void 0),a([o()],s.prototype,"sourceJSON",void 0),a([o({type:v})],s.prototype,"spatialReference",void 0),a([P("spatialReference",["spatialReference","tileInfo"])],s.prototype,"readSpatialReference",null),a([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),a([o({readOnly:!0})],s.prototype,"sublayers",void 0),a([A("sublayers",{layers:{type:[D]}})],s.prototype,"writeSublayers",null),a([o({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),a([o()],s.prototype,"tileServers",null),a([B("tileServers")],s.prototype,"castTileServers",null),a([o({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),a([o(E)],s.prototype,"url",void 0),s=m=a([I("esri.layers.TileLayer")],s);const g=Symbol("default-fetch-tile");s.prototype.fetchTile[g]=!0;const Ue=s;export{Ue as default};
//# sourceMappingURL=TileLayer-Xd8REHx_.js.map
